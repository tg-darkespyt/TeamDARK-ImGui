// Pubgm India-64bit (3.4.0) SDK by BangJO [Z] DM @isar_hackJO To Buy Tool SDK

#include "../SDK.hpp"

namespace SDK
{
//---------------------By BangJO---------------------------
//Functions
//---------------------By BangJO---------------------------

// Function Addons.AdditiveCurveMoveObj.LeaveAdditiveCurveMove
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UAdditiveCurveMoveObj::LeaveAdditiveCurveMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AdditiveCurveMoveObj.LeaveAdditiveCurveMove");

	UAdditiveCurveMoveObj_LeaveAdditiveCurveMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AdditiveCurveMoveObj.EnterAdditiveCurveMove
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UAdditiveCurveMoveObj::EnterAdditiveCurveMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AdditiveCurveMoveObj.EnterAdditiveCurveMove");

	UAdditiveCurveMoveObj_EnterAdditiveCurveMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousBoatDust.OnEnterWater
// (Final, Native, Protected)
// Parameters:
// bool                           IsInWater                      (Parm, ZeroConstructor, IsPlainOldData)

void UAmphibiousBoatDust::OnEnterWater(bool IsInWater)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousBoatDust.OnEnterWater");

	UAmphibiousBoatDust_OnEnterWater_Params params;
	params.IsInWater = IsInWater;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousBoatAudioMovement.OnVehiclePhysicsWakeUp
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     WakingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void UAmphibiousBoatAudioMovement::OnVehiclePhysicsWakeUp(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousBoatAudioMovement.OnVehiclePhysicsWakeUp");

	UAmphibiousBoatAudioMovement_OnVehiclePhysicsWakeUp_Params params;
	params.WakingComponent = WakingComponent;
	params.BoneName = BoneName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousBoatAudioMovement.OnVehiclePhysicsSleep
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     SleepingComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void UAmphibiousBoatAudioMovement::OnVehiclePhysicsSleep(class UPrimitiveComponent* SleepingComponent, const struct FName& BoneName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousBoatAudioMovement.OnVehiclePhysicsSleep");

	UAmphibiousBoatAudioMovement_OnVehiclePhysicsSleep_Params params;
	params.SleepingComponent = SleepingComponent;
	params.BoneName = BoneName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousBoatAudioMovement.OnSimulatePhysicsChange
// (Final, Native, Protected)
// Parameters:
// bool                           bSimulatePhysics               (Parm, ZeroConstructor, IsPlainOldData)

void UAmphibiousBoatAudioMovement::OnSimulatePhysicsChange(bool bSimulatePhysics)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousBoatAudioMovement.OnSimulatePhysicsChange");

	UAmphibiousBoatAudioMovement_OnSimulatePhysicsChange_Params params;
	params.bSimulatePhysics = bSimulatePhysics;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousSlidingVehicle.OnRep_WaterState
// (Final, Native, Public)

void AAmphibiousSlidingVehicle::OnRep_WaterState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousSlidingVehicle.OnRep_WaterState");

	AAmphibiousSlidingVehicle_OnRep_WaterState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousSlidingVehicle.OnRep_UseSyncatClient
// (Native, Public)

void AAmphibiousSlidingVehicle::OnRep_UseSyncatClient()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousSlidingVehicle.OnRep_UseSyncatClient");

	AAmphibiousSlidingVehicle_OnRep_UseSyncatClient_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousSlidingVehicle.HandleContactWater
// (Final, Native, Public)
// Parameters:
// bool                           bInContactingWater             (Parm, ZeroConstructor, IsPlainOldData)

void AAmphibiousSlidingVehicle::HandleContactWater(bool bInContactingWater)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousSlidingVehicle.HandleContactWater");

	AAmphibiousSlidingVehicle_HandleContactWater_Params params;
	params.bInContactingWater = bInContactingWater;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AmphibiousSlidingVehicle.GetFloatingVehicleMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFloatingVehicleVehicleMovementComponent2* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFloatingVehicleVehicleMovementComponent2* AAmphibiousSlidingVehicle::GetFloatingVehicleMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AmphibiousSlidingVehicle.GetFloatingVehicleMovement");

	AAmphibiousSlidingVehicle_GetFloatingVehicleMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.AnimInstanceDiving.OnHandlePlayerAnimMontagePlayDelegate
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            MontageToPlay                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantsPlay                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StartSection                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          StartPos                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyJumpToSectionWhilePlaying (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   IgnoreStopSection              (Parm, ZeroConstructor, IsPlainOldData)

void UAnimInstanceDiving::OnHandlePlayerAnimMontagePlayDelegate(class UAnimMontage* MontageToPlay, bool bWantsPlay, float PlayRate, const struct FName& StartSection, float StartPos, bool bOnlyJumpToSectionWhilePlaying, const struct FName& IgnoreStopSection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceDiving.OnHandlePlayerAnimMontagePlayDelegate");

	UAnimInstanceDiving_OnHandlePlayerAnimMontagePlayDelegate_Params params;
	params.MontageToPlay = MontageToPlay;
	params.bWantsPlay = bWantsPlay;
	params.PlayRate = PlayRate;
	params.StartSection = StartSection;
	params.StartPos = StartPos;
	params.bOnlyJumpToSectionWhilePlaying = bOnlyJumpToSectionWhilePlaying;
	params.IgnoreStopSection = IgnoreStopSection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.SetRunStop
// (Native, Public)

void UAnimInstanceLeggedAnimal::SetRunStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.SetRunStop");

	UAnimInstanceLeggedAnimal_SetRunStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.SetJump
// (Native, Public)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)

void UAnimInstanceLeggedAnimal::SetJump(int JumpCount)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.SetJump");

	UAnimInstanceLeggedAnimal_SetJump_Params params;
	params.JumpCount = JumpCount;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.SetAnimVault
// (Native, Public)

void UAnimInstanceLeggedAnimal::SetAnimVault()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.SetAnimVault");

	UAnimInstanceLeggedAnimal_SetAnimVault_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.ResetRunStop
// (Final, Native, Public)

void UAnimInstanceLeggedAnimal::ResetRunStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.ResetRunStop");

	UAnimInstanceLeggedAnimal_ResetRunStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.ResetJump
// (Final, Native, Public)

void UAnimInstanceLeggedAnimal::ResetJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.ResetJump");

	UAnimInstanceLeggedAnimal_ResetJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.ResetAnimVault
// (Final, Native, Public)

void UAnimInstanceLeggedAnimal::ResetAnimVault()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.ResetAnimVault");

	UAnimInstanceLeggedAnimal_ResetAnimVault_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.HandlePlayerAnimMontageExtraPlayDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            MontageToPlay                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantsPlay                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   StartSection                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          StartPos                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyJumpToSectionWhilePlaying (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   IgnoreStopSection              (Parm, ZeroConstructor, IsPlainOldData)

void UAnimInstanceLeggedAnimal::HandlePlayerAnimMontageExtraPlayDelegate(class UAnimMontage* MontageToPlay, bool bWantsPlay, float PlayRate, const struct FName& StartSection, float StartPos, bool bOnlyJumpToSectionWhilePlaying, const struct FName& IgnoreStopSection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.HandlePlayerAnimMontageExtraPlayDelegate");

	UAnimInstanceLeggedAnimal_HandlePlayerAnimMontageExtraPlayDelegate_Params params;
	params.MontageToPlay = MontageToPlay;
	params.bWantsPlay = bWantsPlay;
	params.PlayRate = PlayRate;
	params.StartSection = StartSection;
	params.StartPos = StartPos;
	params.bOnlyJumpToSectionWhilePlaying = bOnlyJumpToSectionWhilePlaying;
	params.IgnoreStopSection = IgnoreStopSection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.CalcWallRunParams
// (Final, Native, Public, BlueprintCallable)

void UAnimInstanceLeggedAnimal::CalcWallRunParams()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.CalcWallRunParams");

	UAnimInstanceLeggedAnimal_CalcWallRunParams_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.CalcMoveDirection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UAnimInstanceLeggedAnimal::CalcMoveDirection(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.CalcMoveDirection");

	UAnimInstanceLeggedAnimal_CalcMoveDirection_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.CalcHurtDir
// (Final, Native, Public, BlueprintCallable)

void UAnimInstanceLeggedAnimal::CalcHurtDir()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.CalcHurtDir");

	UAnimInstanceLeggedAnimal_CalcHurtDir_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceLeggedAnimal.CalcGaitAndStride
// (Final, Native, Public, BlueprintCallable)

void UAnimInstanceLeggedAnimal::CalcGaitAndStride()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceLeggedAnimal.CalcGaitAndStride");

	UAnimInstanceLeggedAnimal_CalcGaitAndStride_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimInstanceWingFlyAnimal.InitSyncNode
// (Final, Native, Public)

void UAnimInstanceWingFlyAnimal::InitSyncNode()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimInstanceWingFlyAnimal.InitSyncNode");

	UAnimInstanceWingFlyAnimal_InitSyncNode_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AnimNotifyState_EarlyBlendOutBase.Received_CanBlendOut
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*  MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UAnimMontage*            InMontage                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAnimNotifyState_EarlyBlendOutBase::Received_CanBlendOut(class USkeletalMeshComponent* MeshComponent, class UAnimMontage* InMontage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AnimNotifyState_EarlyBlendOutBase.Received_CanBlendOut");

	UAnimNotifyState_EarlyBlendOutBase_Received_CanBlendOut_Params params;
	params.MeshComponent = MeshComponent;
	params.InMontage = InMontage;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.AutoTestManagerBPLibrary.StopMergedTest
// (Final, Native, Static, Private, BlueprintCallable)

void UAutoTestManagerBPLibrary::StopMergedTest()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StopMergedTest");

	UAutoTestManagerBPLibrary_StopMergedTest_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromFileWithNum
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            MergedNum                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OriginNum                      (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedTestFromFileWithNum(float TestIntervel, int MergedNum, int OriginNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromFileWithNum");

	UAutoTestManagerBPLibrary_StartMergedTestFromFileWithNum_Params params;
	params.TestIntervel = TestIntervel;
	params.MergedNum = MergedNum;
	params.OriginNum = OriginNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromFile
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedTestFromFile(float TestIntervel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromFile");

	UAutoTestManagerBPLibrary_StartMergedTestFromFile_Params params;
	params.TestIntervel = TestIntervel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromAISuitNum
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            MergedNum                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OriginNum                      (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedTestFromAISuitNum(float TestIntervel, int MergedNum, int OriginNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedTestFromAISuitNum");

	UAutoTestManagerBPLibrary_StartMergedTestFromAISuitNum_Params params;
	params.TestIntervel = TestIntervel;
	params.MergedNum = MergedNum;
	params.OriginNum = OriginNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedRandomTestWithNum
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            TestNum                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            MergedNum                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OriginNum                      (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedRandomTestWithNum(float TestIntervel, int TestNum, int MergedNum, int OriginNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedRandomTestWithNum");

	UAutoTestManagerBPLibrary_StartMergedRandomTestWithNum_Params params;
	params.TestIntervel = TestIntervel;
	params.TestNum = TestNum;
	params.MergedNum = MergedNum;
	params.OriginNum = OriginNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedRandomTest
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            TestNum                        (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedRandomTest(float TestIntervel, int TestNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedRandomTest");

	UAutoTestManagerBPLibrary_StartMergedRandomTest_Params params;
	params.TestIntervel = TestIntervel;
	params.TestNum = TestNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedAllTestWithNum
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            MergedNum                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            OriginNum                      (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedAllTestWithNum(float TestIntervel, int MergedNum, int OriginNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedAllTestWithNum");

	UAutoTestManagerBPLibrary_StartMergedAllTestWithNum_Params params;
	params.TestIntervel = TestIntervel;
	params.MergedNum = MergedNum;
	params.OriginNum = OriginNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.StartMergedAllTest
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                          TestIntervel                   (Parm, ZeroConstructor, IsPlainOldData)

void UAutoTestManagerBPLibrary::StartMergedAllTest(float TestIntervel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.StartMergedAllTest");

	UAutoTestManagerBPLibrary_StartMergedAllTest_Params params;
	params.TestIntervel = TestIntervel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.ResumeMergedTest
// (Final, Native, Static, Private, BlueprintCallable)

void UAutoTestManagerBPLibrary::ResumeMergedTest()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.ResumeMergedTest");

	UAutoTestManagerBPLibrary_ResumeMergedTest_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.PauseMergedTest
// (Final, Native, Static, Private, BlueprintCallable)

void UAutoTestManagerBPLibrary::PauseMergedTest()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.PauseMergedTest");

	UAutoTestManagerBPLibrary_PauseMergedTest_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AutoTestManagerBPLibrary.GetMergedTestState
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UAutoTestManagerBPLibrary::GetMergedTestState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AutoTestManagerBPLibrary.GetMergedTestState");

	UAutoTestManagerBPLibrary_GetMergedTestState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.AvatarMergeUnit.OnAvatarMeshMaterialApplyed
// (Final, Native, Public)
// Parameters:
// class UMeshComponent*          MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAvatarMergeUnit::OnAvatarMeshMaterialApplyed(class UMeshComponent* MeshComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AvatarMergeUnit.OnAvatarMeshMaterialApplyed");

	UAvatarMergeUnit_OnAvatarMeshMaterialApplyed_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AvatarMergeUnit.OnAvatarMeshBeforeLoaded
// (Final, Native, Public)

void UAvatarMergeUnit::OnAvatarMeshBeforeLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AvatarMergeUnit.OnAvatarMeshBeforeLoaded");

	UAvatarMergeUnit_OnAvatarMeshBeforeLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AvatarMergeUnit.OnAvatarAsyncTaskFinished
// (Final, Native, Protected)
// Parameters:
// uint32_t                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarMergeUnit::OnAvatarAsyncTaskFinished(uint32_t RequestID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AvatarMergeUnit.OnAvatarAsyncTaskFinished");

	UAvatarMergeUnit_OnAvatarAsyncTaskFinished_Params params;
	params.RequestID = RequestID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.AvatarMergeUnit.OnAvatarAllMeshLoaded
// (Final, Native, Public)

void UAvatarMergeUnit::OnAvatarAllMeshLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.AvatarMergeUnit.OnAvatarAllMeshLoaded");

	UAvatarMergeUnit_OnAvatarAllMeshLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BeamEffectMoveActor.SetBeamEffectData
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FBeamEffectDataParams   InBeamEffectData               (ConstParm, Parm, OutParm, ReferenceParm)

void ABeamEffectMoveActor::SetBeamEffectData(const struct FBeamEffectDataParams& InBeamEffectData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BeamEffectMoveActor.SetBeamEffectData");

	ABeamEffectMoveActor_SetBeamEffectData_Params params;
	params.InBeamEffectData = InBeamEffectData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BeamEffectMoveActor.RefreshEffectLocation
// (Final, Native, Public, BlueprintCallable)

void ABeamEffectMoveActor::RefreshEffectLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BeamEffectMoveActor.RefreshEffectLocation");

	ABeamEffectMoveActor_RefreshEffectLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BeamEffectMoveActor.OnRep_BeamMoveEffectData
// (Native, Event, Public, BlueprintEvent)

void ABeamEffectMoveActor::OnRep_BeamMoveEffectData()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BeamEffectMoveActor.OnRep_BeamMoveEffectData");

	ABeamEffectMoveActor_OnRep_BeamMoveEffectData_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.UnpackAccelerationToInput
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 InAccel                        (Parm, IsPlainOldData)

void UBioVehicleMovementComponent::UnpackAccelerationToInput(const struct FVector& InAccel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.UnpackAccelerationToInput");

	UBioVehicleMovementComponent_UnpackAccelerationToInput_Params params;
	params.InAccel = InAccel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ShouldRecordPosition
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::ShouldRecordPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ShouldRecordPosition");

	UBioVehicleMovementComponent_ShouldRecordPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.SetWalkableFloorZ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InWalkableFloorZ               (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetWalkableFloorZ(float InWalkableFloorZ)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetWalkableFloorZ");

	UBioVehicleMovementComponent_SetWalkableFloorZ_Params params;
	params.InWalkableFloorZ = InWalkableFloorZ;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetWalkableFloorAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InWalkableFloorAngle           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetWalkableFloorAngle(float InWalkableFloorAngle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetWalkableFloorAngle");

	UBioVehicleMovementComponent_SetWalkableFloorAngle_Params params;
	params.InWalkableFloorAngle = InWalkableFloorAngle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetThrottleInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetThrottleInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetThrottleInput");

	UBioVehicleMovementComponent_SetThrottleInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetSteeringInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetSteeringInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetSteeringInput");

	UBioVehicleMovementComponent_SetSteeringInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetRisingInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetRisingInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetRisingInput");

	UBioVehicleMovementComponent_SetRisingInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetNeedLerpRequestedVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bin                            (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetNeedLerpRequestedVelocity(bool bin)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetNeedLerpRequestedVelocity");

	UBioVehicleMovementComponent_SetNeedLerpRequestedVelocity_Params params;
	params.bin = bin;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetMovementMode");

	UBioVehicleMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetGroupsToIgnoreMask
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FNavAvoidanceMask       GroupMask                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UBioVehicleMovementComponent::SetGroupsToIgnoreMask(const struct FNavAvoidanceMask& GroupMask)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetGroupsToIgnoreMask");

	UBioVehicleMovementComponent_SetGroupsToIgnoreMask_Params params;
	params.GroupMask = GroupMask;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetGroupsToIgnore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GroupFlags                     (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetGroupsToIgnore(int GroupFlags)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetGroupsToIgnore");

	UBioVehicleMovementComponent_SetGroupsToIgnore_Params params;
	params.GroupFlags = GroupFlags;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetGroupsToAvoidMask
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FNavAvoidanceMask       GroupMask                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UBioVehicleMovementComponent::SetGroupsToAvoidMask(const struct FNavAvoidanceMask& GroupMask)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetGroupsToAvoidMask");

	UBioVehicleMovementComponent_SetGroupsToAvoidMask_Params params;
	params.GroupMask = GroupMask;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetGroupsToAvoid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GroupFlags                     (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetGroupsToAvoid(int GroupFlags)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetGroupsToAvoid");

	UBioVehicleMovementComponent_SetGroupsToAvoid_Params params;
	params.GroupFlags = GroupFlags;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetAvoidanceGroupMask
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FNavAvoidanceMask       GroupMask                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UBioVehicleMovementComponent::SetAvoidanceGroupMask(const struct FNavAvoidanceMask& GroupMask)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetAvoidanceGroupMask");

	UBioVehicleMovementComponent_SetAvoidanceGroupMask_Params params;
	params.GroupMask = GroupMask;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetAvoidanceGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GroupFlags                     (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetAvoidanceGroup(int GroupFlags)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetAvoidanceGroup");

	UBioVehicleMovementComponent_SetAvoidanceGroup_Params params;
	params.GroupFlags = GroupFlags;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetAvoidanceEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetAvoidanceEnabled(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetAvoidanceEnabled");

	UBioVehicleMovementComponent_SetAvoidanceEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.SetAcceptInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAccept                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::SetAcceptInput(bool bIsAccept)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.SetAcceptInput");

	UBioVehicleMovementComponent_SetAcceptInput_Params params;
	params.bIsAccept = bIsAccept;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerSetThrottleInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerSetThrottleInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerSetThrottleInput");

	UBioVehicleMovementComponent_ServerSetThrottleInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerSetSteeringInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerSetSteeringInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerSetSteeringInput");

	UBioVehicleMovementComponent_ServerSetSteeringInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerSetRisingInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerSetRisingInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerSetRisingInput");

	UBioVehicleMovementComponent_ServerSetRisingInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerMoveOld
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          OldTimeStamp                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   OldAccel                       (Parm)
// unsigned char                  OldMoveFlags                   (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize10& OldAccel, unsigned char OldMoveFlags)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerMoveOld");

	UBioVehicleMovementComponent_ServerMoveOld_Params params;
	params.OldTimeStamp = OldTimeStamp;
	params.OldAccel = OldAccel;
	params.OldMoveFlags = OldMoveFlags;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerMoveDualHybridRootMotion
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp0                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel0                       (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View0                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  NewFlags                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerMoveDualHybridRootMotion(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float TimeStamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerMoveDualHybridRootMotion");

	UBioVehicleMovementComponent_ServerMoveDualHybridRootMotion_Params params;
	params.TimeStamp0 = TimeStamp0;
	params.InAccel0 = InAccel0;
	params.PendingFlags = PendingFlags;
	params.View0 = View0;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.NewFlags = NewFlags;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerMoveDual
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp0                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel0                       (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View0                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  NewFlags                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float TimeStamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerMoveDual");

	UBioVehicleMovementComponent_ServerMoveDual_Params params;
	params.TimeStamp0 = TimeStamp0;
	params.InAccel0 = InAccel0;
	params.PendingFlags = PendingFlags;
	params.View0 = View0;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.NewFlags = NewFlags;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ServerMove
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize10   InAccel                        (Parm)
// struct FVector_NetQuantize100  ClientLoc                      (Parm)
// unsigned char                  CompressedMoveFlags            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientRoll                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ServerMove(float TimeStamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ServerMove");

	UBioVehicleMovementComponent_ServerMove_Params params;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.CompressedMoveFlags = CompressedMoveFlags;
	params.ClientRoll = ClientRoll;
	params.View = View;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.PackInputToAcceleration
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleMovementComponent::PackInputToAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.PackInputToAcceleration");

	UBioVehicleMovementComponent_PackInputToAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.OnRep_HandBrakeRate
// (Native, Public)
// Parameters:
// float                          OldValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::OnRep_HandBrakeRate(float OldValue)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.OnRep_HandBrakeRate");

	UBioVehicleMovementComponent_OnRep_HandBrakeRate_Params params;
	params.OldValue = OldValue;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.OnRecoverOnServer
// (Native, Protected)

void UBioVehicleMovementComponent::OnRecoverOnServer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.OnRecoverOnServer");

	UBioVehicleMovementComponent_OnRecoverOnServer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.K2_GetWalkableFloorZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::K2_GetWalkableFloorZ()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.K2_GetWalkableFloorZ");

	UBioVehicleMovementComponent_K2_GetWalkableFloorZ_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.K2_GetWalkableFloorAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::K2_GetWalkableFloorAngle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.K2_GetWalkableFloorAngle");

	UBioVehicleMovementComponent_K2_GetWalkableFloorAngle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.K2_GetModifiedMaxAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::K2_GetModifiedMaxAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.K2_GetModifiedMaxAcceleration");

	UBioVehicleMovementComponent_K2_GetModifiedMaxAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.K2_FindFloor
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 CapsuleLocation                (Parm, IsPlainOldData)
// struct FFindFloorResult        FloorResult                    (Parm, OutParm)

void UBioVehicleMovementComponent::K2_FindFloor(const struct FVector& CapsuleLocation, struct FFindFloorResult* FloorResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.K2_FindFloor");

	UBioVehicleMovementComponent_K2_FindFloor_Params params;
	params.CapsuleLocation = CapsuleLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (FloorResult != nullptr)
		*FloorResult = params.FloorResult;
}


// Function Addons.BioVehicleMovementComponent.K2_ComputeFloorDist
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 CapsuleLocation                (Parm, IsPlainOldData)
// float                          LineDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          SweepDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          SweepRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FFindFloorResult        FloorResult                    (Parm, OutParm)

void UBioVehicleMovementComponent::K2_ComputeFloorDist(const struct FVector& CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, struct FFindFloorResult* FloorResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.K2_ComputeFloorDist");

	UBioVehicleMovementComponent_K2_ComputeFloorDist_Params params;
	params.CapsuleLocation = CapsuleLocation;
	params.LineDistance = LineDistance;
	params.SweepDistance = SweepDistance;
	params.SweepRadius = SweepRadius;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (FloorResult != nullptr)
		*FloorResult = params.FloorResult;
}


// Function Addons.BioVehicleMovementComponent.IsWalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::IsWalking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.IsWalking");

	UBioVehicleMovementComponent_IsWalking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.IsWalkable
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::IsWalkable(const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.IsWalkable");

	UBioVehicleMovementComponent_IsWalkable_Params params;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.IsSwimming
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::IsSwimming()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.IsSwimming");

	UBioVehicleMovementComponent_IsSwimming_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.IsSeriousInjuriedAllowJumping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::IsSeriousInjuriedAllowJumping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.IsSeriousInjuriedAllowJumping");

	UBioVehicleMovementComponent_IsSeriousInjuriedAllowJumping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.HandleOnSeatDetached
// (Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.HandleOnSeatDetached");

	UBioVehicleMovementComponent_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.HandleOnSeatChanged
// (Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        LastSeatType                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastSeatIdx                    (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        NewSeatType                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewSeatIdx                     (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::HandleOnSeatChanged(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType LastSeatType, int LastSeatIdx, ESTExtraVehicleSeatType NewSeatType, int NewSeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.HandleOnSeatChanged");

	UBioVehicleMovementComponent_HandleOnSeatChanged_Params params;
	params.Character = Character;
	params.LastSeatType = LastSeatType;
	params.LastSeatIdx = LastSeatIdx;
	params.NewSeatType = NewSeatType;
	params.NewSeatIdx = NewSeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.HandleOnSeatAttached
// (Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.HandleOnSeatAttached");

	UBioVehicleMovementComponent_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.HandleOnExitVehicleAnim
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatInx                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::HandleOnExitVehicleAnim(class ASTExtraPlayerCharacter* Character, int SeatInx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.HandleOnExitVehicleAnim");

	UBioVehicleMovementComponent_HandleOnExitVehicleAnim_Params params;
	params.Character = Character;
	params.SeatInx = SeatInx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.GetWalkingDecResistance
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetWalkingDecResistance(float Speed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetWalkingDecResistance");

	UBioVehicleMovementComponent_GetWalkingDecResistance_Params params;
	params.Speed = Speed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetWalkingAccResistance
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetWalkingAccResistance(float Speed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetWalkingAccResistance");

	UBioVehicleMovementComponent_GetWalkingAccResistance_Params params;
	params.Speed = Speed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetValidPerchRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetValidPerchRadius()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetValidPerchRadius");

	UBioVehicleMovementComponent_GetValidPerchRadius_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetThrottleInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetThrottleInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetThrottleInput");

	UBioVehicleMovementComponent_GetThrottleInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetSteeringInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetSteeringInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetSteeringInput");

	UBioVehicleMovementComponent_GetSteeringInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetSlopeSpeedFactor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Slope                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetSlopeSpeedFactor(float Slope)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetSlopeSpeedFactor");

	UBioVehicleMovementComponent_GetSlopeSpeedFactor_Params params;
	params.Slope = Slope;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetRisingInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetRisingInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetRisingInput");

	UBioVehicleMovementComponent_GetRisingInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetPredictVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          PredictTime                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleMovementComponent::GetPredictVelocity(float PredictTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetPredictVelocity");

	UBioVehicleMovementComponent_GetPredictVelocity_Params params;
	params.PredictTime = PredictTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetPerchRadiusThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetPerchRadiusThreshold()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetPerchRadiusThreshold");

	UBioVehicleMovementComponent_GetPerchRadiusThreshold_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMovementBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* UBioVehicleMovementComponent::GetMovementBase()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMovementBase");

	UBioVehicleMovementComponent_GetMovementBase_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMinAnalogSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetMinAnalogSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMinAnalogSpeed");

	UBioVehicleMovementComponent_GetMinAnalogSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMaxJumpHeightWithJumpTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetMaxJumpHeightWithJumpTime()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMaxJumpHeightWithJumpTime");

	UBioVehicleMovementComponent_GetMaxJumpHeightWithJumpTime_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMaxJumpHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetMaxJumpHeight()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMaxJumpHeight");

	UBioVehicleMovementComponent_GetMaxJumpHeight_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMaxBrakingDeceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetMaxBrakingDeceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMaxBrakingDeceleration");

	UBioVehicleMovementComponent_GetMaxBrakingDeceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetMaxAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetMaxAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetMaxAcceleration");

	UBioVehicleMovementComponent_GetMaxAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetJumpVelocityZ
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetJumpVelocityZ()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetJumpVelocityZ");

	UBioVehicleMovementComponent_GetJumpVelocityZ_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetJumpingHeightBySpeed
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetJumpingHeightBySpeed(float Speed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetJumpingHeightBySpeed");

	UBioVehicleMovementComponent_GetJumpingHeightBySpeed_Params params;
	params.Speed = Speed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetJumpingHeightByObsHeight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ObsHeight                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetJumpingHeightByObsHeight(float ObsHeight)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetJumpingHeightByObsHeight");

	UBioVehicleMovementComponent_GetJumpingHeightByObsHeight_Params params;
	params.ObsHeight = ObsHeight;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetImpartedMovementBaseVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleMovementComponent::GetImpartedMovementBaseVelocity()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetImpartedMovementBaseVelocity");

	UBioVehicleMovementComponent_GetImpartedMovementBaseVelocity_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetDesireAcceleration
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetDesireAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetDesireAcceleration");

	UBioVehicleMovementComponent_GetDesireAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetCurrentSecuritySpeedRatio
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetCurrentSecuritySpeedRatio()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetCurrentSecuritySpeedRatio");

	UBioVehicleMovementComponent_GetCurrentSecuritySpeedRatio_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetCurrentMaxAllowedSpeed
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetCurrentMaxAllowedSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetCurrentMaxAllowedSpeed");

	UBioVehicleMovementComponent_GetCurrentMaxAllowedSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetCurrentAcceleration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleMovementComponent::GetCurrentAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetCurrentAcceleration");

	UBioVehicleMovementComponent_GetCurrentAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetBreakAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetBreakAcceleration(float Speed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetBreakAcceleration");

	UBioVehicleMovementComponent_GetBreakAcceleration_Params params;
	params.Speed = Speed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetAngularVelocityByCurve
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AsForce                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetAngularVelocityByCurve(float Speed, bool AsForce)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetAngularVelocityByCurve");

	UBioVehicleMovementComponent_GetAngularVelocityByCurve_Params params;
	params.Speed = Speed;
	params.AsForce = AsForce;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetAnalogInputModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::GetAnalogInputModifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetAnalogInputModifier");

	UBioVehicleMovementComponent_GetAnalogInputModifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.GetAcceptInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleMovementComponent::GetAcceptInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.GetAcceptInput");

	UBioVehicleMovementComponent_GetAcceptInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.DisableMovement
// (Native, Public, BlueprintCallable)

void UBioVehicleMovementComponent::DisableMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.DisableMovement");

	UBioVehicleMovementComponent_DisableMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.DealWithCustomAction
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::DealWithCustomAction(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.DealWithCustomAction");

	UBioVehicleMovementComponent_DealWithCustomAction_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientVeryShortAdjustPosition
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, IsPlainOldData)
// class UPrimitiveComponent*     NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientVeryShortAdjustPosition(float TimeStamp, const struct FVector& NewLoc, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientVeryShortAdjustPosition");

	UBioVehicleMovementComponent_ClientVeryShortAdjustPosition_Params params;
	params.TimeStamp = TimeStamp;
	params.NewLoc = NewLoc;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientAdjustRootMotionSourcePosition
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRootMotionSourceGroup  ServerRootMotion               (Parm)
// bool                           bHasAnimRootMotion             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMontageTrackPosition     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ServerLoc                      (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ServerRotation                 (Parm)
// float                          ServerVelZ                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ServerBase                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ServerBoneName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientAdjustRootMotionSourcePosition(float TimeStamp, const struct FRootMotionSourceGroup& ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientAdjustRootMotionSourcePosition");

	UBioVehicleMovementComponent_ClientAdjustRootMotionSourcePosition_Params params;
	params.TimeStamp = TimeStamp;
	params.ServerRootMotion = ServerRootMotion;
	params.bHasAnimRootMotion = bHasAnimRootMotion;
	params.ServerMontageTrackPosition = ServerMontageTrackPosition;
	params.ServerLoc = ServerLoc;
	params.ServerRotation = ServerRotation;
	params.ServerVelZ = ServerVelZ;
	params.ServerBase = ServerBase;
	params.ServerBoneName = ServerBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientAdjustRootMotionPosition
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMontageTrackPosition     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ServerLoc                      (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ServerRotation                 (Parm)
// float                          ServerVelZ                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ServerBase                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ServerBoneName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientAdjustRootMotionPosition(float TimeStamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientAdjustRootMotionPosition");

	UBioVehicleMovementComponent_ClientAdjustRootMotionPosition_Params params;
	params.TimeStamp = TimeStamp;
	params.ServerMontageTrackPosition = ServerMontageTrackPosition;
	params.ServerLoc = ServerLoc;
	params.ServerRotation = ServerRotation;
	params.ServerVelZ = ServerVelZ;
	params.ServerBase = ServerBase;
	params.ServerBoneName = ServerBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientAdjustPositionAndRotation
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, IsPlainOldData)
// struct FRotator                NewRot                         (Parm, IsPlainOldData)
// struct FVector                 NewVel                         (Parm, IsPlainOldData)
// class UPrimitiveComponent*     NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientAdjustPositionAndRotation(float TimeStamp, const struct FVector& NewLoc, const struct FRotator& NewRot, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientAdjustPositionAndRotation");

	UBioVehicleMovementComponent_ClientAdjustPositionAndRotation_Params params;
	params.TimeStamp = TimeStamp;
	params.NewLoc = NewLoc;
	params.NewRot = NewRot;
	params.NewVel = NewVel;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientAdjustPosition
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, IsPlainOldData)
// struct FVector                 NewVel                         (Parm, IsPlainOldData)
// class UPrimitiveComponent*     NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientAdjustPosition(float TimeStamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientAdjustPosition");

	UBioVehicleMovementComponent_ClientAdjustPosition_Params params;
	params.TimeStamp = TimeStamp;
	params.NewLoc = NewLoc;
	params.NewVel = NewVel;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClientAckGoodMove
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::ClientAckGoodMove(float TimeStamp)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClientAckGoodMove");

	UBioVehicleMovementComponent_ClientAckGoodMove_Params params;
	params.TimeStamp = TimeStamp;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.ClearAccumulatedForces
// (Native, Public, BlueprintCallable)

void UBioVehicleMovementComponent::ClearAccumulatedForces()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.ClearAccumulatedForces");

	UBioVehicleMovementComponent_ClearAccumulatedForces_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.CapsuleTouched
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UBioVehicleMovementComponent::CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.CapsuleTouched");

	UBioVehicleMovementComponent_CapsuleTouched_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.CalcVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Friction                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFluid                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          BrakingDeceleration            (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.CalcVelocity");

	UBioVehicleMovementComponent_CalcVelocity_Params params;
	params.DeltaTime = DeltaTime;
	params.Friction = Friction;
	params.bFluid = bFluid;
	params.BrakingDeceleration = BrakingDeceleration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.CalculateVelocityWithResistance
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFluid                         (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::CalculateVelocityWithResistance(float DeltaTime, bool bFluid)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.CalculateVelocityWithResistance");

	UBioVehicleMovementComponent_CalculateVelocityWithResistance_Params params;
	params.DeltaTime = DeltaTime;
	params.bFluid = bFluid;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.CalculateCurrentForwardSpeed
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleMovementComponent::CalculateCurrentForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.CalculateCurrentForwardSpeed");

	UBioVehicleMovementComponent_CalculateCurrentForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleMovementComponent.AddImpulse
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Impulse                        (Parm, IsPlainOldData)
// bool                           bVelocityChange                (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleMovementComponent::AddImpulse(const struct FVector& Impulse, bool bVelocityChange)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.AddImpulse");

	UBioVehicleMovementComponent_AddImpulse_Params params;
	params.Impulse = Impulse;
	params.bVelocityChange = bVelocityChange;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.AddForce
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Force                          (Parm, IsPlainOldData)

void UBioVehicleMovementComponent::AddForce(const struct FVector& Force)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.AddForce");

	UBioVehicleMovementComponent_AddForce_Params params;
	params.Force = Force;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleMovementComponent.AddDirectionalBrakingAcceleration
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 BrakingAcceleration            (Parm, IsPlainOldData)

void UBioVehicleMovementComponent::AddDirectionalBrakingAcceleration(const struct FVector& BrakingAcceleration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleMovementComponent.AddDirectionalBrakingAcceleration");

	UBioVehicleMovementComponent_AddDirectionalBrakingAcceleration_Params params;
	params.BrakingAcceleration = BrakingAcceleration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.StartTakingOff
// (Final, Native, Public, BlueprintCallable)

void UBioBaseFlyComponent::StartTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.StartTakingOff");

	UBioBaseFlyComponent_StartTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.StartLanding
// (Final, Native, Public, BlueprintCallable)

void UBioBaseFlyComponent::StartLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.StartLanding");

	UBioBaseFlyComponent_StartLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UBioBaseFlyComponent::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.SetMovementMode");

	UBioBaseFlyComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.IsTakingOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioBaseFlyComponent::IsTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.IsTakingOff");

	UBioBaseFlyComponent_IsTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.IsLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioBaseFlyComponent::IsLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.IsLanding");

	UBioBaseFlyComponent_IsLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.IsCurveMoving
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioBaseFlyComponent::IsCurveMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.IsCurveMoving");

	UBioBaseFlyComponent_IsCurveMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.GetMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFlyBioVehicleBaseMoveMode     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFlyBioVehicleBaseMoveMode UBioBaseFlyComponent::GetMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.GetMoveState");

	UBioBaseFlyComponent_GetMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.GetFlyingConfig
// (Native, Protected, BlueprintCallable)
// Parameters:
// struct FFlyBioVehicleFlyingConfig ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFlyBioVehicleFlyingConfig UBioBaseFlyComponent::GetFlyingConfig()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.GetFlyingConfig");

	UBioBaseFlyComponent_GetFlyingConfig_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.GetDistanceToLand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioBaseFlyComponent::GetDistanceToLand()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.GetDistanceToLand");

	UBioBaseFlyComponent_GetDistanceToLand_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioBaseFlyComponent.ExitLanding
// (Final, Native, Public, BlueprintCallable)

void UBioBaseFlyComponent::ExitLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.ExitLanding");

	UBioBaseFlyComponent_ExitLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.EndTakingOff
// (Final, Native, Public, BlueprintCallable)

void UBioBaseFlyComponent::EndTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.EndTakingOff");

	UBioBaseFlyComponent_EndTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.EndLanding
// (Final, Native, Public, BlueprintCallable)

void UBioBaseFlyComponent::EndLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.EndLanding");

	UBioBaseFlyComponent_EndLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.CalculateFlyingVelocity
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioBaseFlyComponent::CalculateFlyingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.CalculateFlyingVelocity");

	UBioBaseFlyComponent_CalculateFlyingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioBaseFlyComponent.CalculateFlyingAcceleration
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioBaseFlyComponent::CalculateFlyingAcceleration(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioBaseFlyComponent.CalculateFlyingAcceleration");

	UBioBaseFlyComponent_CalculateFlyingAcceleration_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.UpdateVerticalHeight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioFlyMovementComponentBase::UpdateVerticalHeight(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.UpdateVerticalHeight");

	UBioFlyMovementComponentBase_UpdateVerticalHeight_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.StartTakingOff
// (Final, Native, Public, BlueprintCallable)

void UBioFlyMovementComponentBase::StartTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.StartTakingOff");

	UBioFlyMovementComponentBase_StartTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UBioFlyMovementComponentBase::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.SetMovementMode");

	UBioFlyMovementComponentBase_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.IsTakingOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioFlyMovementComponentBase::IsTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.IsTakingOff");

	UBioFlyMovementComponentBase_IsTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioFlyMovementComponentBase.IsCurveMoving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioFlyMovementComponentBase::IsCurveMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.IsCurveMoving");

	UBioFlyMovementComponentBase_IsCurveMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioFlyMovementComponentBase.GetMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFlyBioVehicleMoveMode         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFlyBioVehicleMoveMode UBioFlyMovementComponentBase::GetMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.GetMoveState");

	UBioFlyMovementComponentBase_GetMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioFlyMovementComponentBase.GetDistanceToLand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioFlyMovementComponentBase::GetDistanceToLand()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.GetDistanceToLand");

	UBioFlyMovementComponentBase_GetDistanceToLand_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioFlyMovementComponentBase.EndTakingOff
// (Final, Native, Public, BlueprintCallable)

void UBioFlyMovementComponentBase::EndTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.EndTakingOff");

	UBioFlyMovementComponentBase_EndTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.CalculateFlyingVelocity
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioFlyMovementComponentBase::CalculateFlyingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.CalculateFlyingVelocity");

	UBioFlyMovementComponentBase_CalculateFlyingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyMovementComponentBase.CalculateFlyingAcceleration
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBioFlyMovementComponentBase::CalculateFlyingAcceleration(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyMovementComponentBase.CalculateFlyingAcceleration");

	UBioFlyMovementComponentBase_CalculateFlyingAcceleration_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.UseAIControl
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::UseAIControl()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.UseAIControl");

	ABioVehicleBase_UseAIControl_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.UpdateFuelState
// (Final, Native, Public, BlueprintCallable)

void ABioVehicleBase::UpdateFuelState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.UpdateFuelState");

	ABioVehicleBase_UpdateFuelState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.UnregisterRiderAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBioVehicleRiderAnimInstanceBase* InInstance                     (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::UnregisterRiderAnimInstance(class UBioVehicleRiderAnimInstanceBase* InInstance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.UnregisterRiderAnimInstance");

	ABioVehicleBase_UnregisterRiderAnimInstance_Params params;
	params.InInstance = InInstance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.StopJumping
// (Native, Public, BlueprintCallable)

void ABioVehicleBase::StopJumping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.StopJumping");

	ABioVehicleBase_StopJumping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.SetReplicateMovement
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInReplicateMovement           (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::SetReplicateMovement(bool bInReplicateMovement)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.SetReplicateMovement");

	ABioVehicleBase_SetReplicateMovement_Params params;
	params.bInReplicateMovement = bInReplicateMovement;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.SetHandBrake
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::SetHandBrake(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.SetHandBrake");

	ABioVehicleBase_SetHandBrake_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.ServerResetToPosition
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewLocation                    (Parm, IsPlainOldData)
// struct FRotator                NewRotation                    (Parm, IsPlainOldData)
// bool                           bResetVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::ServerResetToPosition(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bResetVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ServerResetToPosition");

	ABioVehicleBase_ServerResetToPosition_Params params;
	params.NewLocation = NewLocation;
	params.NewRotation = NewRotation;
	params.bResetVelocity = bResetVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.RegisterRiderAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBioVehicleRiderAnimInstanceBase* InInstance                     (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::RegisterRiderAnimInstance(class UBioVehicleRiderAnimInstanceBase* InInstance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.RegisterRiderAnimInstance");

	ABioVehicleBase_RegisterRiderAnimInstance_Params params;
	params.InInstance = InInstance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.ProcessPenetration
// (Native, Event, Public, BlueprintEvent)

void ABioVehicleBase::ProcessPenetration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ProcessPenetration");

	ABioVehicleBase_ProcessPenetration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.PlayerDelayAlready
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::PlayerDelayAlready(class ASTExtraBaseCharacter* Player)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.PlayerDelayAlready");

	ABioVehicleBase_PlayerDelayAlready_Params params;
	params.Player = Player;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.OnWalkingOffLedge
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 PreviousFloorImpactNormal      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 PreviousFloorContactNormal     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 PreviousLocation               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          TimeDelta                      (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnWalkingOffLedge(const struct FVector& PreviousFloorImpactNormal, const struct FVector& PreviousFloorContactNormal, const struct FVector& PreviousLocation, float TimeDelta)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnWalkingOffLedge");

	ABioVehicleBase_OnWalkingOffLedge_Params params;
	params.PreviousFloorImpactNormal = PreviousFloorImpactNormal;
	params.PreviousFloorContactNormal = PreviousFloorContactNormal;
	params.PreviousLocation = PreviousLocation;
	params.TimeDelta = TimeDelta;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnTakingDamage
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnTakingDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnTakingDamage");

	ABioVehicleBase_OnTakingDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnRep_ReplicatedBasedMovement
// (Native, Public)

void ABioVehicleBase::OnRep_ReplicatedBasedMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnRep_ReplicatedBasedMovement");

	ABioVehicleBase_OnRep_ReplicatedBasedMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnRep_HasBeenTamed
// (Final, Native, Public)

void ABioVehicleBase::OnRep_HasBeenTamed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnRep_HasBeenTamed");

	ABioVehicleBase_OnRep_HasBeenTamed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnRep_FuelExhausted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bPrevFuelExhausted             (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnRep_FuelExhausted(bool bPrevFuelExhausted)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnRep_FuelExhausted");

	ABioVehicleBase_OnRep_FuelExhausted_Params params;
	params.bPrevFuelExhausted = bPrevFuelExhausted;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnLaunched
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bXYOverride                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bZOverride                     (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnLaunched(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnLaunched");

	ABioVehicleBase_OnLaunched_Params params;
	params.LaunchVelocity = LaunchVelocity;
	params.bXYOverride = bXYOverride;
	params.bZOverride = bZOverride;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnLanded
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ABioVehicleBase::OnLanded(const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnLanded");

	ABioVehicleBase_OnLanded_Params params;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnJumped
// (Native, Event, Public, BlueprintEvent)

void ABioVehicleBase::OnJumped()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnJumped");

	ABioVehicleBase_OnJumped_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnExitingVehicleOnServer
// (Event, Public, BlueprintEvent)

void ABioVehicleBase::OnExitingVehicleOnServer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnExitingVehicleOnServer");

	ABioVehicleBase_OnExitingVehicleOnServer_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnEnteringVehicleOnServer
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           IsSucc                         (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnEnteringVehicleOnServer(bool IsSucc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnEnteringVehicleOnServer");

	ABioVehicleBase_OnEnteringVehicleOnServer_Params params;
	params.IsSucc = IsSucc;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.OnClientTakeDamage
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::OnClientTakeDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.OnClientTakeDamage");

	ABioVehicleBase_OnClientTakeDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.MulticastTakingDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::MulticastTakingDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.MulticastTakingDamage");

	ABioVehicleBase_MulticastTakingDamage_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.MoveUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::MoveUp(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.MoveUp");

	ABioVehicleBase_MoveUp_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.LuaCanPlayMountMontage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::LuaCanPlayMountMontage()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.LuaCanPlayMountMontage");

	ABioVehicleBase_LuaCanPlayMountMontage_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.LaunchCharacter
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bXYOverride                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bZOverride                     (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::LaunchCharacter(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.LaunchCharacter");

	ABioVehicleBase_LaunchCharacter_Params params;
	params.LaunchVelocity = LaunchVelocity;
	params.bXYOverride = bXYOverride;
	params.bZOverride = bZOverride;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.K2_UpdateCustomMovement
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::K2_UpdateCustomMovement(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.K2_UpdateCustomMovement");

	ABioVehicleBase_K2_UpdateCustomMovement_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.K2_OnMovementModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<enum EMovementMode> PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PrevCustomMode                 (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::K2_OnMovementModeChanged(TEnumAsByte<enum EMovementMode> PrevMovementMode, TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char PrevCustomMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.K2_OnMovementModeChanged");

	ABioVehicleBase_K2_OnMovementModeChanged_Params params;
	params.PrevMovementMode = PrevMovementMode;
	params.NewMovementMode = NewMovementMode;
	params.PrevCustomMode = PrevCustomMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.Jump
// (Native, Public, BlueprintCallable)

void ABioVehicleBase::Jump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.Jump");

	ABioVehicleBase_Jump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.IsPlayingRootMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsPlayingRootMotion()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsPlayingRootMotion");

	ABioVehicleBase_IsPlayingRootMotion_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsLocallyControlled
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsLocallyControlled()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsLocallyControlled");

	ABioVehicleBase_IsLocallyControlled_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsJumpProvidingForce
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsJumpProvidingForce()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsJumpProvidingForce");

	ABioVehicleBase_IsJumpProvidingForce_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsInAgentMove
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsInAgentMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsInAgentMove");

	ABioVehicleBase_IsInAgentMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsHostingMove
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsHostingMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsHostingMove");

	ABioVehicleBase_IsHostingMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsFollowingTarget
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsFollowingTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsFollowingTarget");

	ABioVehicleBase_IsFollowingTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsAIControlling
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsAIControlling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsAIControlling");

	ABioVehicleBase_IsAIControlling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.IsAgentMoveEnabled
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::IsAgentMoveEnabled()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.IsAgentMoveEnabled");

	ABioVehicleBase_IsAgentMoveEnabled_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.HandleOnSeatPreAttached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::HandleOnSeatPreAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.HandleOnSeatPreAttached");

	ABioVehicleBase_HandleOnSeatPreAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.HandleOnRiderAnimInstanceActive
// (Native, Public)
// Parameters:
// class UAnimInstance*           ActivedAnimInstance            (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::HandleOnRiderAnimInstanceActive(class UAnimInstance* ActivedAnimInstance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.HandleOnRiderAnimInstanceActive");

	ABioVehicleBase_HandleOnRiderAnimInstanceActive_Params params;
	params.ActivedAnimInstance = ActivedAnimInstance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.HandleOnClientBeenTamed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABioVehicleBase::HandleOnClientBeenTamed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.HandleOnClientBeenTamed");

	ABioVehicleBase_HandleOnClientBeenTamed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.HandleDeviceLevel
// (Native, Public)
// Parameters:
// int                            DeviceLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::HandleDeviceLevel(int DeviceLevel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.HandleDeviceLevel");

	ABioVehicleBase_HandleDeviceLevel_Params params;
	params.DeviceLevel = DeviceLevel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.GetVehicleOriginToLand
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ABioVehicleBase::GetVehicleOriginToLand()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetVehicleOriginToLand");

	ABioVehicleBase_GetVehicleOriginToLand_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetVehicleBreakOutState
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::GetVehicleBreakOutState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetVehicleBreakOutState");

	ABioVehicleBase_GetVehicleBreakOutState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetRotationInputDir
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ABioVehicleBase::GetRotationInputDir()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetRotationInputDir");

	ABioVehicleBase_GetRotationInputDir_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetPlayerLookAtRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ABioVehicleBase::GetPlayerLookAtRotation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetPlayerLookAtRotation");

	ABioVehicleBase_GetPlayerLookAtRotation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetMountMontage
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMountFromDirection> FromDirection                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FMountMontagePair       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMountMontagePair ABioVehicleBase::GetMountMontage(class ASTExtraBaseCharacter* Player, TEnumAsByte<enum EMountFromDirection> FromDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetMountMontage");

	ABioVehicleBase_GetMountMontage_Params params;
	params.Player = Player;
	params.FromDirection = FromDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetMountFromDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 CheckedLocation                (Parm, IsPlainOldData)
// TEnumAsByte<enum EMountFromDirection> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<enum EMountFromDirection> ABioVehicleBase::GetMountFromDirection(const struct FVector& CheckedLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetMountFromDirection");

	ABioVehicleBase_GetMountFromDirection_Params params;
	params.CheckedLocation = CheckedLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetInVehicleLocalPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* ABioVehicleBase::GetInVehicleLocalPlayer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetInVehicleLocalPlayer");

	ABioVehicleBase_GetInVehicleLocalPlayer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetFollowTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ABioVehicleBase::GetFollowTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetFollowTarget");

	ABioVehicleBase_GetFollowTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetDisMountMontage
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMountFromDirection> FromDirection                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FMountMontagePair       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMountMontagePair ABioVehicleBase::GetDisMountMontage(class ASTExtraBaseCharacter* Player, TEnumAsByte<enum EMountFromDirection> FromDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetDisMountMontage");

	ABioVehicleBase_GetDisMountMontage_Params params;
	params.Player = Player;
	params.FromDirection = FromDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetConsumeFuelRate
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ABioVehicleBase::GetConsumeFuelRate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetConsumeFuelRate");

	ABioVehicleBase_GetConsumeFuelRate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetBodyShapeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBoxComponent* ABioVehicleBase::GetBodyShapeComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetBodyShapeComponent");

	ABioVehicleBase_GetBodyShapeComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetBioVehicleMovement
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBioVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBioVehicleMovementComponent* ABioVehicleBase::GetBioVehicleMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetBioVehicleMovement");

	ABioVehicleBase_GetBioVehicleMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetBioVehicleAIC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABioVehicleAIController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ABioVehicleAIController* ABioVehicleBase::GetBioVehicleAIC()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetBioVehicleAIC");

	ABioVehicleBase_GetBioVehicleAIC_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetBioAgentMoveComp
// (Final, Native, Public)
// Parameters:
// class UBioVehicleAgentMoveComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBioVehicleAgentMoveComponent* ABioVehicleBase::GetBioAgentMoveComp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetBioAgentMoveComp");

	ABioVehicleBase_GetBioAgentMoveComp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetBaseTranslationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ABioVehicleBase::GetBaseTranslationOffset()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetBaseTranslationOffset");

	ABioVehicleBase_GetBaseTranslationOffset_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetAnimListComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBioVehicleAnimListComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBioVehicleAnimListComponent* ABioVehicleBase::GetAnimListComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetAnimListComponent");

	ABioVehicleBase_GetAnimListComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.GetActivedRiderAnimInstances
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UBioVehicleRiderAnimInstanceBase*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UBioVehicleRiderAnimInstanceBase*> ABioVehicleBase::GetActivedRiderAnimInstances()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.GetActivedRiderAnimInstances");

	ABioVehicleBase_GetActivedRiderAnimInstances_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.ExitVehicle
// (Final, Native, Public)

void ABioVehicleBase::ExitVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ExitVehicle");

	ABioVehicleBase_ExitVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.EnterVehicle
// (Final, Native, Public)
// Parameters:
// bool                           IsSucc                         (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::EnterVehicle(bool IsSucc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.EnterVehicle");

	ABioVehicleBase_EnterVehicle_Params params;
	params.IsSucc = IsSucc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.ConsumeNeedPlayMountMontage
// (Native, Public, HasOutParms)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            PlayerMountMontage             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::ConsumeNeedPlayMountMontage(class ASTExtraBaseCharacter* Player, class UAnimMontage** PlayerMountMontage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ConsumeNeedPlayMountMontage");

	ABioVehicleBase_ConsumeNeedPlayMountMontage_Params params;
	params.Player = Player;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (PlayerMountMontage != nullptr)
		*PlayerMountMontage = params.PlayerMountMontage;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.ClientEnterVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::ClientEnterVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ClientEnterVehicle");

	ABioVehicleBase_ClientEnterVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.CanJumpInternal
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::CanJumpInternal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.CanJumpInternal");

	ABioVehicleBase_CanJumpInternal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.CanJump
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::CanJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.CanJump");

	ABioVehicleBase_CanJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.CanConsumeFuel
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABioVehicleBase::CanConsumeFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.CanConsumeFuel");

	ABioVehicleBase_CanConsumeFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleBase.CacheInitialMeshOffset
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 MeshRelativeLocation           (Parm, IsPlainOldData)
// struct FRotator                MeshRelativeRotation           (Parm, IsPlainOldData)

void ABioVehicleBase::CacheInitialMeshOffset(const struct FVector& MeshRelativeLocation, const struct FRotator& MeshRelativeRotation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.CacheInitialMeshOffset");

	ABioVehicleBase_CacheInitialMeshOffset_Params params;
	params.MeshRelativeLocation = MeshRelativeLocation;
	params.MeshRelativeRotation = MeshRelativeRotation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.BroadCastPlayMountMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMountFromDirection> MountFromDirection             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::BroadCastPlayMountMontage(class ASTExtraPlayerCharacter* Character, TEnumAsByte<enum EMountFromDirection> MountFromDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.BroadCastPlayMountMontage");

	ABioVehicleBase_BroadCastPlayMountMontage_Params params;
	params.Character = Character;
	params.MountFromDirection = MountFromDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.BroadCastPlayingRandomIdleAnim
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            RandomIdleAnim                 (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::BroadCastPlayingRandomIdleAnim(int RandomIdleAnim)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.BroadCastPlayingRandomIdleAnim");

	ABioVehicleBase_BroadCastPlayingRandomIdleAnim_Params params;
	params.RandomIdleAnim = RandomIdleAnim;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.BpHandleDeviceLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            DeviceLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleBase::BpHandleDeviceLevel(int DeviceLevel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.BpHandleDeviceLevel");

	ABioVehicleBase_BpHandleDeviceLevel_Params params;
	params.DeviceLevel = DeviceLevel;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.ActiveRagDoll
// (Native, Event, Public, BlueprintEvent)

void ABioVehicleBase::ActiveRagDoll()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ActiveRagDoll");

	ABioVehicleBase_ActiveRagDoll_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleBase.ActiveFootParticleEffect
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   EffectName                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ActivedLocation                (Parm, IsPlainOldData)

void ABioVehicleBase::ActiveFootParticleEffect(const struct FName& EffectName, const struct FVector& ActivedLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleBase.ActiveFootParticleEffect");

	ABioVehicleBase_ActiveFootParticleEffect_Params params;
	params.EffectName = EffectName;
	params.ActivedLocation = ActivedLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyVehicleBase.OnClientExitFromBioFlyVehicle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void ABioFlyVehicleBase::OnClientExitFromBioFlyVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyVehicleBase.OnClientExitFromBioFlyVehicle");

	ABioFlyVehicleBase_OnClientExitFromBioFlyVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyVehicleBase.HandleVehicleHealthDestroy
// (Native, Public)

void ABioFlyVehicleBase::HandleVehicleHealthDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyVehicleBase.HandleVehicleHealthDestroy");

	ABioFlyVehicleBase_HandleVehicleHealthDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioFlyVehicleBase.GetBioFlyMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBioBaseFlyComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBioBaseFlyComponent* ABioFlyVehicleBase::GetBioFlyMovementComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioFlyVehicleBase.GetBioFlyMovementComponent");

	ABioFlyVehicleBase_GetBioFlyMovementComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.ServerHostingMove
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::ServerHostingMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ServerHostingMove");

	UBioVehicleAgentMoveComponent_ServerHostingMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.ServerForceFinishAgentMove
// (Final, Native, Public)

void UBioVehicleAgentMoveComponent::ServerForceFinishAgentMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ServerForceFinishAgentMove");

	UBioVehicleAgentMoveComponent_ServerForceFinishAgentMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.ServerFollowTarget
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::ServerFollowTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ServerFollowTarget");

	UBioVehicleAgentMoveComponent_ServerFollowTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.RspAgentMove
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FBioVHAgentMove         InMoveData                     (ConstParm, Parm, ReferenceParm)

void UBioVehicleAgentMoveComponent::RspAgentMove(bool bSuccess, const struct FBioVHAgentMove& InMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.RspAgentMove");

	UBioVehicleAgentMoveComponent_RspAgentMove_Params params;
	params.bSuccess = bSuccess;
	params.InMoveData = InMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.ResetAgentMove
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::ResetAgentMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ResetAgentMove");

	UBioVehicleAgentMoveComponent_ResetAgentMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.ReqFinishAgentMove
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UBioVehicleAgentMoveComponent::ReqFinishAgentMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ReqFinishAgentMove");

	UBioVehicleAgentMoveComponent_ReqFinishAgentMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.ReqBeginAgentMove
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FBioVHAgentMove         InMoveData                     (ConstParm, Parm, ReferenceParm)

void UBioVehicleAgentMoveComponent::ReqBeginAgentMove(const struct FBioVHAgentMove& InMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ReqBeginAgentMove");

	UBioVehicleAgentMoveComponent_ReqBeginAgentMove_Params params;
	params.InMoveData = InMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.OnRep_ReplicatedBioAgentMoveData
// (Final, Native, Protected)

void UBioVehicleAgentMoveComponent::OnRep_ReplicatedBioAgentMoveData()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.OnRep_ReplicatedBioAgentMoveData");

	UBioVehicleAgentMoveComponent_OnRep_ReplicatedBioAgentMoveData_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.OnRep_bHasNearyTargetToFollow
// (Final, Native, Public)
// Parameters:
// bool                           PreValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAgentMoveComponent::OnRep_bHasNearyTargetToFollow(bool PreValue)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.OnRep_bHasNearyTargetToFollow");

	UBioVehicleAgentMoveComponent_OnRep_bHasNearyTargetToFollow_Params params;
	params.PreValue = PreValue;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.OnCharacterLeaveVehicle
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAgentMoveComponent::OnCharacterLeaveVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.OnCharacterLeaveVehicle");

	UBioVehicleAgentMoveComponent_OnCharacterLeaveVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.OnCharacterEnterVehicle
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAgentMoveComponent::OnCharacterEnterVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.OnCharacterEnterVehicle");

	UBioVehicleAgentMoveComponent_OnCharacterEnterVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.IsUnderFollowMinDistance
// (Final, Native, Public)
// Parameters:
// float                          InDistance                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::IsUnderFollowMinDistance(float InDistance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.IsUnderFollowMinDistance");

	UBioVehicleAgentMoveComponent_IsUnderFollowMinDistance_Params params;
	params.InDistance = InDistance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.IsTargetCanFollow
// (Final, Native, Public)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::IsTargetCanFollow(class AActor* InTarget)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.IsTargetCanFollow");

	UBioVehicleAgentMoveComponent_IsTargetCanFollow_Params params;
	params.InTarget = InTarget;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.IsInAgentMove
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::IsInAgentMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.IsInAgentMove");

	UBioVehicleAgentMoveComponent_IsInAgentMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.IsFollowingTarget
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::IsFollowingTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.IsFollowingTarget");

	UBioVehicleAgentMoveComponent_IsFollowingTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.IsAgentMoveEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::IsAgentMoveEnabled()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.IsAgentMoveEnabled");

	UBioVehicleAgentMoveComponent_IsAgentMoveEnabled_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.GetTargetMoveSpeed
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleAgentMoveComponent::GetTargetMoveSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.GetTargetMoveSpeed");

	UBioVehicleAgentMoveComponent_GetTargetMoveSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.GetFollowTarget
// (Final, Native, Public, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UBioVehicleAgentMoveComponent::GetFollowTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.GetFollowTarget");

	UBioVehicleAgentMoveComponent_GetFollowTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.GetDistanceToTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBioVehicleAgentMoveComponent::GetDistanceToTarget(class AActor* InTarget)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.GetDistanceToTarget");

	UBioVehicleAgentMoveComponent_GetDistanceToTarget_Params params;
	params.InTarget = InTarget;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.FindNearestFollowTarget
// (Final, Native, Public)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UBioVehicleAgentMoveComponent::FindNearestFollowTarget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.FindNearestFollowTarget");

	UBioVehicleAgentMoveComponent_FindNearestFollowTarget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.CheckFollowTargetIsValid
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 OutReason                      (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::CheckFollowTargetIsValid(class AActor* InTarget, struct FString* OutReason)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.CheckFollowTargetIsValid");

	UBioVehicleAgentMoveComponent_CheckFollowTargetIsValid_Params params;
	params.InTarget = InTarget;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutReason != nullptr)
		*OutReason = params.OutReason;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.ChangeFollowTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAgentMoveComponent::ChangeFollowTarget(class AActor* InTarget)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.ChangeFollowTarget");

	UBioVehicleAgentMoveComponent_ChangeFollowTarget_Params params;
	params.InTarget = InTarget;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAgentMoveComponent.CanAgentMove
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FBioVHAgentMove         InMoveData                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAgentMoveComponent::CanAgentMove(const struct FBioVHAgentMove& InMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.CanAgentMove");

	UBioVehicleAgentMoveComponent_CanAgentMove_Params params;
	params.InMoveData = InMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.CalculateHostingMoveVelocity
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 InVelocity                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleAgentMoveComponent::CalculateHostingMoveVelocity(const struct FVector& InVelocity, float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.CalculateHostingMoveVelocity");

	UBioVehicleAgentMoveComponent_CalculateHostingMoveVelocity_Params params;
	params.InVelocity = InVelocity;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAgentMoveComponent.CalculateFollowingVelocity
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 InVelocity                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 OutAccel                       (Parm, OutParm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBioVehicleAgentMoveComponent::CalculateFollowingVelocity(const struct FVector& InVelocity, float DeltaTime, struct FVector* OutAccel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAgentMoveComponent.CalculateFollowingVelocity");

	UBioVehicleAgentMoveComponent_CalculateFollowingVelocity_Params params;
	params.InVelocity = InVelocity;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutAccel != nullptr)
		*OutAccel = params.OutAccel;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAIController.SetMoveTargetLoc
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ABioVehicleAIController::SetMoveTargetLoc(const struct FVector& TargetLoc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAIController.SetMoveTargetLoc");

	ABioVehicleAIController_SetMoveTargetLoc_Params params;
	params.TargetLoc = TargetLoc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAIController.SetCaughtOwner
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  CaughtOwner                    (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleAIController::SetCaughtOwner(class AActor* CaughtOwner)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAIController.SetCaughtOwner");

	ABioVehicleAIController_SetCaughtOwner_Params params;
	params.CaughtOwner = CaughtOwner;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAIController.RunBehaviorTreeWithIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            TreeIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleAIController::RunBehaviorTreeWithIndex(int TreeIndex)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAIController.RunBehaviorTreeWithIndex");

	ABioVehicleAIController_RunBehaviorTreeWithIndex_Params params;
	params.TreeIndex = TreeIndex;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAIController.OnAirDropLandGroup
// (Final, Native, Public)
// Parameters:
// class AActor*                  AirDropBoxActor                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsInWater                     (Parm, ZeroConstructor, IsPlainOldData)

void ABioVehicleAIController::OnAirDropLandGroup(class AActor* AirDropBoxActor, bool bIsInWater)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAIController.OnAirDropLandGroup");

	ABioVehicleAIController_OnAirDropLandGroup_Params params;
	params.AirDropBoxActor = AirDropBoxActor;
	params.bIsInWater = bIsInWater;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAnimInstanceBase.SlotIsActived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleAnimInstanceBase::SlotIsActived(const struct FName& SlotName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAnimInstanceBase.SlotIsActived");

	UBioVehicleAnimInstanceBase_SlotIsActived_Params params;
	params.SlotName = SlotName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BioVehicleAnimInstanceBase.LuaOnAnimLodChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            NewAnimLod                     (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAnimInstanceBase::LuaOnAnimLodChanged(int NewAnimLod)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAnimInstanceBase.LuaOnAnimLodChanged");

	UBioVehicleAnimInstanceBase_LuaOnAnimLodChanged_Params params;
	params.NewAnimLod = NewAnimLod;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAnimInstanceBase.LuaInitializeWithDeviceLevel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            DeviceLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UBioVehicleAnimInstanceBase::LuaInitializeWithDeviceLevel(int DeviceLevel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAnimInstanceBase.LuaInitializeWithDeviceLevel");

	UBioVehicleAnimInstanceBase_LuaInitializeWithDeviceLevel_Params params;
	params.DeviceLevel = DeviceLevel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleAnimInstanceBase.LuaInitializeAnimation
// (Native, Event, Public, BlueprintEvent)

void UBioVehicleAnimInstanceBase::LuaInitializeAnimation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleAnimInstanceBase.LuaInitializeAnimation");

	UBioVehicleAnimInstanceBase_LuaInitializeAnimation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BioVehicleRiderAnimInstanceBase.SlotIsActived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   SlotName                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBioVehicleRiderAnimInstanceBase::SlotIsActived(const struct FName& SlotName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BioVehicleRiderAnimInstanceBase.SlotIsActived");

	UBioVehicleRiderAnimInstanceBase_SlotIsActived_Params params;
	params.SlotName = SlotName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketDanceComponent.OnRep_BlanketDanceData
// (Final, Native, Public)

void UBlanketDanceComponent::OnRep_BlanketDanceData()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketDanceComponent.OnRep_BlanketDanceData");

	UBlanketDanceComponent_OnRep_BlanketDanceData_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketDanceComponent.OnEnterNewDanceState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<enum EBlanketDanceState> NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketDanceComponent::OnEnterNewDanceState(TEnumAsByte<enum EBlanketDanceState> NewState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketDanceComponent.OnEnterNewDanceState");

	UBlanketDanceComponent_OnEnterNewDanceState_Params params;
	params.NewState = NewState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketDanceComponent.BroadCastFaceLookAtPlayer
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FRotator                InTargetRotator                (Parm, IsPlainOldData)

void UBlanketDanceComponent::BroadCastFaceLookAtPlayer(const struct FRotator& InTargetRotator)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketDanceComponent.BroadCastFaceLookAtPlayer");

	UBlanketDanceComponent_BroadCastFaceLookAtPlayer_Params params;
	params.InTargetRotator = InTargetRotator;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureDriverAnimInstance.OnCreatureJumped
// (Final, Native, Public)

void ULandingCreatureDriverAnimInstance::OnCreatureJumped()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureDriverAnimInstance.OnCreatureJumped");

	ULandingCreatureDriverAnimInstance_OnCreatureJumped_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketDriverAnimInstance.OnBeginFlying
// (Native, Public)
// Parameters:
// bool                           bIsLowFlying                   (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketDriverAnimInstance::OnBeginFlying(bool bIsLowFlying)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketDriverAnimInstance.OnBeginFlying");

	UBlanketDriverAnimInstance_OnBeginFlying_Params params;
	params.bIsLowFlying = bIsLowFlying;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketDriverAnimInstance.OnBeginDiving
// (Final, Native, Public)
// Parameters:
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketDriverAnimInstance::OnBeginDiving(bool bStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketDriverAnimInstance.OnBeginDiving");

	UBlanketDriverAnimInstance_OnBeginDiving_Params params;
	params.bStart = bStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.StartFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UBlanketMovementComponent::StartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.StartFlyingDive");

	UBlanketMovementComponent_StartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.SetServerDiveDirection
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 ClientDivDirection             (Parm, IsPlainOldData)

void UBlanketMovementComponent::SetServerDiveDirection(const struct FVector& ClientDivDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.SetServerDiveDirection");

	UBlanketMovementComponent_SetServerDiveDirection_Params params;
	params.ClientDivDirection = ClientDivDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketMovementComponent::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.SetMovementMode");

	UBlanketMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.IsRisingToHigh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsRisingToHigh()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsRisingToHigh");

	UBlanketMovementComponent_IsRisingToHigh_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsLowFlying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsLowFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsLowFlying");

	UBlanketMovementComponent_IsLowFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsHighFlying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsHighFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsHighFlying");

	UBlanketMovementComponent_IsHighFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsDroppingToLow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsDroppingToLow()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsDroppingToLow");

	UBlanketMovementComponent_IsDroppingToLow_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsDiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsDiving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsDiving");

	UBlanketMovementComponent_IsDiving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsCurveMoving
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsCurveMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsCurveMoving");

	UBlanketMovementComponent_IsCurveMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.IsAutoLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::IsAutoLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.IsAutoLanding");

	UBlanketMovementComponent_IsAutoLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.GetFlyingConfig
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FFlyBioVehicleFlyingConfig ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFlyBioVehicleFlyingConfig UBlanketMovementComponent::GetFlyingConfig()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.GetFlyingConfig");

	UBlanketMovementComponent_GetFlyingConfig_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.GetBlanketMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBlankVehicleBaseMoveMode      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EBlankVehicleBaseMoveMode UBlanketMovementComponent::GetBlanketMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.GetBlanketMoveState");

	UBlanketMovementComponent_GetBlanketMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.EndFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UBlanketMovementComponent::EndFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.EndFlyingDive");

	UBlanketMovementComponent_EndFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.DealWithCustomAction
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketMovementComponent::DealWithCustomAction(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.DealWithCustomAction");

	UBlanketMovementComponent_DealWithCustomAction_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketMovementComponent.CheckVehicleCanSwitchMoveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bRiseToHigh                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::CheckVehicleCanSwitchMoveMode(bool bRiseToHigh)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.CheckVehicleCanSwitchMoveMode");

	UBlanketMovementComponent_CheckVehicleCanSwitchMoveMode_Params params;
	params.bRiseToHigh = bRiseToHigh;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.CheckCanStartFlyingDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBlanketMovementComponent::CheckCanStartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.CheckCanStartFlyingDive");

	UBlanketMovementComponent_CheckCanStartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketMovementComponent.CalculateDivingVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketMovementComponent::CalculateDivingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketMovementComponent.CalculateDivingVelocity");

	UBlanketMovementComponent_CalculateDivingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.TryVehicleDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::TryVehicleDive(bool bStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.TryVehicleDive");

	ABlanketVehicle_TryVehicleDive_Params params;
	params.bStart = bStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.TrySwitchFlyingHeightMode
// (Final, Native, Public, BlueprintCallable)

void ABlanketVehicle::TrySwitchFlyingHeightMode()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.TrySwitchFlyingHeightMode");

	ABlanketVehicle_TrySwitchFlyingHeightMode_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.OnRep_BlanketDiveCDChanged
// (Final, Native, Public)
// Parameters:
// bool                           bPrevState                     (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::OnRep_BlanketDiveCDChanged(bool bPrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.OnRep_BlanketDiveCDChanged");

	ABlanketVehicle_OnRep_BlanketDiveCDChanged_Params params;
	params.bPrevState = bPrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.GetConsumeFuelRate
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ABlanketVehicle::GetConsumeFuelRate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.GetConsumeFuelRate");

	ABlanketVehicle_GetConsumeFuelRate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketVehicle.EnableSwitchModeCameraModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::EnableSwitchModeCameraModifier(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.EnableSwitchModeCameraModifier");

	ABlanketVehicle_EnableSwitchModeCameraModifier_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.EnableDiveCameraModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::EnableDiveCameraModifier(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.EnableDiveCameraModifier");

	ABlanketVehicle_EnableDiveCameraModifier_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.DoSwitchFlyingHeightMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bRiseToHigh                    (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::DoSwitchFlyingHeightMode(bool bRiseToHigh)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.DoSwitchFlyingHeightMode");

	ABlanketVehicle_DoSwitchFlyingHeightMode_Params params;
	params.bRiseToHigh = bRiseToHigh;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.DestroyAllCachedParticleEffect
// (Final, Native, Protected, BlueprintCallable)

void ABlanketVehicle::DestroyAllCachedParticleEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.DestroyAllCachedParticleEffect");

	ABlanketVehicle_DestroyAllCachedParticleEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicle.CanUpdateMovementInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABlanketVehicle::CanUpdateMovementInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.CanUpdateMovementInput");

	ABlanketVehicle_CanUpdateMovementInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketVehicle.CanConsumeFuel
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABlanketVehicle::CanConsumeFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.CanConsumeFuel");

	ABlanketVehicle_CanConsumeFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketVehicle.CanBlanketSwitchMoveMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           bRiseToHigh                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABlanketVehicle::CanBlanketSwitchMoveMode(bool bRiseToHigh)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.CanBlanketSwitchMoveMode");

	ABlanketVehicle_CanBlanketSwitchMoveMode_Params params;
	params.bRiseToHigh = bRiseToHigh;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketVehicle.CanBlanketDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABlanketVehicle::CanBlanketDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.CanBlanketDive");

	ABlanketVehicle_CanBlanketDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.BlanketVehicle.CallServerSwitch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bRiseToHigh                    (Parm, ZeroConstructor, IsPlainOldData)

void ABlanketVehicle::CallServerSwitch(bool bRiseToHigh)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicle.CallServerSwitch");

	ABlanketVehicle_CallServerSwitch_Params params;
	params.bRiseToHigh = bRiseToHigh;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureAnimInstance.SetJump
// (Native, Public)

void ULandingCreatureAnimInstance::SetJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureAnimInstance.SetJump");

	ULandingCreatureAnimInstance_SetJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureAnimInstance.ResetStop
// (Final, Native, Private)

void ULandingCreatureAnimInstance::ResetStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureAnimInstance.ResetStop");

	ULandingCreatureAnimInstance_ResetStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureAnimInstance.ResetJump
// (Final, Native, Public)

void ULandingCreatureAnimInstance::ResetJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureAnimInstance.ResetJump");

	ULandingCreatureAnimInstance_ResetJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureAnimInstance.ResetDoRandomIdle
// (Final, Native, Private)

void ULandingCreatureAnimInstance::ResetDoRandomIdle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureAnimInstance.ResetDoRandomIdle");

	ULandingCreatureAnimInstance_ResetDoRandomIdle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LandingCreatureAnimInstance.DoRandomIdle
// (Final, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ULandingCreatureAnimInstance::DoRandomIdle(int Index)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LandingCreatureAnimInstance.DoRandomIdle");

	ULandingCreatureAnimInstance_DoRandomIdle_Params params;
	params.Index = Index;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicleAnimInstance.Turn
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FRotator                TargetRotator                  (Parm, IsPlainOldData)

void UBlanketVehicleAnimInstance::Turn(const struct FRotator& TargetRotator)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicleAnimInstance.Turn");

	UBlanketVehicleAnimInstance_Turn_Params params;
	params.TargetRotator = TargetRotator;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicleAnimInstance.OnOwnerBlanketChangeDanceState
// (Final, Native, Public)
// Parameters:
// struct FBlanketDanceData       InBlanketData                  (Parm)

void UBlanketVehicleAnimInstance::OnOwnerBlanketChangeDanceState(const struct FBlanketDanceData& InBlanketData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicleAnimInstance.OnOwnerBlanketChangeDanceState");

	UBlanketVehicleAnimInstance_OnOwnerBlanketChangeDanceState_Params params;
	params.InBlanketData = InBlanketData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicleAnimInstance.OnBeginFlying
// (Final, Native, Public)
// Parameters:
// bool                           bIsLowFlying                   (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketVehicleAnimInstance::OnBeginFlying(bool bIsLowFlying)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicleAnimInstance.OnBeginFlying");

	UBlanketVehicleAnimInstance_OnBeginFlying_Params params;
	params.bIsLowFlying = bIsLowFlying;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BlanketVehicleAnimInstance.OnBeginDiving
// (Final, Native, Public)
// Parameters:
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void UBlanketVehicleAnimInstance::OnBeginDiving(bool bStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BlanketVehicleAnimInstance.OnBeginDiving");

	UBlanketVehicleAnimInstance_OnBeginDiving_Params params;
	params.bStart = bStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BuffNodeBlackboardInterface.SetSkillBlackboardValue
// (Native, Public, HasOutParms)
// Parameters:
// struct FName                   InBBKeyName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            SkillID                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FBuffNodeBlackboardSetting InBBSetting                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bExecuteOrEnd                  (Parm, ZeroConstructor, IsPlainOldData)

void UBuffNodeBlackboardInterface::SetSkillBlackboardValue(const struct FName& InBBKeyName, int SkillID, const struct FBuffNodeBlackboardSetting& InBBSetting, bool bExecuteOrEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BuffNodeBlackboardInterface.SetSkillBlackboardValue");

	UBuffNodeBlackboardInterface_SetSkillBlackboardValue_Params params;
	params.InBBKeyName = InBBKeyName;
	params.SkillID = SkillID;
	params.InBBSetting = InBBSetting;
	params.bExecuteOrEnd = bExecuteOrEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.BuffNodeBlackboardInterface.SetAIBlackboardValue
// (Native, Public, HasOutParms)
// Parameters:
// struct FName                   InBBKeyName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FBuffNodeBlackboardSetting InBBSetting                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bExecuteOrEnd                  (Parm, ZeroConstructor, IsPlainOldData)

void UBuffNodeBlackboardInterface::SetAIBlackboardValue(const struct FName& InBBKeyName, const struct FBuffNodeBlackboardSetting& InBBSetting, bool bExecuteOrEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.BuffNodeBlackboardInterface.SetAIBlackboardValue");

	UBuffNodeBlackboardInterface_SetAIBlackboardValue_Params params;
	params.InBBKeyName = InBBKeyName;
	params.InBBSetting = InBBSetting;
	params.bExecuteOrEnd = bExecuteOrEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.CameraModifier_MechaCombineSmooth.ActiveMechaSmoothModifier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   OwnerPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          LerpTime                       (Parm, ZeroConstructor, IsPlainOldData)
// class UCameraModifier_MechaCombineSmooth* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCameraModifier_MechaCombineSmooth* UCameraModifier_MechaCombineSmooth::ActiveMechaSmoothModifier(class ASTExtraBaseCharacter* OwnerPlayer, float LerpTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.CameraModifier_MechaCombineSmooth.ActiveMechaSmoothModifier");

	UCameraModifier_MechaCombineSmooth_ActiveMechaSmoothModifier_Params params;
	params.OwnerPlayer = OwnerPlayer;
	params.LerpTime = LerpTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ControllableDashMoveObj.LeaveControllableDashMove
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UControllableDashMoveObj::LeaveControllableDashMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ControllableDashMoveObj.LeaveControllableDashMove");

	UControllableDashMoveObj_LeaveControllableDashMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ControllableDashMoveObj.EnterControllableDashMove
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 InInitDir                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UControllableDashMoveObj::EnterControllableDashMove(const struct FVector& InInitDir)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ControllableDashMoveObj.EnterControllableDashMove");

	UControllableDashMoveObj_EnterControllableDashMove_Params params;
	params.InInitDir = InInitDir;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.CustomVehicleBearerUnit.OnVehicleBeforeWheelDestroy
// (Final, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UCustomVehicleBearerUnit::OnVehicleBeforeWheelDestroy(int Index)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.CustomVehicleBearerUnit.OnVehicleBeforeWheelDestroy");

	UCustomVehicleBearerUnit_OnVehicleBeforeWheelDestroy_Params params;
	params.Index = Index;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.CustomVehicleBearerUnit.OnVehicleAvatarEquiped
// (Final, Native, Public)

void UCustomVehicleBearerUnit::OnVehicleAvatarEquiped()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.CustomVehicleBearerUnit.OnVehicleAvatarEquiped");

	UCustomVehicleBearerUnit_OnVehicleAvatarEquiped_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.CustomVehicleBearerUnit.OnUpdateSeatGUI
// (Final, Native, Public)

void UCustomVehicleBearerUnit::OnUpdateSeatGUI()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.CustomVehicleBearerUnit.OnUpdateSeatGUI");

	UCustomVehicleBearerUnit_OnUpdateSeatGUI_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.CustomVehicleBearerUnit.OnAvatarAllMeshLoaded
// (Final, Native, Public)

void UCustomVehicleBearerUnit::OnAvatarAllMeshLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.CustomVehicleBearerUnit.OnAvatarAllMeshLoaded");

	UCustomVehicleBearerUnit_OnAvatarAllMeshLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.TryMatchDistance
// (Native, Public, BlueprintCallable)

void UDistanceMatchingComponent::TryMatchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.TryMatchDistance");

	UDistanceMatchingComponent_TryMatchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.ServerEndMatchDistance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UDistanceMatchingComponent::ServerEndMatchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.ServerEndMatchDistance");

	UDistanceMatchingComponent_ServerEndMatchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.ServerBeginMatchDistance
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 InPredictedStopLocation        (Parm, IsPlainOldData)

void UDistanceMatchingComponent::ServerBeginMatchDistance(const struct FVector& InPredictedStopLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.ServerBeginMatchDistance");

	UDistanceMatchingComponent_ServerBeginMatchDistance_Params params;
	params.InPredictedStopLocation = InPredictedStopLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.PredictStopLocation
// (Native, Public, HasOutParms, HasDefaults, Const)
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDistanceMatchingComponent::PredictStopLocation(struct FVector* OutLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.PredictStopLocation");

	UDistanceMatchingComponent_PredictStopLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;

	return params.ReturnValue;
}


// Function Addons.DistanceMatchingComponent.OnTickMatchDistance
// (Native, Public)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UDistanceMatchingComponent::OnTickMatchDistance(float DeltaSeconds)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.OnTickMatchDistance");

	UDistanceMatchingComponent_OnTickMatchDistance_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.OnEndMatchDistance
// (Native, Public)

void UDistanceMatchingComponent::OnEndMatchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.OnEndMatchDistance");

	UDistanceMatchingComponent_OnEndMatchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.OnBeginMatchDistance
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 InPredictedStopLocation        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UDistanceMatchingComponent::OnBeginMatchDistance(const struct FVector& InPredictedStopLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.OnBeginMatchDistance");

	UDistanceMatchingComponent_OnBeginMatchDistance_Params params;
	params.InPredictedStopLocation = InPredictedStopLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.MulticastEndMatchDistance
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UDistanceMatchingComponent::MulticastEndMatchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.MulticastEndMatchDistance");

	UDistanceMatchingComponent_MulticastEndMatchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.MulticastBeginMatchDistance
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 InPredictedStopLocation        (Parm, IsPlainOldData)

void UDistanceMatchingComponent::MulticastBeginMatchDistance(const struct FVector& InPredictedStopLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.MulticastBeginMatchDistance");

	UDistanceMatchingComponent_MulticastBeginMatchDistance_Params params;
	params.InPredictedStopLocation = InPredictedStopLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.ForceInterruptMatchDistance
// (Final, Native, Public, BlueprintCallable)

void UDistanceMatchingComponent::ForceInterruptMatchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.ForceInterruptMatchDistance");

	UDistanceMatchingComponent_ForceInterruptMatchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingComponent.CheckMatchDistanceState
// (Native, Public)

void UDistanceMatchingComponent::CheckMatchDistanceState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingComponent.CheckMatchDistanceState");

	UDistanceMatchingComponent_CheckMatchDistanceState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.DistanceMatchingInterface.SetExternalTimerAccumulator
// (Native, Public)
// Parameters:
// float                          InTimerAccumulator             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDistanceMatchingInterface::SetExternalTimerAccumulator(float InTimerAccumulator)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.DistanceMatchingInterface.SetExternalTimerAccumulator");

	UDistanceMatchingInterface_SetExternalTimerAccumulator_Params params;
	params.InTimerAccumulator = InTimerAccumulator;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.EventDataCollectionKeys.GetTimestamp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys::GetTimestamp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys.GetTimestamp");

	UEventDataCollectionKeys_GetTimestamp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys.GetTeammatePositions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys::GetTeammatePositions()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys.GetTeammatePositions");

	UEventDataCollectionKeys_GetTeammatePositions_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys.GetSelfPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys::GetSelfPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys.GetSelfPosition");

	UEventDataCollectionKeys_GetSelfPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues.GetTeammatePositionsFromContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ActorContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UEventDataCollectionValues::GetTeammatePositionsFromContext(class AActor* ActorContext)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues.GetTeammatePositionsFromContext");

	UEventDataCollectionValues_GetTeammatePositionsFromContext_Params params;
	params.ActorContext = ActorContext;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues.GetTeammatePositions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerState*     STExtraPlayerState             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UEventDataCollectionValues::GetTeammatePositions(class ASTExtraPlayerState* STExtraPlayerState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues.GetTeammatePositions");

	UEventDataCollectionValues_GetTeammatePositions_Params params;
	params.STExtraPlayerState = STExtraPlayerState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues.GetTeammateOpenIds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerState*     STExtraPlayerState             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UEventDataCollectionValues::GetTeammateOpenIds(class ASTExtraPlayerState* STExtraPlayerState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues.GetTeammateOpenIds");

	UEventDataCollectionValues_GetTeammateOpenIds_Params params;
	params.STExtraPlayerState = STExtraPlayerState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetViewType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetViewType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetViewType");

	UEventDataCollectionKeys_RankingScore_GetViewType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetTreatment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetTreatment()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetTreatment");

	UEventDataCollectionKeys_RankingScore_GetTreatment_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetTime()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetTime");

	UEventDataCollectionKeys_RankingScore_GetTime_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetTeammates
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetTeammates()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetTeammates");

	UEventDataCollectionKeys_RankingScore_GetTeammates_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetSurvivalTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetSurvivalTime()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetSurvivalTime");

	UEventDataCollectionKeys_RankingScore_GetSurvivalTime_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetRescureCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetRescureCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetRescureCount");

	UEventDataCollectionKeys_RankingScore_GetRescureCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetRescueTimes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetRescueTimes()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetRescueTimes");

	UEventDataCollectionKeys_RankingScore_GetRescueTimes_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetRank
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetRank()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetRank");

	UEventDataCollectionKeys_RankingScore_GetRank_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetPlayerName");

	UEventDataCollectionKeys_RankingScore_GetPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetMaxKillDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetMaxKillDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetMaxKillDistance");

	UEventDataCollectionKeys_RankingScore_GetMaxKillDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetMarchDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetMarchDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetMarchDistance");

	UEventDataCollectionKeys_RankingScore_GetMarchDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetMapId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetMapId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetMapId");

	UEventDataCollectionKeys_RankingScore_GetMapId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetKnockouts
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetKnockouts()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetKnockouts");

	UEventDataCollectionKeys_RankingScore_GetKnockouts_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetKillNumInVehicle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetKillNumInVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetKillNumInVehicle");

	UEventDataCollectionKeys_RankingScore_GetKillNumInVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetKillNumByGrenade
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetKillNumByGrenade()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetKillNumByGrenade");

	UEventDataCollectionKeys_RankingScore_GetKillNumByGrenade_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetKillNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetKillNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetKillNum");

	UEventDataCollectionKeys_RankingScore_GetKillNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetKill
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetKill()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetKill");

	UEventDataCollectionKeys_RankingScore_GetKill_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetInDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetInDamage()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetInDamage");

	UEventDataCollectionKeys_RankingScore_GetInDamage_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetHurt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetHurt()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetHurt");

	UEventDataCollectionKeys_RankingScore_GetHurt_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetHeal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetHeal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetHeal");

	UEventDataCollectionKeys_RankingScore_GetHeal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetHeadShotNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetHeadShotNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetHeadShotNum");

	UEventDataCollectionKeys_RankingScore_GetHeadShotNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetGotAirDropNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetGotAirDropNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetGotAirDropNum");

	UEventDataCollectionKeys_RankingScore_GetGotAirDropNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetGameID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetGameID()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetGameID");

	UEventDataCollectionKeys_RankingScore_GetGameID_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetDriveDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetDriveDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetDriveDistance");

	UEventDataCollectionKeys_RankingScore_GetDriveDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetDamage()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetDamage");

	UEventDataCollectionKeys_RankingScore_GetDamage_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetAssists
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetAssists()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetAssists");

	UEventDataCollectionKeys_RankingScore_GetAssists_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetAliveTeamNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetAliveTeamNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetAliveTeamNum");

	UEventDataCollectionKeys_RankingScore_GetAliveTeamNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankingScore.GetAlivePlayerNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankingScore::GetAlivePlayerNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankingScore.GetAlivePlayerNum");

	UEventDataCollectionKeys_RankingScore_GetAlivePlayerNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetWorldLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetWorldLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetWorldLocation");

	UEventDataCollectionKeys_GameStatus_GetWorldLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetWeather
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetWeather()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetWeather");

	UEventDataCollectionKeys_GameStatus_GetWeather_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetTotalPlayerCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetTotalPlayerCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetTotalPlayerCount");

	UEventDataCollectionKeys_GameStatus_GetTotalPlayerCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetToPlaneCarryLeftTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetToPlaneCarryLeftTime()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetToPlaneCarryLeftTime");

	UEventDataCollectionKeys_GameStatus_GetToPlaneCarryLeftTime_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetTeamId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetTeamId");

	UEventDataCollectionKeys_GameStatus_GetTeamId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetPlaneRouteStop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetPlaneRouteStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetPlaneRouteStop");

	UEventDataCollectionKeys_GameStatus_GetPlaneRouteStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetPlaneRouteStart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetPlaneRouteStart()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetPlaneRouteStart");

	UEventDataCollectionKeys_GameStatus_GetPlaneRouteStart_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetOpenId");

	UEventDataCollectionKeys_GameStatus_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetGameStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetGameStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetGameStatus");

	UEventDataCollectionKeys_GameStatus_GetGameStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_GameStatus.GetAlivePlayerCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_GameStatus::GetAlivePlayerCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_GameStatus.GetAlivePlayerCount");

	UEventDataCollectionKeys_GameStatus_GetAlivePlayerCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetWin
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetWin()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetWin");

	UEventDataCollectionValues_GameStatus_GameStatus_GetWin_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetWaitingOnLobby
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetWaitingOnLobby()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetWaitingOnLobby");

	UEventDataCollectionValues_GameStatus_GameStatus_GetWaitingOnLobby_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetQualityPlaza
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetQualityPlaza()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetQualityPlaza");

	UEventDataCollectionValues_GameStatus_GameStatus_GetQualityPlaza_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetPlaneCarrying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetPlaneCarrying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetPlaneCarrying");

	UEventDataCollectionValues_GameStatus_GameStatus_GetPlaneCarrying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetParachuteOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetParachuteOpen()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetParachuteOpen");

	UEventDataCollectionValues_GameStatus_GameStatus_GetParachuteOpen_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetParachuteJumping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetParachuteJumping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetParachuteJumping");

	UEventDataCollectionValues_GameStatus_GameStatus_GetParachuteJumping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetMatching
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetMatching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetMatching");

	UEventDataCollectionValues_GameStatus_GameStatus_GetMatching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetLanding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetLanding");

	UEventDataCollectionValues_GameStatus_GameStatus_GetLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetFireWorking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetFireWorking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetFireWorking");

	UEventDataCollectionValues_GameStatus_GameStatus_GetFireWorking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetFighting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetFighting()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetFighting");

	UEventDataCollectionValues_GameStatus_GameStatus_GetFighting_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetCake
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_GameStatus_GameStatus::GetCake()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_GameStatus_GameStatus.GetCake");

	UEventDataCollectionValues_GameStatus_GameStatus_GetCake_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetViewType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetViewType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetViewType");

	UEventDataCollectionKeys_StartMatching_GetViewType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetTeamCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetTeamCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetTeamCount");

	UEventDataCollectionKeys_StartMatching_GetTeamCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetPlayerCountInGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetPlayerCountInGameMode()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetPlayerCountInGameMode");

	UEventDataCollectionKeys_StartMatching_GetPlayerCountInGameMode_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetMapId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetMapId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetMapId");

	UEventDataCollectionKeys_StartMatching_GetMapId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetGameMode()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetGameMode");

	UEventDataCollectionKeys_StartMatching_GetGameMode_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_StartMatching.GetFullTeamCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_StartMatching::GetFullTeamCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_StartMatching.GetFullTeamCount");

	UEventDataCollectionKeys_StartMatching_GetFullTeamCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PlaneCarrying.GetStartPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PlaneCarrying::GetStartPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PlaneCarrying.GetStartPosition");

	UEventDataCollectionKeys_PlaneCarrying_GetStartPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PlaneCarrying.GetEndPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PlaneCarrying::GetEndPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PlaneCarrying.GetEndPosition");

	UEventDataCollectionKeys_PlaneCarrying_GetEndPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PuttingDownCakeFireWorks.GetFireWorksOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PuttingDownCakeFireWorks::GetFireWorksOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PuttingDownCakeFireWorks.GetFireWorksOpenId");

	UEventDataCollectionKeys_PuttingDownCakeFireWorks_GetFireWorksOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PuttingDownCakeFireWorks.GetCakeOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PuttingDownCakeFireWorks::GetCakeOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PuttingDownCakeFireWorks.GetCakeOpenId");

	UEventDataCollectionKeys_PuttingDownCakeFireWorks_GetCakeOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetType");

	UEventDataCollectionKeys_TakeDropItem_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetReason
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetReason()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetReason");

	UEventDataCollectionKeys_TakeDropItem_GetReason_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetPlayerName");

	UEventDataCollectionKeys_TakeDropItem_GetPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetOpenId");

	UEventDataCollectionKeys_TakeDropItem_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemInstanceId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetItemInstanceId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemInstanceId");

	UEventDataCollectionKeys_TakeDropItem_GetItemInstanceId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemId");

	UEventDataCollectionKeys_TakeDropItem_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetItemCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetItemCount");

	UEventDataCollectionKeys_TakeDropItem_GetItemCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetHoldingCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetHoldingCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetHoldingCount");

	UEventDataCollectionKeys_TakeDropItem_GetHoldingCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetBulletCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetBulletCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetBulletCount");

	UEventDataCollectionKeys_TakeDropItem_GetBulletCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakeDropItem.GetBackpackAvatarItemDurability
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakeDropItem::GetBackpackAvatarItemDurability()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakeDropItem.GetBackpackAvatarItemDurability");

	UEventDataCollectionKeys_TakeDropItem_GetBackpackAvatarItemDurability_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakeDropItem_Type.GetTaking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakeDropItem_Type::GetTaking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakeDropItem_Type.GetTaking");

	UEventDataCollectionValues_TakeDropItem_Type_GetTaking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakeDropItem_Type.GetDropping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakeDropItem_Type::GetDropping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakeDropItem_Type.GetDropping");

	UEventDataCollectionValues_TakeDropItem_Type_GetDropping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetStatus");

	UEventDataCollectionKeys_UsingItem_GetStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetPredictLine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetPredictLine()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetPredictLine");

	UEventDataCollectionKeys_UsingItem_GetPredictLine_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetPlayerName");

	UEventDataCollectionKeys_UsingItem_GetPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetOpenId");

	UEventDataCollectionKeys_UsingItem_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetItemLeftCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetItemLeftCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetItemLeftCount");

	UEventDataCollectionKeys_UsingItem_GetItemLeftCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UsingItem.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UsingItem::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UsingItem.GetItemId");

	UEventDataCollectionKeys_UsingItem_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UsingItem_Status.GetLeading
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UsingItem_Status::GetLeading()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UsingItem_Status.GetLeading");

	UEventDataCollectionValues_UsingItem_Status_GetLeading_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UsingItem_Status.GetInteruption
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UsingItem_Status::GetInteruption()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UsingItem_Status.GetInteruption");

	UEventDataCollectionValues_UsingItem_Status_GetInteruption_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UsingItem_Status.GetCompletion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UsingItem_Status::GetCompletion()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UsingItem_Status.GetCompletion");

	UEventDataCollectionValues_UsingItem_Status_GetCompletion_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Falling.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Falling::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Falling.GetType");

	UEventDataCollectionKeys_Falling_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Falling.GetStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Falling::GetStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Falling.GetStatus");

	UEventDataCollectionKeys_Falling_GetStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Falling_Type.GetStart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Falling_Type::GetStart()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Falling_Type.GetStart");

	UEventDataCollectionValues_Falling_Type_GetStart_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Falling_Type.GetEnd
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Falling_Type::GetEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Falling_Type.GetEnd");

	UEventDataCollectionValues_Falling_Type_GetEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Falling_Status.GetNonDriving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Falling_Status::GetNonDriving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Falling_Status.GetNonDriving");

	UEventDataCollectionValues_Falling_Status_GetNonDriving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Falling_Status.GetDriving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Falling_Status::GetDriving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Falling_Status.GetDriving");

	UEventDataCollectionValues_Falling_Status_GetDriving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetUniqueIdentifier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetUniqueIdentifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetUniqueIdentifier");

	UEventDataCollectionKeys_InFieldOfView_GetUniqueIdentifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetTargetWorldLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetTargetWorldLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetTargetWorldLocation");

	UEventDataCollectionKeys_InFieldOfView_GetTargetWorldLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetOldFieldOfViewNotificationStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetOldFieldOfViewNotificationStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetOldFieldOfViewNotificationStatus");

	UEventDataCollectionKeys_InFieldOfView_GetOldFieldOfViewNotificationStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetMyWorldLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetMyWorldLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetMyWorldLocation");

	UEventDataCollectionKeys_InFieldOfView_GetMyWorldLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetMinimalScreenLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetMinimalScreenLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetMinimalScreenLocation");

	UEventDataCollectionKeys_InFieldOfView_GetMinimalScreenLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetMaximumScreenLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetMaximumScreenLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetMaximumScreenLocation");

	UEventDataCollectionKeys_InFieldOfView_GetMaximumScreenLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetFieldOfViewTargetCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetFieldOfViewTargetCategory()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetFieldOfViewTargetCategory");

	UEventDataCollectionKeys_InFieldOfView_GetFieldOfViewTargetCategory_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_InFieldOfView.GetCurrentFieldOfViewNotificationStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_InFieldOfView::GetCurrentFieldOfViewNotificationStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_InFieldOfView.GetCurrentFieldOfViewNotificationStatus");

	UEventDataCollectionKeys_InFieldOfView_GetCurrentFieldOfViewNotificationStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTombBox
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetTombBox()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTombBox");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetTombBox_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTeammateVehicle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetTeammateVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTeammateVehicle");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetTeammateVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTeammate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetTeammate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetTeammate");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetTeammate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetSmog
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetSmog()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetSmog");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetSmog_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetFireWorks
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetFireWorks()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetFireWorks");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetFireWorks_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetEnemyVehicle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetEnemyVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetEnemyVehicle");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetEnemyVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetEnemy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetEnemy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetEnemy");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetEnemy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetCake
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetCake()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetCake");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetCake_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetBombing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetBombing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetBombing");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetBombing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetAirDroping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_InFieldOfView_FieldOfView::GetAirDroping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_InFieldOfView_FieldOfView.GetAirDroping");

	UEventDataCollectionValues_InFieldOfView_FieldOfView_GetAirDroping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetValue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetValue");

	UEventDataCollectionKeys_UnderEnermyAttack_GetValue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetTargetPart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetTargetPart()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetTargetPart");

	UEventDataCollectionKeys_UnderEnermyAttack_GetTargetPart_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetResult2
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetResult2()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetResult2");

	UEventDataCollectionKeys_UnderEnermyAttack_GetResult2_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetResult
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetResult()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetResult");

	UEventDataCollectionKeys_UnderEnermyAttack_GetResult_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetReason
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetReason()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetReason");

	UEventDataCollectionKeys_UnderEnermyAttack_GetReason_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtUniqueIdentifier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtUniqueIdentifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtUniqueIdentifier");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtUniqueIdentifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtUid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtUid()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtUid");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtUid_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPosture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtPosture()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPosture");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtPosture_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPosition");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPlayerTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtPlayerTeamId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPlayerTeamId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtPlayerTeamId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtPlayerName");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtOpenId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtMaxBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtMaxBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtMaxBulletCountInClip");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtMaxBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtIsInHouse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtIsInHouse()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtIsInHouse");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtIsInHouse_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtHealth");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtEquipId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtEquipId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtEquipId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtEquipId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtDirection
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtDirection()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtDirection");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtDirection_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtCarForwardSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtCarForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtCarForwardSpeed");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtCarForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtBulletCountInClip");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtBulletCountInBarrel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtBulletCountInBarrel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtBulletCountInBarrel");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtBulletCountInBarrel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtAim
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetHurtAim()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetHurtAim");

	UEventDataCollectionKeys_UnderEnermyAttack_GetHurtAim_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetDph
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetDph()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetDph");

	UEventDataCollectionKeys_UnderEnermyAttack_GetDph_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetDistance()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetDistance");

	UEventDataCollectionKeys_UnderEnermyAttack_GetDistance_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetCarValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetCarValue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetCarValue");

	UEventDataCollectionKeys_UnderEnermyAttack_GetCarValue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetCarHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetCarHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetCarHealth");

	UEventDataCollectionKeys_UnderEnermyAttack_GetCarHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtUniqueIdentifier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtUniqueIdentifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtUniqueIdentifier");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtUniqueIdentifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtUid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtUid()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtUid");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtUid_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPosture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtPosture()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPosture");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtPosture_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPosition");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPlayerTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtPlayerTeamId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPlayerTeamId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtPlayerTeamId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtPlayerName");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtOpenId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtLastHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtLastHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtLastHealth");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtLastHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacketDurabilityReduction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtJacketDurabilityReduction()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacketDurabilityReduction");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtJacketDurabilityReduction_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacketDurability
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtJacketDurability()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacketDurability");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtJacketDurability_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacket
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtJacket()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtJacket");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtJacket_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtIsInHouse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtIsInHouse()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtIsInHouse");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtIsInHouse_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmetDurabilityReduction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtHelmetDurabilityReduction()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmetDurabilityReduction");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtHelmetDurabilityReduction_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmetDurability
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtHelmetDurability()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmetDurability");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtHelmetDurability_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtHelmet()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHelmet");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtHelmet_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtHealth");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtEquipId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtEquipId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtEquipId");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtEquipId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtDirection
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtDirection()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtDirection");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtDirection_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtCarForwardSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetBeHurtCarForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetBeHurtCarForwardSpeed");

	UEventDataCollectionKeys_UnderEnermyAttack_GetBeHurtCarForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetAce
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_UnderEnermyAttack::GetAce()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_UnderEnermyAttack.GetAce");

	UEventDataCollectionKeys_UnderEnermyAttack_GetAce_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetWeedingOut
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Result::GetWeedingOut()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetWeedingOut");

	UEventDataCollectionValues_UnderEnermyAttack_Result_GetWeedingOut_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetReducingHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Result::GetReducingHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetReducingHealth");

	UEventDataCollectionValues_UnderEnermyAttack_Result_GetReducingHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetKnockingOutReducingHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Result::GetKnockingOutReducingHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetKnockingOutReducingHealth");

	UEventDataCollectionValues_UnderEnermyAttack_Result_GetKnockingOutReducingHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetKnockingOut
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Result::GetKnockingOut()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result.GetKnockingOut");

	UEventDataCollectionValues_UnderEnermyAttack_Result_GetKnockingOut_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result2.GetWeedingOut2
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Result2::GetWeedingOut2()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Result2.GetWeedingOut2");

	UEventDataCollectionValues_UnderEnermyAttack_Result2_GetWeedingOut2_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetVehicleColliding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetVehicleColliding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetVehicleColliding");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetVehicleColliding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetVehicleBombing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetVehicleBombing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetVehicleBombing");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetVehicleBombing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetPoison
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetPoison()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetPoison");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetPoison_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetLastBreathWithoutRescue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetLastBreathWithoutRescue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetLastBreathWithoutRescue");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetLastBreathWithoutRescue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetFalling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetFalling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetFalling");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetFalling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetDrowning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetDrowning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetDrowning");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetDrowning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetBombing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetBombing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetBombing");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetBombing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetAirAttacking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::GetAirAttacking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.GetAirAttacking");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_GetAirAttacking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.FromDamageEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_Reason::FromDamageEvent(const struct FDamageEvent& DamageEvent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_Reason.FromDamageEvent");

	UEventDataCollectionValues_UnderEnermyAttack_Reason_FromDamageEvent_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetWalking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetWalking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetWalking");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetWalking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetTurningHead
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetTurningHead()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetTurningHead");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetTurningHead_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetStanding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetStanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetStanding");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetStanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetRunning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetRunning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetRunning");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetRunning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetProning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetProning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetProning");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetProning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetJumping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetJumping()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetJumping");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetJumping_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetDying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetDying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetDying");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetDying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetDriving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetDriving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetDriving");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetDriving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetCrouching
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetCrouching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetCrouching");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetCrouching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetCarriging
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::GetCarriging()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.GetCarriging");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_GetCarriging_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.FromPawnStates
// (Final, Native, Static, Public, Const)
// Parameters:
// int64_t                        PawnStates                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::FromPawnStates(int64_t PawnStates)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.FromPawnStates");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_FromPawnStates_Params params;
	params.PawnStates = PawnStates;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.FromPawnState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPawnState                     PawnState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture::FromPawnState(EPawnState PawnState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_BeHurtPosture.FromPawnState");

	UEventDataCollectionValues_UnderEnermyAttack_BeHurtPosture_FromPawnState_Params params;
	params.PawnState = PawnState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_UnderEnermyAttack_HurtAim.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   AttackerSTExtraBaseCharacter   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UEventDataCollectionValues_UnderEnermyAttack_HurtAim::Get(class ASTExtraBaseCharacter* AttackerSTExtraBaseCharacter, class AActor* DamageCauser)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_UnderEnermyAttack_HurtAim.Get");

	UEventDataCollectionValues_UnderEnermyAttack_HurtAim_Get_Params params;
	params.AttackerSTExtraBaseCharacter = AttackerSTExtraBaseCharacter;
	params.DamageCauser = DamageCauser;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakingDamage.GetResult
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakingDamage::GetResult()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakingDamage.GetResult");

	UEventDataCollectionKeys_TakingDamage_GetResult_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakingDamage.GetReason
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakingDamage::GetReason()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakingDamage.GetReason");

	UEventDataCollectionKeys_TakingDamage_GetReason_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakingDamage.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakingDamage::GetPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakingDamage.GetPlayerName");

	UEventDataCollectionKeys_TakingDamage_GetPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakingDamage.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakingDamage::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakingDamage.GetOpenId");

	UEventDataCollectionKeys_TakingDamage_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TakingDamage.GetLeftHealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TakingDamage::GetLeftHealth()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TakingDamage.GetLeftHealth");

	UEventDataCollectionKeys_TakingDamage_GetLeftHealth_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetVehicleColliding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetVehicleColliding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetVehicleColliding");

	UEventDataCollectionValues_TakingDamage_Reason_GetVehicleColliding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetVehicleBombing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetVehicleBombing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetVehicleBombing");

	UEventDataCollectionValues_TakingDamage_Reason_GetVehicleBombing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetPoison
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetPoison()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetPoison");

	UEventDataCollectionValues_TakingDamage_Reason_GetPoison_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetLastBreathWithoutRescue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetLastBreathWithoutRescue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetLastBreathWithoutRescue");

	UEventDataCollectionValues_TakingDamage_Reason_GetLastBreathWithoutRescue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetFalling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetFalling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetFalling");

	UEventDataCollectionValues_TakingDamage_Reason_GetFalling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetDrowning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetDrowning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetDrowning");

	UEventDataCollectionValues_TakingDamage_Reason_GetDrowning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetBombing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetBombing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetBombing");

	UEventDataCollectionValues_TakingDamage_Reason_GetBombing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetAirAttacking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::GetAirAttacking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.GetAirAttacking");

	UEventDataCollectionValues_TakingDamage_Reason_GetAirAttacking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_TakingDamage_Reason.FromDamageEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_TakingDamage_Reason::FromDamageEvent(const struct FDamageEvent& DamageEvent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_TakingDamage_Reason.FromDamageEvent");

	UEventDataCollectionValues_TakingDamage_Reason_FromDamageEvent_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleReducing.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleReducing::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleReducing.GetOpenId");

	UEventDataCollectionKeys_CircleReducing_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleChange.GetWorldLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleChange::GetWorldLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleChange.GetWorldLocation");

	UEventDataCollectionKeys_CircleChange_GetWorldLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleChange.GetOldCircleRadius
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleChange::GetOldCircleRadius()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleChange.GetOldCircleRadius");

	UEventDataCollectionKeys_CircleChange_GetOldCircleRadius_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleChange.GetOldCircleCenter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleChange::GetOldCircleCenter()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleChange.GetOldCircleCenter");

	UEventDataCollectionKeys_CircleChange_GetOldCircleCenter_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleChange.GetNewCircleRadius
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleChange::GetNewCircleRadius()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleChange.GetNewCircleRadius");

	UEventDataCollectionKeys_CircleChange_GetNewCircleRadius_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CircleChange.GetNewCircleCenter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CircleChange::GetNewCircleCenter()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CircleChange.GetNewCircleCenter");

	UEventDataCollectionKeys_CircleChange_GetNewCircleCenter_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Rescue.GetStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Rescue::GetStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Rescue.GetStatus");

	UEventDataCollectionKeys_Rescue_GetStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Rescue.GetRescuePlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Rescue::GetRescuePlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Rescue.GetRescuePlayerName");

	UEventDataCollectionKeys_Rescue_GetRescuePlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Rescue.GetRescueOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Rescue::GetRescueOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Rescue.GetRescueOpenId");

	UEventDataCollectionKeys_Rescue_GetRescueOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Rescue.GetBeRescuePlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Rescue::GetBeRescuePlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Rescue.GetBeRescuePlayerName");

	UEventDataCollectionKeys_Rescue_GetBeRescuePlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Rescue.GetBeRescueOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Rescue::GetBeRescueOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Rescue.GetBeRescueOpenId");

	UEventDataCollectionKeys_Rescue_GetBeRescueOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetVehicleId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetVehicleId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetVehicleId");

	UEventDataCollectionKeys_DrivingVehicle_GetVehicleId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetTire
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetTire()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetTire");

	UEventDataCollectionKeys_DrivingVehicle_GetTire_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetStatus");

	UEventDataCollectionKeys_DrivingVehicle_GetStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetSpeed");

	UEventDataCollectionKeys_DrivingVehicle_GetSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetPassengerOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetPassengerOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetPassengerOpenId");

	UEventDataCollectionKeys_DrivingVehicle_GetPassengerOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetOil
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetOil()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetOil");

	UEventDataCollectionKeys_DrivingVehicle_GetOil_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDrivingType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetDrivingType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDrivingType");

	UEventDataCollectionKeys_DrivingVehicle_GetDrivingType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverUId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetDriverUId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverUId");

	UEventDataCollectionKeys_DrivingVehicle_GetDriverUId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetDriverPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverPlayerName");

	UEventDataCollectionKeys_DrivingVehicle_GetDriverPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_DrivingVehicle::GetDriverOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_DrivingVehicle.GetDriverOpenId");

	UEventDataCollectionKeys_DrivingVehicle_GetDriverOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_DrivingVehicle_DrivingType.GetPassanger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_DrivingVehicle_DrivingType::GetPassanger()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_DrivingVehicle_DrivingType.GetPassanger");

	UEventDataCollectionValues_DrivingVehicle_DrivingType_GetPassanger_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_DrivingVehicle_DrivingType.GetDriver
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_DrivingVehicle_DrivingType::GetDriver()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_DrivingVehicle_DrivingType.GetDriver");

	UEventDataCollectionValues_DrivingVehicle_DrivingType_GetDriver_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_DrivingVehicle_Status.GetOn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_DrivingVehicle_Status::GetOn()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_DrivingVehicle_Status.GetOn");

	UEventDataCollectionValues_DrivingVehicle_Status_GetOn_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_DrivingVehicle_Status.GetOff
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_DrivingVehicle_Status::GetOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_DrivingVehicle_Status.GetOff");

	UEventDataCollectionValues_DrivingVehicle_Status_GetOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ReloadingBullet.GetMaxBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ReloadingBullet::GetMaxBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ReloadingBullet.GetMaxBulletCountInClip");

	UEventDataCollectionKeys_ReloadingBullet_GetMaxBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ReloadingBullet.GetBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ReloadingBullet::GetBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ReloadingBullet.GetBulletCountInClip");

	UEventDataCollectionKeys_ReloadingBullet_GetBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ReloadingBullet.GetBulletCountInBarrel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ReloadingBullet::GetBulletCountInBarrel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ReloadingBullet.GetBulletCountInBarrel");

	UEventDataCollectionKeys_ReloadingBullet_GetBulletCountInBarrel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_AirDrop.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_AirDrop::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_AirDrop.GetType");

	UEventDataCollectionKeys_AirDrop_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_AirDrop.GetPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_AirDrop::GetPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_AirDrop.GetPosition");

	UEventDataCollectionKeys_AirDrop_GetPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_AirDrop.GetLandedPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_AirDrop::GetLandedPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_AirDrop.GetLandedPosition");

	UEventDataCollectionKeys_AirDrop_GetLandedPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_AirDrop_Type.GetSuper
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_AirDrop_Type::GetSuper()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_AirDrop_Type.GetSuper");

	UEventDataCollectionValues_AirDrop_Type_GetSuper_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_AirDrop_Type.GetNormal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_AirDrop_Type::GetNormal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_AirDrop_Type.GetNormal");

	UEventDataCollectionValues_AirDrop_Type_GetNormal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ItemAttach.GetState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ItemAttach::GetState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ItemAttach.GetState");

	UEventDataCollectionKeys_ItemAttach_GetState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ItemAttach.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ItemAttach::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ItemAttach.GetOpenId");

	UEventDataCollectionKeys_ItemAttach_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ItemAttach.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ItemAttach::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ItemAttach.GetItemId");

	UEventDataCollectionKeys_ItemAttach_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_ItemAttach.GetAttachmentId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_ItemAttach::GetAttachmentId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_ItemAttach.GetAttachmentId");

	UEventDataCollectionKeys_ItemAttach_GetAttachmentId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_ItemAttach_State.GetDetaching
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_ItemAttach_State::GetDetaching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_ItemAttach_State.GetDetaching");

	UEventDataCollectionValues_ItemAttach_State_GetDetaching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_ItemAttach_State.GetAttaching
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_ItemAttach_State::GetAttaching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_ItemAttach_State.GetAttaching");

	UEventDataCollectionValues_ItemAttach_State_GetAttaching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PlayerInfo.GetSex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PlayerInfo::GetSex()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PlayerInfo.GetSex");

	UEventDataCollectionKeys_PlayerInfo_GetSex_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PlayerInfo.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PlayerInfo::GetPlayerName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PlayerInfo.GetPlayerName");

	UEventDataCollectionKeys_PlayerInfo_GetPlayerName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PlayerInfo.GetAvatars
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PlayerInfo::GetAvatars()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PlayerInfo.GetAvatars");

	UEventDataCollectionKeys_PlayerInfo_GetAvatars_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_PlayerInfo_Sex.GetMale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_PlayerInfo_Sex::GetMale()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_PlayerInfo_Sex.GetMale");

	UEventDataCollectionValues_PlayerInfo_Sex_GetMale_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_PlayerInfo_Sex.GetFemale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_PlayerInfo_Sex::GetFemale()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_PlayerInfo_Sex.GetFemale");

	UEventDataCollectionValues_PlayerInfo_Sex_GetFemale_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MiniMapShowInfo.GetVoiceCheck
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MiniMapShowInfo::GetVoiceCheck()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MiniMapShowInfo.GetVoiceCheck");

	UEventDataCollectionKeys_MiniMapShowInfo_GetVoiceCheck_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MiniMapShowInfo.GetPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MiniMapShowInfo::GetPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MiniMapShowInfo.GetPosition");

	UEventDataCollectionKeys_MiniMapShowInfo_GetPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetWeapon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck::GetWeapon()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetWeapon");

	UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck_GetWeapon_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetTyre
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck::GetTyre()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetTyre");

	UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck_GetTyre_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetSilentWeapon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck::GetSilentWeapon()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetSilentWeapon");

	UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck_GetSilentWeapon_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetGlass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck::GetGlass()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetGlass");

	UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck_GetGlass_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetFootPrint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck::GetFootPrint()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapShowInfo_VoiceCheck.GetFootPrint");

	UEventDataCollectionValues_MiniMapShowInfo_VoiceCheck_GetFootPrint_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Following.GetFollowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Following::GetFollowType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Following.GetFollowType");

	UEventDataCollectionKeys_Following_GetFollowType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Following.GetFollowerOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Following::GetFollowerOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Following.GetFollowerOpenId");

	UEventDataCollectionKeys_Following_GetFollowerOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Following.GetFolloweeOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Following::GetFolloweeOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Following.GetFolloweeOpenId");

	UEventDataCollectionKeys_Following_GetFolloweeOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Following_FollowType.GetRefuse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Following_FollowType::GetRefuse()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Following_FollowType.GetRefuse");

	UEventDataCollectionValues_Following_FollowType_GetRefuse_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Following_FollowType.GetInvitation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Following_FollowType::GetInvitation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Following_FollowType.GetInvitation");

	UEventDataCollectionValues_Following_FollowType_GetInvitation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Following_FollowType.GetFollowing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Following_FollowType::GetFollowing()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Following_FollowType.GetFollowing");

	UEventDataCollectionValues_Following_FollowType_GetFollowing_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Following_FollowType.GetCancellation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Following_FollowType::GetCancellation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Following_FollowType.GetCancellation");

	UEventDataCollectionValues_Following_FollowType_GetCancellation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Following_FollowType.GetAcception
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Following_FollowType::GetAcception()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Following_FollowType.GetAcception");

	UEventDataCollectionValues_Following_FollowType_GetAcception_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MiniMapPinning.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MiniMapPinning::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MiniMapPinning.GetType");

	UEventDataCollectionKeys_MiniMapPinning_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MiniMapPinning.GetPinPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MiniMapPinning::GetPinPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MiniMapPinning.GetPinPosition");

	UEventDataCollectionKeys_MiniMapPinning_GetPinPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MiniMapPinning.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MiniMapPinning::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MiniMapPinning.GetOpenId");

	UEventDataCollectionKeys_MiniMapPinning_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapPinning_Type.GetPinning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapPinning_Type::GetPinning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapPinning_Type.GetPinning");

	UEventDataCollectionValues_MiniMapPinning_Type_GetPinning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_MiniMapPinning_Type.GetNonPinning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_MiniMapPinning_Type::GetNonPinning()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_MiniMapPinning_Type.GetNonPinning");

	UEventDataCollectionValues_MiniMapPinning_Type_GetNonPinning_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Blocking.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Blocking::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Blocking.GetType");

	UEventDataCollectionKeys_Blocking_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Blocking.GetBlockerOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Blocking::GetBlockerOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Blocking.GetBlockerOpenId");

	UEventDataCollectionKeys_Blocking_GetBlockerOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Blocking.GetBlockerIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Blocking::GetBlockerIndex()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Blocking.GetBlockerIndex");

	UEventDataCollectionKeys_Blocking_GetBlockerIndex_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Blocking.GetBlockeeOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Blocking::GetBlockeeOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Blocking.GetBlockeeOpenId");

	UEventDataCollectionKeys_Blocking_GetBlockeeOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Blocking.GetBlockeeIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Blocking::GetBlockeeIndex()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Blocking.GetBlockeeIndex");

	UEventDataCollectionKeys_Blocking_GetBlockeeIndex_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Blocking_Type.GetNonBlocking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Blocking_Type::GetNonBlocking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Blocking_Type.GetNonBlocking");

	UEventDataCollectionValues_Blocking_Type_GetNonBlocking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_Blocking_Type.GetBlocking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_Blocking_Type::GetBlocking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_Blocking_Type.GetBlocking");

	UEventDataCollectionValues_Blocking_Type_GetBlocking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Dancing.GetDancerOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Dancing::GetDancerOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Dancing.GetDancerOpenId");

	UEventDataCollectionKeys_Dancing_GetDancerOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_Dancing.GetDanceId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_Dancing::GetDanceId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_Dancing.GetDanceId");

	UEventDataCollectionKeys_Dancing_GetDanceId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetOpenId");

	UEventDataCollectionKeys_PickingupTombBox_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetItemIDs()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemIDs");

	UEventDataCollectionKeys_PickingupTombBox_GetItemIDs_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemId");

	UEventDataCollectionKeys_PickingupTombBox_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemCounts
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetItemCounts()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemCounts");

	UEventDataCollectionKeys_PickingupTombBox_GetItemCounts_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetItemCount()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetItemCount");

	UEventDataCollectionKeys_PickingupTombBox_GetItemCount_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PickingupTombBox.GetBoxName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PickingupTombBox::GetBoxName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PickingupTombBox.GetBoxName");

	UEventDataCollectionKeys_PickingupTombBox_GetBoxName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_AirAttacking.GetWorldLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_AirAttacking::GetWorldLocation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_AirAttacking.GetWorldLocation");

	UEventDataCollectionKeys_AirAttacking_GetWorldLocation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_AirAttacking.GetCenter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_AirAttacking::GetCenter()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_AirAttacking.GetCenter");

	UEventDataCollectionKeys_AirAttacking_GetCenter_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CurrentWeapon.GetMaxBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CurrentWeapon::GetMaxBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CurrentWeapon.GetMaxBulletCountInClip");

	UEventDataCollectionKeys_CurrentWeapon_GetMaxBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CurrentWeapon.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CurrentWeapon::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CurrentWeapon.GetItemId");

	UEventDataCollectionKeys_CurrentWeapon_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CurrentWeapon.GetBulletCountInClip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CurrentWeapon::GetBulletCountInClip()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CurrentWeapon.GetBulletCountInClip");

	UEventDataCollectionKeys_CurrentWeapon_GetBulletCountInClip_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_CurrentWeapon.GetBulletCountInBarrel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_CurrentWeapon::GetBulletCountInBarrel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_CurrentWeapon.GetBulletCountInBarrel");

	UEventDataCollectionKeys_CurrentWeapon_GetBulletCountInBarrel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_SceneInfo.GetIsInHouse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_SceneInfo::GetIsInHouse()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_SceneInfo.GetIsInHouse");

	UEventDataCollectionKeys_SceneInfo_GetIsInHouse_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_SceneInfo_IsInHouse.GetYes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_SceneInfo_IsInHouse::GetYes()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_SceneInfo_IsInHouse.GetYes");

	UEventDataCollectionValues_SceneInfo_IsInHouse_GetYes_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_SceneInfo_IsInHouse.GetNo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_SceneInfo_IsInHouse::GetNo()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_SceneInfo_IsInHouse.GetNo");

	UEventDataCollectionValues_SceneInfo_IsInHouse_GetNo_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TeamInfo.GetTeammateUIds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TeamInfo::GetTeammateUIds()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TeamInfo.GetTeammateUIds");

	UEventDataCollectionKeys_TeamInfo_GetTeammateUIds_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TeamInfo.GetTeammateOpenIds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TeamInfo::GetTeammateOpenIds()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TeamInfo.GetTeammateOpenIds");

	UEventDataCollectionKeys_TeamInfo_GetTeammateOpenIds_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TeamInfo.GetTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TeamInfo::GetTeamId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TeamInfo.GetTeamId");

	UEventDataCollectionKeys_TeamInfo_GetTeamId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_EnteringLeavingTeam::GetTeamId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetTeamId");

	UEventDataCollectionKeys_EnteringLeavingTeam_GetTeamId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_EnteringLeavingTeam::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetOpenId");

	UEventDataCollectionKeys_EnteringLeavingTeam_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_EnteringLeavingTeam::GetAction()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_EnteringLeavingTeam.GetAction");

	UEventDataCollectionKeys_EnteringLeavingTeam_GetAction_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_EnteringLeavingTeam_Action.GetLeaving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_EnteringLeavingTeam_Action::GetLeaving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_EnteringLeavingTeam_Action.GetLeaving");

	UEventDataCollectionValues_EnteringLeavingTeam_Action_GetLeaving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_EnteringLeavingTeam_Action.GetEntering
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_EnteringLeavingTeam_Action::GetEntering()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_EnteringLeavingTeam_Action.GetEntering");

	UEventDataCollectionValues_EnteringLeavingTeam_Action_GetEntering_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_OnOffline.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_OnOffline::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_OnOffline.GetType");

	UEventDataCollectionKeys_OnOffline_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_OnOffline.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_OnOffline::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_OnOffline.GetOpenId");

	UEventDataCollectionKeys_OnOffline_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_OnOffline_Type.GetOnline
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_OnOffline_Type::GetOnline()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_OnOffline_Type.GetOnline");

	UEventDataCollectionValues_OnOffline_Type_GetOnline_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_OnOffline_Type.GetOffline
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_OnOffline_Type::GetOffline()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_OnOffline_Type.GetOffline");

	UEventDataCollectionValues_OnOffline_Type_GetOffline_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankList.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankList::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankList.GetType");

	UEventDataCollectionKeys_RankList_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankList.GetState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankList::GetState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankList.GetState");

	UEventDataCollectionKeys_RankList_GetState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_RankList.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_RankList::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_RankList.GetOpenId");

	UEventDataCollectionKeys_RankList_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_RankList_State.GetOn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_RankList_State::GetOn()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_RankList_State.GetOn");

	UEventDataCollectionValues_RankList_State_GetOn_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_RankList_State.GetOff
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_RankList_State::GetOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_RankList_State.GetOff");

	UEventDataCollectionValues_RankList_State_GetOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TextMessage.GetText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TextMessage::GetText()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TextMessage.GetText");

	UEventDataCollectionKeys_TextMessage_GetText_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TextMessage.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TextMessage::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TextMessage.GetOpenId");

	UEventDataCollectionKeys_TextMessage_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TextMessage.GetItemPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TextMessage::GetItemPosition()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TextMessage.GetItemPosition");

	UEventDataCollectionKeys_TextMessage_GetItemPosition_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_TextMessage.GetItemId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_TextMessage::GetItemId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_TextMessage.GetItemId");

	UEventDataCollectionKeys_TextMessage_GetItemId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PawnState.IsInterestedPawnStates
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPawnState                     PawnState                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEventDataCollectionKeys_PawnState::IsInterestedPawnStates(EPawnState PawnState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PawnState.IsInterestedPawnStates");

	UEventDataCollectionKeys_PawnState_IsInterestedPawnStates_Params params;
	params.PawnState = PawnState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PawnState.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PawnState::GetType()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PawnState.GetType");

	UEventDataCollectionKeys_PawnState_GetType_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PawnState.GetStates
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PawnState::GetStates()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PawnState.GetStates");

	UEventDataCollectionKeys_PawnState_GetStates_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PawnState.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PawnState::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PawnState.GetOpenId");

	UEventDataCollectionKeys_PawnState_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_PawnState.GetChangedState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_PawnState::GetChangedState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_PawnState.GetChangedState");

	UEventDataCollectionKeys_PawnState_GetChangedState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_PawnState_State.GetLeaving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_PawnState_State::GetLeaving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_PawnState_State.GetLeaving");

	UEventDataCollectionValues_PawnState_State_GetLeaving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_PawnState_State.GetEntering
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_PawnState_State::GetEntering()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_PawnState_State.GetEntering");

	UEventDataCollectionValues_PawnState_State_GetEntering_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetRightState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_OpenCloseDoor::GetRightState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetRightState");

	UEventDataCollectionKeys_OpenCloseDoor_GetRightState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_OpenCloseDoor::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetOpenId");

	UEventDataCollectionKeys_OpenCloseDoor_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetLeftState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_OpenCloseDoor::GetLeftState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_OpenCloseDoor.GetLeftState");

	UEventDataCollectionKeys_OpenCloseDoor_GetLeftState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_OpenCloseDoor_RightState::GetOpen()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetOpen");

	UEventDataCollectionValues_OpenCloseDoor_RightState_GetOpen_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetClose
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_OpenCloseDoor_RightState::GetClose()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetClose");

	UEventDataCollectionValues_OpenCloseDoor_RightState_GetClose_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetBroken
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionValues_OpenCloseDoor_RightState::GetBroken()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionValues_OpenCloseDoor_RightState.GetBroken");

	UEventDataCollectionValues_OpenCloseDoor_RightState_GetBroken_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MicSpeakerState.GetSpeaker
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MicSpeakerState::GetSpeaker()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MicSpeakerState.GetSpeaker");

	UEventDataCollectionKeys_MicSpeakerState_GetSpeaker_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MicSpeakerState.GetOpenId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MicSpeakerState::GetOpenId()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MicSpeakerState.GetOpenId");

	UEventDataCollectionKeys_MicSpeakerState_GetOpenId_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_MicSpeakerState.GetMic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_MicSpeakerState::GetMic()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_MicSpeakerState.GetMic");

	UEventDataCollectionKeys_MicSpeakerState_GetMic_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_VehicleState.GetWheelStates
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_VehicleState::GetWheelStates()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_VehicleState.GetWheelStates");

	UEventDataCollectionKeys_VehicleState_GetWheelStates_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_VehicleState.GetHp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_VehicleState::GetHp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_VehicleState.GetHp");

	UEventDataCollectionKeys_VehicleState_GetHp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_VehicleState.GetFuel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_VehicleState::GetFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_VehicleState.GetFuel");

	UEventDataCollectionKeys_VehicleState_GetFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.EventDataCollectionKeys_VehicleState.GetForwardSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

struct FString UEventDataCollectionKeys_VehicleState::GetForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.EventDataCollectionKeys_VehicleState.GetForwardSpeed");

	UEventDataCollectionKeys_VehicleState_GetForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.FloatingCapsuleVehicle.VehicleBreakOutVelocity
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ApplyVelocity                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bAddVelocity                   (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::VehicleBreakOutVelocity(const struct FVector& ApplyVelocity, bool bAddVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.VehicleBreakOutVelocity");

	AFloatingCapsuleVehicle_VehicleBreakOutVelocity_Params params;
	params.ApplyVelocity = ApplyVelocity;
	params.bAddVelocity = bAddVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.SetTargetFloatState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUpState                       (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::SetTargetFloatState(bool bUpState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.SetTargetFloatState");

	AFloatingCapsuleVehicle_SetTargetFloatState_Params params;
	params.bUpState = bUpState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.SetServerPrecentPenetratingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::SetServerPrecentPenetratingEnabled(bool Enabled)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.SetServerPrecentPenetratingEnabled");

	AFloatingCapsuleVehicle_SetServerPrecentPenetratingEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.ServerBreakOut
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::ServerBreakOut(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.ServerBreakOut");

	AFloatingCapsuleVehicle_ServerBreakOut_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.OnRep_BreakOutState
// (Final, Native, Protected)
// Parameters:
// bool                           bPrevState                     (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::OnRep_BreakOutState(bool bPrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.OnRep_BreakOutState");

	AFloatingCapsuleVehicle_OnRep_BreakOutState_Params params;
	params.bPrevState = bPrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.MoveWheelHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::MoveWheelHeight(float DeltaSeconds)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.MoveWheelHeight");

	AFloatingCapsuleVehicle_MoveWheelHeight_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.GetFloatingVehicleMovement
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USTExtraFloatingVehicleMovementComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USTExtraFloatingVehicleMovementComponentBase* AFloatingCapsuleVehicle::GetFloatingVehicleMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.GetFloatingVehicleMovement");

	AFloatingCapsuleVehicle_GetFloatingVehicleMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.FloatingCapsuleVehicle.GetEnterDistanceSq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFloatingCapsuleVehicle::GetEnterDistanceSq()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.GetEnterDistanceSq");

	AFloatingCapsuleVehicle_GetEnterDistanceSq_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.FloatingCapsuleVehicle.DoBreakOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::DoBreakOut(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.DoBreakOut");

	AFloatingCapsuleVehicle_DoBreakOut_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.BreakOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AFloatingCapsuleVehicle::BreakOut(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.BreakOut");

	AFloatingCapsuleVehicle_BreakOut_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingCapsuleVehicle.BPTryCheckSimulatePhysics
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFloatingCapsuleVehicle::BPTryCheckSimulatePhysics()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingCapsuleVehicle.BPTryCheckSimulatePhysics");

	AFloatingCapsuleVehicle_BPTryCheckSimulatePhysics_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingMechaAnimInstance.TryUncombineWithMecha
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFloatingMechaAnimInstance::TryUncombineWithMecha()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingMechaAnimInstance.TryUncombineWithMecha");

	UFloatingMechaAnimInstance_TryUncombineWithMecha_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingMechaAnimInstance.TryCombineWithMecha
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*  SourceMechaMesh                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 InRelativeLocation             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                InRelativeRotation             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFloatingMechaAnimInstance::TryCombineWithMecha(class USkeletalMeshComponent* SourceMechaMesh, const struct FVector& InRelativeLocation, const struct FRotator& InRelativeRotation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingMechaAnimInstance.TryCombineWithMecha");

	UFloatingMechaAnimInstance_TryCombineWithMecha_Params params;
	params.SourceMechaMesh = SourceMechaMesh;
	params.InRelativeLocation = InRelativeLocation;
	params.InRelativeRotation = InRelativeRotation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingMechaAnimInstance.HandleOnPlayerEnterVehicle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UFloatingMechaAnimInstance::HandleOnPlayerEnterVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingMechaAnimInstance.HandleOnPlayerEnterVehicle");

	UFloatingMechaAnimInstance_HandleOnPlayerEnterVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingMechaAnimInstance.HandleOnNitrogenAccelStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ENitrogenAccelState            State                          (Parm, ZeroConstructor, IsPlainOldData)
// ENitrogenAccelState            preState                       (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraVehicleBase*     Vehile                         (Parm, ZeroConstructor, IsPlainOldData)

void UFloatingMechaAnimInstance::HandleOnNitrogenAccelStateChanged(ENitrogenAccelState State, ENitrogenAccelState preState, class ASTExtraVehicleBase* Vehile)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingMechaAnimInstance.HandleOnNitrogenAccelStateChanged");

	UFloatingMechaAnimInstance_HandleOnNitrogenAccelStateChanged_Params params;
	params.State = State;
	params.preState = preState;
	params.Vehile = Vehile;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FloatingMechaAnimInstance.GetLuaDebugString
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UFloatingMechaAnimInstance::GetLuaDebugString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FloatingMechaAnimInstance.GetLuaDebugString");

	UFloatingMechaAnimInstance_GetLuaDebugString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.FlyingArmorMoveObj.SetRisingInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UFlyingArmorMoveObj::SetRisingInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.SetRisingInput");

	UFlyingArmorMoveObj_SetRisingInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FlyingArmorMoveObj.SetActiveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFAMActiveState                NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UFlyingArmorMoveObj::SetActiveState(EFAMActiveState NewState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.SetActiveState");

	UFlyingArmorMoveObj_SetActiveState_Params params;
	params.NewState = NewState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FlyingArmorMoveObj.OnLeaveFly
// (Event, Public, BlueprintEvent)

void UFlyingArmorMoveObj::OnLeaveFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.OnLeaveFly");

	UFlyingArmorMoveObj_OnLeaveFly_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FlyingArmorMoveObj.OnEnterFly
// (Event, Public, BlueprintEvent)

void UFlyingArmorMoveObj::OnEnterFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.OnEnterFly");

	UFlyingArmorMoveObj_OnEnterFly_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FlyingArmorMoveObj.LeaveFly
// (Final, Native, Public, BlueprintCallable)

void UFlyingArmorMoveObj::LeaveFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.LeaveFly");

	UFlyingArmorMoveObj_LeaveFly_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FlyingArmorMoveObj.EnterFly
// (Final, Native, Public, BlueprintCallable)

void UFlyingArmorMoveObj::EnterFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FlyingArmorMoveObj.EnterFly");

	UFlyingArmorMoveObj_EnterFly_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.UnbindPlayerInputDelegate
// (Final, Native, Public, BlueprintCallable)

void AFreeViewPawn::UnbindPlayerInputDelegate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.UnbindPlayerInputDelegate");

	AFreeViewPawn_UnbindPlayerInputDelegate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.SetController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* InController                   (Parm, ZeroConstructor, IsPlainOldData)

void AFreeViewPawn::SetController(class ASTExtraPlayerController* InController)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.SetController");

	AFreeViewPawn_SetController_Params params;
	params.InController = InController;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.MoveUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AFreeViewPawn::MoveUp(float Val)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.MoveUp");

	AFreeViewPawn_MoveUp_Params params;
	params.Val = Val;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.MoveRight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AFreeViewPawn::MoveRight(float Val)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.MoveRight");

	AFreeViewPawn_MoveRight_Params params;
	params.Val = Val;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.MoveForward
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AFreeViewPawn::MoveForward(float Val)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.MoveForward");

	AFreeViewPawn_MoveForward_Params params;
	params.Val = Val;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.FreeViewPawn.GetFreeViewOrigin
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFreeViewPawn::GetFreeViewOrigin()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.GetFreeViewOrigin");

	AFreeViewPawn_GetFreeViewOrigin_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.FreeViewPawn.BindPlayerInputDelegate
// (Final, Native, Public, BlueprintCallable)

void AFreeViewPawn::BindPlayerInputDelegate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.FreeViewPawn.BindPlayerInputDelegate");

	AFreeViewPawn_BindPlayerInputDelegate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.OnTakeDamage
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::OnTakeDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.OnTakeDamage");

	UHorseAnimInstance_OnTakeDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.OnHorseSuddenStop
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          StopDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::OnHorseSuddenStop(float StopDuration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.OnHorseSuddenStop");

	UHorseAnimInstance_OnHorseSuddenStop_Params params;
	params.StopDuration = StopDuration;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.OnHorseShocked
// (Final, Native, Public)

void UHorseAnimInstance::OnHorseShocked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.OnHorseShocked");

	UHorseAnimInstance_OnHorseShocked_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnHorseSuddenStop
// (Final, Native, Public)

void UHorseAnimInstance::HandleOnHorseSuddenStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnHorseSuddenStop");

	UHorseAnimInstance_HandleOnHorseSuddenStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnHorseJumped
// (Final, Native, Public)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialJump                   (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::HandleOnHorseJumped(int JumpCount, bool bSpecialJump)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnHorseJumped");

	UHorseAnimInstance_HandleOnHorseJumped_Params params;
	params.JumpCount = JumpCount;
	params.bSpecialJump = bSpecialJump;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnHorseFeeded
// (Final, Native, Public)

void UHorseAnimInstance::HandleOnHorseFeeded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnHorseFeeded");

	UHorseAnimInstance_HandleOnHorseFeeded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnHorseAccelerate
// (Final, Native, Public)

void UHorseAnimInstance::HandleOnHorseAccelerate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnHorseAccelerate");

	UHorseAnimInstance_HandleOnHorseAccelerate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnEndMatchDistance
// (Final, Native, Public)
// Parameters:
// float                          StopDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::HandleOnEndMatchDistance(float StopDuration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnEndMatchDistance");

	UHorseAnimInstance_HandleOnEndMatchDistance_Params params;
	params.StopDuration = StopDuration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.HandleOnBeginMatchDistance
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 PredictedStopLocation          (Parm, IsPlainOldData)

void UHorseAnimInstance::HandleOnBeginMatchDistance(const struct FVector& PredictedStopLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.HandleOnBeginMatchDistance");

	UHorseAnimInstance_HandleOnBeginMatchDistance_Params params;
	params.PredictedStopLocation = PredictedStopLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.GetLuaDebugString
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UHorseAnimInstance::GetLuaDebugString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.GetLuaDebugString");

	UHorseAnimInstance_GetLuaDebugString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseAnimInstance.BpOnTakeDamage
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::BpOnTakeDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.BpOnTakeDamage");

	UHorseAnimInstance_BpOnTakeDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.BpOnHorseShocked
// (Event, Public, BlueprintEvent)

void UHorseAnimInstance::BpOnHorseShocked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.BpOnHorseShocked");

	UHorseAnimInstance_BpOnHorseShocked_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.BpHandleOnHorseJumped
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)

void UHorseAnimInstance::BpHandleOnHorseJumped(int JumpCount)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.BpHandleOnHorseJumped");

	UHorseAnimInstance_BpHandleOnHorseJumped_Params params;
	params.JumpCount = JumpCount;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.BpHandleOnHorseFeeded
// (Event, Public, BlueprintEvent)

void UHorseAnimInstance::BpHandleOnHorseFeeded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.BpHandleOnHorseFeeded");

	UHorseAnimInstance_BpHandleOnHorseFeeded_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseAnimInstance.BpHandleOnHorseAccelerate
// (Event, Public, BlueprintEvent)

void UHorseAnimInstance::BpHandleOnHorseAccelerate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseAnimInstance.BpHandleOnHorseAccelerate");

	UHorseAnimInstance_BpHandleOnHorseAccelerate_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseDistanceMatchingComponent.HandleOnSetHandBrake
// (Final, Native, Public)
// Parameters:
// float                          NewRate                        (Parm, ZeroConstructor, IsPlainOldData)

void UHorseDistanceMatchingComponent::HandleOnSetHandBrake(float NewRate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseDistanceMatchingComponent.HandleOnSetHandBrake");

	UHorseDistanceMatchingComponent_HandleOnSetHandBrake_Params params;
	params.NewRate = NewRate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.OnTakeDamage
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::OnTakeDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.OnTakeDamage");

	UHorseRiderAnimInstance_OnTakeDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.OnHorseShocked
// (Final, Native, Public)

void UHorseRiderAnimInstance::OnHorseShocked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.OnHorseShocked");

	UHorseRiderAnimInstance_OnHorseShocked_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.HandlePlayerWeaponStateChanged
// (Native, Public)
// Parameters:
// TEnumAsByte<enum EFreshWeaponStateType> NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::HandlePlayerWeaponStateChanged(TEnumAsByte<enum EFreshWeaponStateType> NewState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.HandlePlayerWeaponStateChanged");

	UHorseRiderAnimInstance_HandlePlayerWeaponStateChanged_Params params;
	params.NewState = NewState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.HandleOnHorseSuddenStop
// (Final, Native, Public)

void UHorseRiderAnimInstance::HandleOnHorseSuddenStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.HandleOnHorseSuddenStop");

	UHorseRiderAnimInstance_HandleOnHorseSuddenStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.HandleOnHorseJumped
// (Final, Native, Public)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialJump                   (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::HandleOnHorseJumped(int JumpCount, bool bSpecialJump)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.HandleOnHorseJumped");

	UHorseRiderAnimInstance_HandleOnHorseJumped_Params params;
	params.JumpCount = JumpCount;
	params.bSpecialJump = bSpecialJump;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.HandleOnHorseFeeded
// (Final, Native, Public)

void UHorseRiderAnimInstance::HandleOnHorseFeeded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.HandleOnHorseFeeded");

	UHorseRiderAnimInstance_HandleOnHorseFeeded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.HandleOnHorseAccelerate
// (Final, Native, Public)

void UHorseRiderAnimInstance::HandleOnHorseAccelerate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.HandleOnHorseAccelerate");

	UHorseRiderAnimInstance_HandleOnHorseAccelerate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.DoRandomIdle
// (Final, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::DoRandomIdle(int Index)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.DoRandomIdle");

	UHorseRiderAnimInstance_DoRandomIdle_Params params;
	params.Index = Index;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpOnTakeDamage
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  HitActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitInstigator                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::BpOnTakeDamage(class AActor* HitActor, class AActor* HitInstigator, const struct FHitResult& HitInfo, const struct FVector& ImpulseDir, float Damage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpOnTakeDamage");

	UHorseRiderAnimInstance_BpOnTakeDamage_Params params;
	params.HitActor = HitActor;
	params.HitInstigator = HitInstigator;
	params.HitInfo = HitInfo;
	params.ImpulseDir = ImpulseDir;
	params.Damage = Damage;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpOnHorseShocked
// (Event, Public, BlueprintEvent)

void UHorseRiderAnimInstance::BpOnHorseShocked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpOnHorseShocked");

	UHorseRiderAnimInstance_BpOnHorseShocked_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpHandleOnHorseSuddenStop
// (Event, Public, BlueprintEvent)

void UHorseRiderAnimInstance::BpHandleOnHorseSuddenStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpHandleOnHorseSuddenStop");

	UHorseRiderAnimInstance_BpHandleOnHorseSuddenStop_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpHandleOnHorseJumped
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)

void UHorseRiderAnimInstance::BpHandleOnHorseJumped(int JumpCount)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpHandleOnHorseJumped");

	UHorseRiderAnimInstance_BpHandleOnHorseJumped_Params params;
	params.JumpCount = JumpCount;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpHandleOnHorseFeeded
// (Event, Public, BlueprintEvent)

void UHorseRiderAnimInstance::BpHandleOnHorseFeeded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpHandleOnHorseFeeded");

	UHorseRiderAnimInstance_BpHandleOnHorseFeeded_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseRiderAnimInstance.BpHandleOnHorseAccelerate
// (Event, Public, BlueprintEvent)

void UHorseRiderAnimInstance::BpHandleOnHorseAccelerate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseRiderAnimInstance.BpHandleOnHorseAccelerate");

	UHorseRiderAnimInstance_BpHandleOnHorseAccelerate_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorsePassengerAnimInstance.HandleOnPreExit
// (Final, Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UHorsePassengerAnimInstance::HandleOnPreExit(class ASTExtraBaseCharacter* Character)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePassengerAnimInstance.HandleOnPreExit");

	UHorsePassengerAnimInstance_HandleOnPreExit_Params params;
	params.Character = Character;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorsePassengerAnimInstance.BpHandleOnPreExit
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UHorsePassengerAnimInstance::BpHandleOnPreExit(class ASTExtraBaseCharacter* Character)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePassengerAnimInstance.BpHandleOnPreExit");

	UHorsePassengerAnimInstance_BpHandleOnPreExit_Params params;
	params.Character = Character;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorsePlayerCurvedUpdateComponent.RegisterCurvedUpdateForPlayer
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveVector*            LocationCurve                  (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveVector*            RotationCurve                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          rate                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 RealExitLocation               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          StartTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CameraLerpStartTime            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CameraLerpDuration             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorsePlayerCurvedUpdateComponent::RegisterCurvedUpdateForPlayer(class ASTExtraBaseCharacter* Player, class UCurveVector* LocationCurve, class UCurveVector* RotationCurve, float rate, const struct FVector& RealExitLocation, float StartTime, float CameraLerpStartTime, float CameraLerpDuration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePlayerCurvedUpdateComponent.RegisterCurvedUpdateForPlayer");

	UHorsePlayerCurvedUpdateComponent_RegisterCurvedUpdateForPlayer_Params params;
	params.Player = Player;
	params.LocationCurve = LocationCurve;
	params.RotationCurve = RotationCurve;
	params.rate = rate;
	params.RealExitLocation = RealExitLocation;
	params.StartTime = StartTime;
	params.CameraLerpStartTime = CameraLerpStartTime;
	params.CameraLerpDuration = CameraLerpDuration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorsePlayerCurvedUpdateComponent.IsPlayerCurvedUpdating
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorsePlayerCurvedUpdateComponent::IsPlayerCurvedUpdating(class ASTExtraBaseCharacter* Player)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePlayerCurvedUpdateComponent.IsPlayerCurvedUpdating");

	UHorsePlayerCurvedUpdateComponent_IsPlayerCurvedUpdating_Params params;
	params.Player = Player;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorsePlayerCurvedUpdateComponent.ForceStopAndRemoveUpdateDataForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UHorsePlayerCurvedUpdateComponent::ForceStopAndRemoveUpdateDataForPlayer(class ASTExtraBaseCharacter* Player)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePlayerCurvedUpdateComponent.ForceStopAndRemoveUpdateDataForPlayer");

	UHorsePlayerCurvedUpdateComponent_ForceStopAndRemoveUpdateDataForPlayer_Params params;
	params.Player = Player;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorsePlayerCurvedUpdateComponent.CanUpdatePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorsePlayerCurvedUpdateComponent::CanUpdatePlayer(class ASTExtraBaseCharacter* Player)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorsePlayerCurvedUpdateComponent.CanUpdatePlayer");

	UHorsePlayerCurvedUpdateComponent_CanUpdatePlayer_Params params;
	params.Player = Player;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseSeatComponent.CheckSocketLocationIsValid
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, IsPlainOldData)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  HorseMesh                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 EnterSocketPos                 (Parm, IsPlainOldData)
// float                          CheckedHalfRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          CheckedHalfHeight              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IgnoreVehicle                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorseSeatComponent::CheckSocketLocationIsValid(const struct FVector& EnterSocketPos, const struct FName& SocketName, class ASTExtraPlayerCharacter* Character, class USkeletalMeshComponent* HorseMesh, bool IgnoreVehicle, float CheckedHalfRadius, float CheckedHalfHeight, struct FVector* OutLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseSeatComponent.CheckSocketLocationIsValid");

	UHorseSeatComponent_CheckSocketLocationIsValid_Params params;
	params.SocketName = SocketName;
	params.Character = Character;
	params.HorseMesh = HorseMesh;
	params.EnterSocketPos = EnterSocketPos;
	params.CheckedHalfRadius = CheckedHalfRadius;
	params.CheckedHalfHeight = CheckedHalfHeight;
	params.IgnoreVehicle = IgnoreVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;

	return params.ReturnValue;
}


// Function Addons.HorseSeatComponent.AddExitHorseSocketsSetting
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FExitHorseSockets       Sockets                        (ConstParm, Parm, OutParm, ReferenceParm)

void UHorseSeatComponent::AddExitHorseSocketsSetting(const struct FExitHorseSockets& Sockets)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseSeatComponent.AddExitHorseSocketsSetting");

	UHorseSeatComponent_AddExitHorseSocketsSetting_Params params;
	params.Sockets = Sockets;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.UpdateTransformingEffect
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::UpdateTransformingEffect(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.UpdateTransformingEffect");

	AHorseVehicle_UpdateTransformingEffect_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.SetHorseMaxWalkSpeed
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                          NewSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::SetHorseMaxWalkSpeed(float NewSpeed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.SetHorseMaxWalkSpeed");

	AHorseVehicle_SetHorseMaxWalkSpeed_Params params;
	params.NewSpeed = NewSpeed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.SetHandBrake
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::SetHandBrake(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.SetHandBrake");

	AHorseVehicle_SetHandBrake_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.ServerTransform
// (Final, Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   InPlayer                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FHorseTransformData     InTranformData                 (Parm)

void AHorseVehicle::ServerTransform(class ASTExtraBaseCharacter* InPlayer, const struct FHorseTransformData& InTranformData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.ServerTransform");

	AHorseVehicle_ServerTransform_Params params;
	params.InPlayer = InPlayer;
	params.InTranformData = InTranformData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.ServerSetHorseMaxWalkSpeed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          NewSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::ServerSetHorseMaxWalkSpeed(float NewSpeed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.ServerSetHorseMaxWalkSpeed");

	AHorseVehicle_ServerSetHorseMaxWalkSpeed_Params params;
	params.NewSpeed = NewSpeed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.ServerSetHandBrake
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::ServerSetHandBrake(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.ServerSetHandBrake");

	AHorseVehicle_ServerSetHandBrake_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.OnRep_HorseTransformData
// (Final, Native, Public)

void AHorseVehicle::OnRep_HorseTransformData()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.OnRep_HorseTransformData");

	AHorseVehicle_OnRep_HorseTransformData_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// DelegateFunction Addons.HorseVehicle.OnHorseTransformDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASTExtraBaseCharacter*   Player                         (Parm, ZeroConstructor, IsPlainOldData)
// EHorseTransformType            TransformType                  (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::OnHorseTransformDelegate__DelegateSignature(class ASTExtraBaseCharacter* Player, EHorseTransformType TransformType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("DelegateFunction Addons.HorseVehicle.OnHorseTransformDelegate__DelegateSignature");

	AHorseVehicle_OnHorseTransformDelegate__DelegateSignature_Params params;
	params.Player = Player;
	params.TransformType = TransformType;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.MulticastDoJump
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpecialJump                   (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::MulticastDoJump(int JumpCount, bool bSpecialJump)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.MulticastDoJump");

	AHorseVehicle_MulticastDoJump_Params params;
	params.JumpCount = JumpCount;
	params.bSpecialJump = bSpecialJump;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.LuaShouldHandleExitVehicleProcess
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ASTExtraPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::LuaShouldHandleExitVehicleProcess(class ASTExtraPlayerController* PlayerController)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.LuaShouldHandleExitVehicleProcess");

	AHorseVehicle_LuaShouldHandleExitVehicleProcess_Params params;
	params.PlayerController = PlayerController;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.Jump
// (Native, Public, BlueprintCallable)

void AHorseVehicle::Jump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.Jump");

	AHorseVehicle_Jump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.IsTransforming
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::IsTransforming()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.IsTransforming");

	AHorseVehicle_IsTransforming_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.HandleVehicleHealthDestroy
// (Native, Public)

void AHorseVehicle::HandleVehicleHealthDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleVehicleHealthDestroy");

	AHorseVehicle_HandleVehicleHealthDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnSeatDetached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnSeatDetached");

	AHorseVehicle_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnPreExitVehicleFinished
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ExitLocation                   (Parm, IsPlainOldData)

void AHorseVehicle::HandleOnPreExitVehicleFinished(class ASTExtraBaseCharacter* Character, ESTExtraVehicleSeatType SeatType, const struct FVector& ExitLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnPreExitVehicleFinished");

	AHorseVehicle_HandleOnPreExitVehicleFinished_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.ExitLocation = ExitLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnPreExitVehicle
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ExitLocation                   (Parm, IsPlainOldData)

void AHorseVehicle::HandleOnPreExitVehicle(class ASTExtraBaseCharacter* Character, ESTExtraVehicleSeatType SeatType, const struct FVector& ExitLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnPreExitVehicle");

	AHorseVehicle_HandleOnPreExitVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.ExitLocation = ExitLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnHorseJumped
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::HandleOnHorseJumped(int JumpCount)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnHorseJumped");

	AHorseVehicle_HandleOnHorseJumped_Params params;
	params.JumpCount = JumpCount;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnDelayFinishHandBrake
// (Final, Native, Public)

void AHorseVehicle::HandleOnDelayFinishHandBrake()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnDelayFinishHandBrake");

	AHorseVehicle_HandleOnDelayFinishHandBrake_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnDeathDestroy
// (Final, Native, Public)

void AHorseVehicle::HandleOnDeathDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnDeathDestroy");

	AHorseVehicle_HandleOnDeathDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnClientExitVehicle
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::HandleOnClientExitVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnClientExitVehicle");

	AHorseVehicle_HandleOnClientExitVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.HandleOnClientEnterVehicle
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::HandleOnClientEnterVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.HandleOnClientEnterVehicle");

	AHorseVehicle_HandleOnClientEnterVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.GetQueryIgnoreActors
// (Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> AHorseVehicle::GetQueryIgnoreActors()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.GetQueryIgnoreActors");

	AHorseVehicle_GetQueryIgnoreActors_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.GetHorseRiders
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   OutRider                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   OutPassenger                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::GetHorseRiders(class ASTExtraBaseCharacter** OutRider, class ASTExtraBaseCharacter** OutPassenger)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.GetHorseRiders");

	AHorseVehicle_GetHorseRiders_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutRider != nullptr)
		*OutRider = params.OutRider;
	if (OutPassenger != nullptr)
		*OutPassenger = params.OutPassenger;
}


// Function Addons.HorseVehicle.GetHorseMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHorseVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHorseVehicleMovementComponent* AHorseVehicle::GetHorseMovementComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.GetHorseMovementComponent");

	AHorseVehicle_GetHorseMovementComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.GetHorseDistanceMatchingComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHorseDistanceMatchingComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHorseDistanceMatchingComponent* AHorseVehicle::GetHorseDistanceMatchingComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.GetHorseDistanceMatchingComponent");

	AHorseVehicle_GetHorseDistanceMatchingComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.GetCanDoSpecialJump
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int                            JumpCount                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::GetCanDoSpecialJump(int JumpCount)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.GetCanDoSpecialJump");

	AHorseVehicle_GetCanDoSpecialJump_Params params;
	params.JumpCount = JumpCount;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.FeedHorse
// (Final, Native, Public, BlueprintCallable)

void AHorseVehicle::FeedHorse()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.FeedHorse");

	AHorseVehicle_FeedHorse_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.ClearTransformingEffect
// (Final, Native, Public, BlueprintCallable)

void AHorseVehicle::ClearTransformingEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.ClearTransformingEffect");

	AHorseVehicle_ClearTransformingEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.BPShouldStopNearPrecipice
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FRepPrecipiceInfo       InPrecipiceInfo                (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::BPShouldStopNearPrecipice(const struct FRepPrecipiceInfo& InPrecipiceInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.BPShouldStopNearPrecipice");

	AHorseVehicle_BPShouldStopNearPrecipice_Params params;
	params.InPrecipiceInfo = InPrecipiceInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.BpHandlePreExitVehicleFinished
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::BpHandlePreExitVehicleFinished(class ASTExtraBaseCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.BpHandlePreExitVehicleFinished");

	AHorseVehicle_BpHandlePreExitVehicleFinished_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.BpHandlePreExitVehicle
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMountFromDirection> Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AHorseVehicle::BpHandlePreExitVehicle(class ASTExtraBaseCharacter* Character, ESTExtraVehicleSeatType SeatType, TEnumAsByte<enum EMountFromDirection> Direction, float Duration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.BpHandlePreExitVehicle");

	AHorseVehicle_BpHandlePreExitVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.Direction = Direction;
	params.Duration = Duration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicle.BPCanJumpObstacle
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 OriginLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                InRotation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FHitResult>      HitResults                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InVelocity                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::BPCanJumpObstacle(const struct FVector& OriginLoc, const struct FRotator& InRotation, TArray<struct FHitResult> HitResults, float Radius, float HalfHeight, const struct FVector& InVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.BPCanJumpObstacle");

	AHorseVehicle_BPCanJumpObstacle_Params params;
	params.OriginLoc = OriginLoc;
	params.InRotation = InRotation;
	params.HitResults = HitResults;
	params.Radius = Radius;
	params.HalfHeight = HalfHeight;
	params.InVelocity = InVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.BPCanAvoidVelocity
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 OriginLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                InRotation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FHitResult>      HitResults                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InVelocity                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHorseVehicle::BPCanAvoidVelocity(const struct FVector& OriginLoc, const struct FRotator& InRotation, TArray<struct FHitResult> HitResults, float Radius, float HalfHeight, const struct FVector& InVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.BPCanAvoidVelocity");

	AHorseVehicle_BPCanAvoidVelocity_Params params;
	params.OriginLoc = OriginLoc;
	params.InRotation = InRotation;
	params.HitResults = HitResults;
	params.Radius = Radius;
	params.HalfHeight = HalfHeight;
	params.InVelocity = InVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicle.AddTransformingEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTransformMatConfig     MatConfig                      (Parm)

void AHorseVehicle::AddTransformingEffect(const struct FTransformMatConfig& MatConfig)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicle.AddTransformingEffect");

	AHorseVehicle_AddTransformingEffect_Params params;
	params.MatConfig = MatConfig;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseWaterSplash.OnEnterWater
// (Final, Native, Protected)
// Parameters:
// class ABioVehicleBase*         BioVehicle                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMovementMode> PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PreviousCustomMode             (Parm, ZeroConstructor, IsPlainOldData)

void UHorseWaterSplash::OnEnterWater(class ABioVehicleBase* BioVehicle, TEnumAsByte<enum EMovementMode> PrevMovementMode, unsigned char PreviousCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseWaterSplash.OnEnterWater");

	UHorseWaterSplash_OnEnterWater_Params params;
	params.BioVehicle = BioVehicle;
	params.PrevMovementMode = PrevMovementMode;
	params.PreviousCustomMode = PreviousCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.ShouldStopNearPrecipice
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FRepPrecipiceInfo       InPrecipiceInfo                (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorseVehicleMovementComponent::ShouldStopNearPrecipice(const struct FRepPrecipiceInfo& InPrecipiceInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.ShouldStopNearPrecipice");

	UHorseVehicleMovementComponent_ShouldStopNearPrecipice_Params params;
	params.InPrecipiceInfo = InPrecipiceInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicleMovementComponent.ShouldOptimizeTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHorseVehicleMovementComponent::ShouldOptimizeTick()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.ShouldOptimizeTick");

	UHorseVehicleMovementComponent_ShouldOptimizeTick_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HorseVehicleMovementComponent.ServerSuddenStopNearPrecipice
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FRepPrecipiceInfo       InPrecipiceInfo                (ConstParm, Parm, ReferenceParm)

void UHorseVehicleMovementComponent::ServerSuddenStopNearPrecipice(const struct FRepPrecipiceInfo& InPrecipiceInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.ServerSuddenStopNearPrecipice");

	UHorseVehicleMovementComponent_ServerSuddenStopNearPrecipice_Params params;
	params.InPrecipiceInfo = InPrecipiceInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.ServerAvoidObstacle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FCustomVOHelper         InVO                           (ConstParm, Parm, ReferenceParm)

void UHorseVehicleMovementComponent::ServerAvoidObstacle(const struct FCustomVOHelper& InVO)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.ServerAvoidObstacle");

	UHorseVehicleMovementComponent_ServerAvoidObstacle_Params params;
	params.InVO = InVO;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.OnVehicleUpdateInAIWorldVolume
// (Final, Native, Protected)

void UHorseVehicleMovementComponent::OnVehicleUpdateInAIWorldVolume()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.OnVehicleUpdateInAIWorldVolume");

	UHorseVehicleMovementComponent_OnVehicleUpdateInAIWorldVolume_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.OnRecoverOnServer
// (Native, Public)

void UHorseVehicleMovementComponent::OnRecoverOnServer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.OnRecoverOnServer");

	UHorseVehicleMovementComponent_OnRecoverOnServer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.NetMulticast_SuddenStop
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UHorseVehicleMovementComponent::NetMulticast_SuddenStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.NetMulticast_SuddenStop");

	UHorseVehicleMovementComponent_NetMulticast_SuddenStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.NetMulticast_DoJumpObstacle
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 InVelocity                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UHorseVehicleMovementComponent::NetMulticast_DoJumpObstacle(const struct FVector& InVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.NetMulticast_DoJumpObstacle");

	UHorseVehicleMovementComponent_NetMulticast_DoJumpObstacle_Params params;
	params.InVelocity = InVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.DoSuddenStop
// (Final, Native, Public)

void UHorseVehicleMovementComponent::DoSuddenStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.DoSuddenStop");

	UHorseVehicleMovementComponent_DoSuddenStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HorseVehicleMovementComponent.ClientUpdatePrecipiceInfo
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// TArray<struct FRepPrecipiceInfo> InPrecipiceInfos               (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UHorseVehicleMovementComponent::ClientUpdatePrecipiceInfo(TArray<struct FRepPrecipiceInfo> InPrecipiceInfos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HorseVehicleMovementComponent.ClientUpdatePrecipiceInfo");

	UHorseVehicleMovementComponent_ClientUpdatePrecipiceInfo_Params params;
	params.InPrecipiceInfos = InPrecipiceInfos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.SetBoosting
// (Native, Public)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringVehicle::SetBoosting(bool bEnabled)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.SetBoosting");

	AHoveringVehicle_SetBoosting_Params params;
	params.bEnabled = bEnabled;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.OnVehicleRefuelWhenNoFuel
// (Final, Native, Protected)
// Parameters:
// float                          PreFuel                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Increment                      (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnVehicleRefuelWhenNoFuel(float PreFuel, float Increment)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnVehicleRefuelWhenNoFuel");

	AHoveringVehicle_OnVehicleRefuelWhenNoFuel_Params params;
	params.PreFuel = PreFuel;
	params.Increment = Increment;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnVehicleFuelRunOut
// (Final, Native, Protected)
// Parameters:
// float                          InMaxFuel                      (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnVehicleFuelRunOut(float InMaxFuel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnVehicleFuelRunOut");

	AHoveringVehicle_OnVehicleFuelRunOut_Params params;
	params.InMaxFuel = InMaxFuel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnSkeletalMeshSleep
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*     SleepingComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnSkeletalMeshSleep(class UPrimitiveComponent* SleepingComponent, const struct FName& BoneName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnSkeletalMeshSleep");

	AHoveringVehicle_OnSkeletalMeshSleep_Params params;
	params.SleepingComponent = SleepingComponent;
	params.BoneName = BoneName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnSkeletalMeshAwake
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*     WakingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnSkeletalMeshAwake(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnSkeletalMeshAwake");

	AHoveringVehicle_OnSkeletalMeshAwake_Params params;
	params.WakingComponent = WakingComponent;
	params.BoneName = BoneName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnRep_SimulateViewData
// (Native, Public)

void AHoveringVehicle::OnRep_SimulateViewData()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnRep_SimulateViewData");

	AHoveringVehicle_OnRep_SimulateViewData_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnRep_bHoveringActive
// (Final, Native, Protected)
// Parameters:
// bool                           PreHoveringState               (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnRep_bHoveringActive(bool PreHoveringState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnRep_bHoveringActive");

	AHoveringVehicle_OnRep_bHoveringActive_Params params;
	params.PreHoveringState = PreHoveringState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnDriverStateChanged
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isOn                           (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnDriverStateChanged(class ASTExtraPlayerCharacter* Character, bool isOn)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnDriverStateChanged");

	AHoveringVehicle_OnDriverStateChanged_Params params;
	params.Character = Character;
	params.isOn = isOn;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnClientExit
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnClientExit(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnClientExit");

	AHoveringVehicle_OnClientExit_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnClientEnter
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnClientEnter(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnClientEnter");

	AHoveringVehicle_OnClientEnter_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.OnClientChangeSeat
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        OldSeatType                    (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        NewSeatType                    (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::OnClientChangeSeat(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType OldSeatType, ESTExtraVehicleSeatType NewSeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.OnClientChangeSeat");

	AHoveringVehicle_OnClientChangeSeat_Params params;
	params.Character = Character;
	params.OldSeatType = OldSeatType;
	params.NewSeatType = NewSeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.InitHoveringSpots
// (Native, Protected)

void AHoveringVehicle::InitHoveringSpots()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.InitHoveringSpots");

	AHoveringVehicle_InitHoveringSpots_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.HandleVehicleHealthDestroy
// (Native, Protected)

void AHoveringVehicle::HandleVehicleHealthDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.HandleVehicleHealthDestroy");

	AHoveringVehicle_HandleVehicleHealthDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.HandleOnSeatDetached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.HandleOnSeatDetached");

	AHoveringVehicle_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.HandleOnSeatChanged
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        LastSeatType                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastSeatIdx                    (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        NewSeatType                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewSeatIdx                     (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::HandleOnSeatChanged(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType LastSeatType, int LastSeatIdx, ESTExtraVehicleSeatType NewSeatType, int NewSeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.HandleOnSeatChanged");

	AHoveringVehicle_HandleOnSeatChanged_Params params;
	params.Character = Character;
	params.LastSeatType = LastSeatType;
	params.LastSeatIdx = LastSeatIdx;
	params.NewSeatType = NewSeatType;
	params.NewSeatIdx = NewSeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.HandleOnSeatAttached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringVehicle::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.HandleOnSeatAttached");

	AHoveringVehicle_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.HandleOnMeshHit
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AHoveringVehicle::HandleOnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.HandleOnMeshHit");

	AHoveringVehicle_HandleOnMeshHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.GetViewRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator AHoveringVehicle::GetViewRotation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.GetViewRotation");

	AHoveringVehicle_GetViewRotation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.GetSpotLocation
// (Final, Native, Public, HasDefaults)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AHoveringVehicle::GetSpotLocation(int Index)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.GetSpotLocation");

	AHoveringVehicle_GetSpotLocation_Params params;
	params.Index = Index;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.GetHoveringMovement
// (Final, Native, Public, Const)
// Parameters:
// class UHoveringVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHoveringVehicleMovementComponent* AHoveringVehicle::GetHoveringMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.GetHoveringMovement");

	AHoveringVehicle_GetHoveringMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.GetForwardSpeed
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AHoveringVehicle::GetForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.GetForwardSpeed");

	AHoveringVehicle_GetForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.DeactivateHoveringSimulate
// (Final, Native, Protected)

void AHoveringVehicle::DeactivateHoveringSimulate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.DeactivateHoveringSimulate");

	AHoveringVehicle_DeactivateHoveringSimulate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicle.CanActivateHoveringSimulate
// (Final, Native, Protected, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringVehicle::CanActivateHoveringSimulate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.CanActivateHoveringSimulate");

	AHoveringVehicle_CanActivateHoveringSimulate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.CalcFinalMomentum
// (Native, Public)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseMomentun                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AHoveringVehicle::CalcFinalMomentum(class UClass* DamageTypeClass, float BaseMomentun)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.CalcFinalMomentum");

	AHoveringVehicle_CalcFinalMomentum_Params params;
	params.DamageTypeClass = DamageTypeClass;
	params.BaseMomentun = BaseMomentun;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicle.ActivateHoveringSimulate
// (Final, Native, Protected)

void AHoveringVehicle::ActivateHoveringSimulate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicle.ActivateHoveringSimulate");

	AHoveringVehicle_ActivateHoveringSimulate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.StateToString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AHoveringMecha::StateToString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.StateToString");

	AHoveringMecha_StateToString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.SetWeaponState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMechaWeaponState> InState                        (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::SetWeaponState(TEnumAsByte<enum EMechaWeaponState> InState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.SetWeaponState");

	AHoveringMecha_SetWeaponState_Params params;
	params.InState = InState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.SetEnterVehicleDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InNewEnterDistance             (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::SetEnterVehicleDistance(float InNewEnterDistance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.SetEnterVehicleDistance");

	AHoveringMecha_SetEnterVehicleDistance_Params params;
	params.InNewEnterDistance = InNewEnterDistance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.SetCollisionResponseForBody
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum ECollisionResponse> NewResponse                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::SetCollisionResponseForBody(TEnumAsByte<enum ECollisionChannel> Channel, TEnumAsByte<enum ECollisionResponse> NewResponse, const struct FName& BoneName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.SetCollisionResponseForBody");

	AHoveringMecha_SetCollisionResponseForBody_Params params;
	params.Channel = Channel;
	params.NewResponse = NewResponse;
	params.BoneName = BoneName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OpenVehicleLogic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AHoveringMecha::OpenVehicleLogic()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OpenVehicleLogic");

	AHoveringMecha_OpenVehicleLogic_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OnRep_UncombineHelper
// (Final, Native, Public)
// Parameters:
// struct FUncombineHelper        OldUncombineHelper             (Parm)

void AHoveringMecha::OnRep_UncombineHelper(const struct FUncombineHelper& OldUncombineHelper)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OnRep_UncombineHelper");

	AHoveringMecha_OnRep_UncombineHelper_Params params;
	params.OldUncombineHelper = OldUncombineHelper;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OnRep_MechaStates
// (Final, Native, Public)
// Parameters:
// uint32_t                       OldStates                      (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::OnRep_MechaStates(uint32_t OldStates)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OnRep_MechaStates");

	AHoveringMecha_OnRep_MechaStates_Params params;
	params.OldStates = OldStates;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OnRep_CombineProcess
// (Final, Native, Public)
// Parameters:
// float                          OldProcess                     (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::OnRep_CombineProcess(float OldProcess)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OnRep_CombineProcess");

	AHoveringMecha_OnRep_CombineProcess_Params params;
	params.OldProcess = OldProcess;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OnInitHoveringSpots
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHoveringMecha::OnInitHoveringSpots()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OnInitHoveringSpots");

	AHoveringMecha_OnInitHoveringSpots_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.OnBeCachedCPlus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  SourceCatcher                  (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::OnBeCachedCPlus(class AActor* SourceCatcher)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.OnBeCachedCPlus");

	AHoveringMecha_OnBeCachedCPlus_Params params;
	params.SourceCatcher = SourceCatcher;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.LeaveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::LeaveState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.LeaveState");

	AHoveringMecha_LeaveState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.InterruptState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// EMechaState                    InterruptBy                    (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::InterruptState(EMechaState State, EMechaState InterruptBy)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.InterruptState");

	AHoveringMecha_InterruptState_Params params;
	params.State = State;
	params.InterruptBy = InterruptBy;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.InitHoveringSpots
// (Native, Public)

void AHoveringMecha::InitHoveringSpots()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.InitHoveringSpots");

	AHoveringMecha_InitHoveringSpots_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.HasState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringMecha::HasState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.HasState");

	AHoveringMecha_HasState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.HasCombined
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringMecha::HasCombined()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.HasCombined");

	AHoveringMecha_HasCombined_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.GetInVehicleLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* AHoveringMecha::GetInVehicleLocalPlayer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.GetInVehicleLocalPlayer");

	AHoveringMecha_GetInVehicleLocalPlayer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.GetCombineState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum ECombineState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<enum ECombineState> AHoveringMecha::GetCombineState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.GetCombineState");

	AHoveringMecha_GetCombineState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.GetCombinedVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* AHoveringMecha::GetCombinedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.GetCombinedVehicle");

	AHoveringMecha_GetCombinedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.GetCombineComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMechaSmoothAttachComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMechaSmoothAttachComponent* AHoveringMecha::GetCombineComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.GetCombineComponent");

	AHoveringMecha_GetCombineComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.EnterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringMecha::EnterState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.EnterState");

	AHoveringMecha_EnterState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringMecha.EnableNitrogenAccelCameraModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerCharacter* Passenger                      (Parm, ZeroConstructor, IsPlainOldData)

void AHoveringMecha::EnableNitrogenAccelCameraModifier(bool bEnable, class ASTExtraPlayerCharacter* Passenger)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.EnableNitrogenAccelCameraModifier");

	AHoveringMecha_EnableNitrogenAccelCameraModifier_Params params;
	params.bEnable = bEnable;
	params.Passenger = Passenger;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.CloseVehicleLogic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AHoveringMecha::CloseVehicleLogic()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.CloseVehicleLogic");

	AHoveringMecha_CloseVehicleLogic_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringMecha.AllowState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AHoveringMecha::AllowState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringMecha.AllowState");

	AHoveringMecha_AllowState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateSimulate
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateSimulate(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateSimulate");

	UHoveringVehicleMovementComponent_UpdateSimulate_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateSimpleHover
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateSimpleHover(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateSimpleHover");

	UHoveringVehicleMovementComponent_UpdateSimpleHover_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateRotationAutoAdapt
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateRotationAutoAdapt(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateRotationAutoAdapt");

	UHoveringVehicleMovementComponent_UpdateRotationAutoAdapt_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdatePreCheck
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdatePreCheck(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdatePreCheck");

	UHoveringVehicleMovementComponent_UpdatePreCheck_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateNitrogenAccel
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateNitrogenAccel(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateNitrogenAccel");

	UHoveringVehicleMovementComponent_UpdateNitrogenAccel_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateMovement2
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateMovement2(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateMovement2");

	UHoveringVehicleMovementComponent_UpdateMovement2_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateMovement
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateMovement(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateMovement");

	UHoveringVehicleMovementComponent_UpdateMovement_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateInput
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateInput(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateInput");

	UHoveringVehicleMovementComponent_UpdateInput_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateHoverSimulation_WeakFeedback
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateHoverSimulation_WeakFeedback(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateHoverSimulation_WeakFeedback");

	UHoveringVehicleMovementComponent_UpdateHoverSimulation_WeakFeedback_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateHoverSimulation
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateHoverSimulation(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateHoverSimulation");

	UHoveringVehicleMovementComponent_UpdateHoverSimulation_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateDrifting
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateDrifting(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateDrifting");

	UHoveringVehicleMovementComponent_UpdateDrifting_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.UpdateDistToLand
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::UpdateDistToLand(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.UpdateDistToLand");

	UHoveringVehicleMovementComponent_UpdateDistToLand_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.SetThrottleInput
// (Final, Native, Public)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::SetThrottleInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.SetThrottleInput");

	UHoveringVehicleMovementComponent_SetThrottleInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.SetSteeringInput
// (Final, Native, Public)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::SetSteeringInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.SetSteeringInput");

	UHoveringVehicleMovementComponent_SetSteeringInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.SetNitrogenAccelState
// (Final, Native, Public)
// Parameters:
// ENitrogenAccelState            NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::SetNitrogenAccelState(ENitrogenAccelState NewState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.SetNitrogenAccelState");

	UHoveringVehicleMovementComponent_SetNitrogenAccelState_Params params;
	params.NewState = NewState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ServerUpdatePassiveAccel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FNitrogenAccelData      NAData                         (ConstParm, Parm, ReferenceParm)

void UHoveringVehicleMovementComponent::ServerUpdatePassiveAccel(const struct FNitrogenAccelData& NAData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ServerUpdatePassiveAccel");

	UHoveringVehicleMovementComponent_ServerUpdatePassiveAccel_Params params;
	params.NAData = NAData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ServerUpdateInput
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          InSteeringInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InThrottleInput                (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                InCameraRot                    (Parm, IsPlainOldData)

void UHoveringVehicleMovementComponent::ServerUpdateInput(float InSteeringInput, float InThrottleInput, const struct FRotator& InCameraRot)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ServerUpdateInput");

	UHoveringVehicleMovementComponent_ServerUpdateInput_Params params;
	params.InSteeringInput = InSteeringInput;
	params.InThrottleInput = InThrottleInput;
	params.InCameraRot = InCameraRot;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ServerNitrogenAccel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UHoveringVehicleMovementComponent::ServerNitrogenAccel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ServerNitrogenAccel");

	UHoveringVehicleMovementComponent_ServerNitrogenAccel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.Reset
// (Final, Native, Public)

void UHoveringVehicleMovementComponent::Reset()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.Reset");

	UHoveringVehicleMovementComponent_Reset_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.OnRep_NitrogenAccelState
// (Final, Native, Protected)
// Parameters:
// ENitrogenAccelState            PrevState                      (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::OnRep_NitrogenAccelState(ENitrogenAccelState PrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.OnRep_NitrogenAccelState");

	UHoveringVehicleMovementComponent_OnRep_NitrogenAccelState_Params params;
	params.PrevState = PrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.OnRecoverOnServer
// (Native, Public)

void UHoveringVehicleMovementComponent::OnRecoverOnServer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.OnRecoverOnServer");

	UHoveringVehicleMovementComponent_OnRecoverOnServer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.IsShouldDsControl
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::IsShouldDsControl()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.IsShouldDsControl");

	UHoveringVehicleMovementComponent_IsShouldDsControl_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.IsInNitrogenAccel
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::IsInNitrogenAccel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.IsInNitrogenAccel");

	UHoveringVehicleMovementComponent_IsInNitrogenAccel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.IsHasPower
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::IsHasPower()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.IsHasPower");

	UHoveringVehicleMovementComponent_IsHasPower_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.Internal_DoNitrogenAccel
// (Final, Native, Protected)

void UHoveringVehicleMovementComponent::Internal_DoNitrogenAccel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.Internal_DoNitrogenAccel");

	UHoveringVehicleMovementComponent_Internal_DoNitrogenAccel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.HandleActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UHoveringVehicleMovementComponent::HandleActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.HandleActorHit");

	UHoveringVehicleMovementComponent_HandleActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ForceCorrectClientNitroAccelState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// ENitrogenAccelState            NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          CD                             (Parm, ZeroConstructor, IsPlainOldData)

void UHoveringVehicleMovementComponent::ForceCorrectClientNitroAccelState(ENitrogenAccelState NewState, float CD)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ForceCorrectClientNitroAccelState");

	UHoveringVehicleMovementComponent_ForceCorrectClientNitroAccelState_Params params;
	params.NewState = NewState;
	params.CD = CD;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ClientUpdateDistToLand
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 TargetLoc                      (Parm, IsPlainOldData)

void UHoveringVehicleMovementComponent::ClientUpdateDistToLand(const struct FVector& TargetLoc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ClientUpdateDistToLand");

	UHoveringVehicleMovementComponent_ClientUpdateDistToLand_Params params;
	params.TargetLoc = TargetLoc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.ClientTryNitrogenAccel
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::ClientTryNitrogenAccel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ClientTryNitrogenAccel");

	UHoveringVehicleMovementComponent_ClientTryNitrogenAccel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.ClientAddForceAfterContinuousHit
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, NetValidate)
// Parameters:
// struct FVector                 Force                          (Parm, IsPlainOldData)

void UHoveringVehicleMovementComponent::ClientAddForceAfterContinuousHit(const struct FVector& Force)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.ClientAddForceAfterContinuousHit");

	UHoveringVehicleMovementComponent_ClientAddForceAfterContinuousHit_Params params;
	params.Force = Force;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.HoveringVehicleMovementComponent.CanPassiveNitrogenAccel
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FString                 FailedCode                     (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::CanPassiveNitrogenAccel(struct FString* FailedCode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.CanPassiveNitrogenAccel");

	UHoveringVehicleMovementComponent_CanPassiveNitrogenAccel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (FailedCode != nullptr)
		*FailedCode = params.FailedCode;

	return params.ReturnValue;
}


// Function Addons.HoveringVehicleMovementComponent.CalculateHoverSimulation
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHoveringSimulateData   SimData                        (Parm, OutParm)
// struct FVector                 SpotWorldLoc                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 OwnerLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHoveringVehicleMovementComponent::CalculateHoverSimulation(const struct FVector& SpotWorldLoc, const struct FVector& OwnerLoc, float DeltaTime, struct FHoveringSimulateData* SimData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.HoveringVehicleMovementComponent.CalculateHoverSimulation");

	UHoveringVehicleMovementComponent_CalculateHoverSimulation_Params params;
	params.SpotWorldLoc = SpotWorldLoc;
	params.OwnerLoc = OwnerLoc;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (SimData != nullptr)
		*SimData = params.SimData;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.StartPhaseMoving
// (Final, Native, Public)

void ULadderMovementComponent::StartPhaseMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.StartPhaseMoving");

	ULadderMovementComponent_StartPhaseMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ShowDebugInformation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::ShowDebugInformation(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ShowDebugInformation");

	ULadderMovementComponent_ShowDebugInformation_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ServerMove
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FLadderMoveData         LadderMoveData                 (Parm)
// int                            MoveDirection                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            EnterOrLeave                   (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::ServerMove(const struct FLadderMoveData& LadderMoveData, int MoveDirection, int EnterOrLeave)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ServerMove");

	ULadderMovementComponent_ServerMove_Params params;
	params.LadderMoveData = LadderMoveData;
	params.MoveDirection = MoveDirection;
	params.EnterOrLeave = EnterOrLeave;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ServerCheckClientError
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLadderMoveData         LadderMoveData                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::ServerCheckClientError(const struct FLadderMoveData& LadderMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ServerCheckClientError");

	ULadderMovementComponent_ServerCheckClientError_Params params;
	params.LadderMoveData = LadderMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.RequestCurrentLadderState
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ULadderMovementComponent::RequestCurrentLadderState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.RequestCurrentLadderState");

	ULadderMovementComponent_RequestCurrentLadderState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ReceiveExitLadder
// (Native, Event, Public, BlueprintEvent)

void ULadderMovementComponent::ReceiveExitLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ReceiveExitLadder");

	ULadderMovementComponent_ReceiveExitLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ReceiveEnterLadder
// (Native, Event, Public, BlueprintEvent)

void ULadderMovementComponent::ReceiveEnterLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ReceiveEnterLadder");

	ULadderMovementComponent_ReceiveEnterLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.PushBackSimAction
// (Final, Native, Public)
// Parameters:
// struct FLadderMoveData         InData                         (Parm)

void ULadderMovementComponent::PushBackSimAction(const struct FLadderMoveData& InData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.PushBackSimAction");

	ULadderMovementComponent_PushBackSimAction_Params params;
	params.InData = InData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.PopFirstSimAction
// (Final, Native, Public)

void ULadderMovementComponent::PopFirstSimAction()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.PopFirstSimAction");

	ULadderMovementComponent_PopFirstSimAction_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.OnRep_NetLadderMoveState
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::OnRep_NetLadderMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.OnRep_NetLadderMoveState");

	ULadderMovementComponent_OnRep_NetLadderMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.OnCharacterExitLadder
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::OnCharacterExitLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.OnCharacterExitLadder");

	ULadderMovementComponent_OnCharacterExitLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.OnCharacterEnterLadder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALadderActor*            Ladder                         (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::OnCharacterEnterLadder(class ALadderActor* Ladder)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.OnCharacterEnterLadder");

	ULadderMovementComponent_OnCharacterEnterLadder_Params params;
	params.Ladder = Ladder;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.LadderMoveInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::LadderMoveInput(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.LadderMoveInput");

	ULadderMovementComponent_LadderMoveInput_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.IsLeaving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::IsLeaving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.IsLeaving");

	ULadderMovementComponent_IsLeaving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.IsEntering
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::IsEntering()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.IsEntering");

	ULadderMovementComponent_IsEntering_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.InitLadderParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALadderActor*            Ladder                         (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::InitLadderParams(class ALadderActor* Ladder)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.InitLadderParams");

	ULadderMovementComponent_InitLadderParams_Params params;
	params.Ladder = Ladder;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.HandleJump
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::HandleJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.HandleJump");

	ULadderMovementComponent_HandleJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.HandleInput
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::HandleInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.HandleInput");

	ULadderMovementComponent_HandleInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.GetStateName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ULadderMovementComponent::GetStateName()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.GetStateName");

	ULadderMovementComponent_GetStateName_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.GetNextMoveData
// (Final, Native, Public)
// Parameters:
// struct FLadderMoveData         Cur                            (Parm)
// int8_t                         movedir                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLadderMoveData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLadderMoveData ULadderMovementComponent::GetNextMoveData(const struct FLadderMoveData& Cur, int8_t movedir)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.GetNextMoveData");

	ULadderMovementComponent_GetNextMoveData_Params params;
	params.Cur = Cur;
	params.movedir = movedir;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.GetLadderAnimSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* ULadderMovementComponent::GetLadderAnimSequence()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.GetLadderAnimSequence");

	ULadderMovementComponent_GetLadderAnimSequence_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.GatherCurrentLadderState
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::GatherCurrentLadderState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.GatherCurrentLadderState");

	ULadderMovementComponent_GatherCurrentLadderState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ExitLadder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::ExitLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ExitLadder");

	ULadderMovementComponent_ExitLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.EnterLadder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALadderActor*            Ladder                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTop                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::EnterLadder(class ALadderActor* Ladder, bool bTop)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.EnterLadder");

	ULadderMovementComponent_EnterLadder_Params params;
	params.Ladder = Ladder;
	params.bTop = bTop;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.EndPhaseMoving
// (Final, Native, Public)

void ULadderMovementComponent::EndPhaseMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.EndPhaseMoving");

	ULadderMovementComponent_EndPhaseMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.EnableCharacterMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::EnableCharacterMovement(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.EnableCharacterMovement");

	ULadderMovementComponent_EnableCharacterMovement_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ClimbUpOneStepInternal
// (Final, Native, Public)

void ULadderMovementComponent::ClimbUpOneStepInternal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ClimbUpOneStepInternal");

	ULadderMovementComponent_ClimbUpOneStepInternal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.ClimbDownOneStepInternal
// (Final, Native, Public)

void ULadderMovementComponent::ClimbDownOneStepInternal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.ClimbDownOneStepInternal");

	ULadderMovementComponent_ClimbDownOneStepInternal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.CheckValidPositionOnLadder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ladder                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            StepNum                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::CheckValidPositionOnLadder(class AActor* Ladder, int StepNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CheckValidPositionOnLadder");

	ULadderMovementComponent_CheckValidPositionOnLadder_Params params;
	params.Ladder = Ladder;
	params.StepNum = StepNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.CheckValidPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULadderMovementComponent::CheckValidPosition(const struct FVector& Pos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CheckValidPosition");

	ULadderMovementComponent_CheckValidPosition_Params params;
	params.Pos = Pos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.CheckEnterOrExitLadder
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::CheckEnterOrExitLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CheckEnterOrExitLadder");

	ULadderMovementComponent_CheckEnterOrExitLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.CheckAutoEnterLadder
// (Final, Native, Public, BlueprintCallable)

void ULadderMovementComponent::CheckAutoEnterLadder()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CheckAutoEnterLadder");

	ULadderMovementComponent_CheckAutoEnterLadder_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.CatchUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLadderMoveData         LadderMoveData                 (Parm)

void ULadderMovementComponent::CatchUp(const struct FLadderMoveData& LadderMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CatchUp");

	ULadderMovementComponent_CatchUp_Params params;
	params.LadderMoveData = LadderMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.CalcLocationOnLadder
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Ladder                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            StepNum                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ULadderMovementComponent::CalcLocationOnLadder(class AActor* Ladder, int StepNum)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.CalcLocationOnLadder");

	ULadderMovementComponent_CalcLocationOnLadder_Params params;
	params.Ladder = Ladder;
	params.StepNum = StepNum;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LadderMovementComponent.BuildActionQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLadderMoveData         Target                         (Parm)

void ULadderMovementComponent::BuildActionQueue(const struct FLadderMoveData& Target)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.BuildActionQueue");

	ULadderMovementComponent_BuildActionQueue_Params params;
	params.Target = Target;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.BindPlayerMoveInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ULadderMovementComponent::BindPlayerMoveInput(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.BindPlayerMoveInput");

	ULadderMovementComponent_BindPlayerMoveInput_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LadderMovementComponent.AdjustClient
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FLadderMoveData         LadderMoveData                 (Parm)

void ULadderMovementComponent::AdjustClient(const struct FLadderMoveData& LadderMoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LadderMovementComponent.AdjustClient");

	ULadderMovementComponent_AdjustClient_Params params;
	params.LadderMoveData = LadderMoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LifterControlMoveObj.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InVelocityZ                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            InMinZ                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            InMaxZ                         (Parm, ZeroConstructor, IsPlainOldData)

void ULifterControlMoveObj::Setup(int InVelocityZ, int InMinZ, int InMaxZ)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.Setup");

	ULifterControlMoveObj_Setup_Params params;
	params.InVelocityZ = InVelocityZ;
	params.InMinZ = InMinZ;
	params.InMaxZ = InMaxZ;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LifterControlMoveObj.SetMoveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InMoveState                    (Parm, ZeroConstructor, IsPlainOldData)

void ULifterControlMoveObj::SetMoveState(int InMoveState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.SetMoveState");

	ULifterControlMoveObj_SetMoveState_Params params;
	params.InMoveState = InMoveState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LifterControlMoveObj.Leave
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ULifterControlMoveObj::Leave()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.Leave");

	ULifterControlMoveObj_Leave_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LifterControlMoveObj.IsMovingUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ULifterControlMoveObj::IsMovingUp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.IsMovingUp");

	ULifterControlMoveObj_IsMovingUp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.LifterControlMoveObj.Enter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ULifterControlMoveObj::Enter()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.Enter");

	ULifterControlMoveObj_Enter_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.LifterControlMoveObj.CalculateVelocity
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ULifterControlMoveObj::CalculateVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.LifterControlMoveObj.CalculateVelocity");

	ULifterControlMoveObj_CalculateVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainCharacterBearerUnit.OnWaitForDoMerge
// (Final, Native, Protected)
// Parameters:
// int                            RequestID                      (Parm, ZeroConstructor, IsPlainOldData)

void UMainCharacterBearerUnit::OnWaitForDoMerge(int RequestID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainCharacterBearerUnit.OnWaitForDoMerge");

	UMainCharacterBearerUnit_OnWaitForDoMerge_Params params;
	params.RequestID = RequestID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainCharacterBearerUnit.OnAvatarMeshMaterialApplyed
// (Final, Native, Public)
// Parameters:
// class UMeshComponent*          MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMainCharacterBearerUnit::OnAvatarMeshMaterialApplyed(class UMeshComponent* MeshComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainCharacterBearerUnit.OnAvatarMeshMaterialApplyed");

	UMainCharacterBearerUnit_OnAvatarMeshMaterialApplyed_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainCharacterBearerUnit.OnAvatarMeshBeforeLoaded
// (Final, Native, Public)

void UMainCharacterBearerUnit::OnAvatarMeshBeforeLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainCharacterBearerUnit.OnAvatarMeshBeforeLoaded");

	UMainCharacterBearerUnit_OnAvatarMeshBeforeLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainCharacterBearerUnit.OnAvatarAllMeshLoaded
// (Final, Native, Public)

void UMainCharacterBearerUnit::OnAvatarAllMeshLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainCharacterBearerUnit.OnAvatarAllMeshLoaded");

	UMainCharacterBearerUnit_OnAvatarAllMeshLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainWeaponBearerUnit.OnWeaponAvatarLoaded
// (Final, Native, Public)
// Parameters:
// int                            Val                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)

void UMainWeaponBearerUnit::OnWeaponAvatarLoaded(int Val, const struct FItemDefineID& ID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainWeaponBearerUnit.OnWeaponAvatarLoaded");

	UMainWeaponBearerUnit_OnWeaponAvatarLoaded_Params params;
	params.Val = Val;
	params.ID = ID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MainWeaponBearerUnit.OnWeaponAttachAvatarLoaded
// (Final, Native, Public)
// Parameters:
// int                            Val                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)

void UMainWeaponBearerUnit::OnWeaponAttachAvatarLoaded(int Val, const struct FItemDefineID& ID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MainWeaponBearerUnit.OnWeaponAttachAvatarLoaded");

	UMainWeaponBearerUnit_OnWeaponAttachAvatarLoaded_Params params;
	params.Val = Val;
	params.ID = ID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAimCircle.RefreshActorLocationFromBlackBoard
// (Final, Native, Public, BlueprintCallable)

void AMechaAimCircle::RefreshActorLocationFromBlackBoard()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAimCircle.RefreshActorLocationFromBlackBoard");

	AMechaAimCircle_RefreshActorLocationFromBlackBoard_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAimCircle.HasCharacterInCircle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ContextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Raius                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaAimCircle::HasCharacterInCircle(class UObject* ContextObject, const struct FVector& Center, float Raius, float Height)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAimCircle.HasCharacterInCircle");

	AMechaAimCircle_HasCharacterInCircle_Params params;
	params.ContextObject = ContextObject;
	params.Center = Center;
	params.Raius = Raius;
	params.Height = Height;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaAimCircle.GetBlackBoardScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AMechaAimCircle::GetBlackBoardScale()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAimCircle.GetBlackBoardScale");

	AMechaAimCircle_GetBlackBoardScale_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaAimCircle.CreateNewDecalComponent
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InName                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          InSize                         (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       InMaterial                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          InExistsTime                   (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomDecalComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCustomDecalComponent* AMechaAimCircle::CreateNewDecalComponent(const struct FName& InName, float InSize, class UMaterialInstance* InMaterial, float InExistsTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAimCircle.CreateNewDecalComponent");

	AMechaAimCircle_CreateNewDecalComponent_Params params;
	params.InName = InName;
	params.InSize = InSize;
	params.InMaterial = InMaterial;
	params.InExistsTime = InExistsTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaAnimInstanceBase.TryUncombineWithMecha
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UMechaAnimInstanceBase::TryUncombineWithMecha()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.TryUncombineWithMecha");

	UMechaAnimInstanceBase_TryUncombineWithMecha_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.TryCombineWithMecha
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           bShouldPlayAnimation           (Parm, ZeroConstructor, IsPlainOldData)

void UMechaAnimInstanceBase::TryCombineWithMecha(bool bShouldPlayAnimation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.TryCombineWithMecha");

	UMechaAnimInstanceBase_TryCombineWithMecha_Params params;
	params.bShouldPlayAnimation = bShouldPlayAnimation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.StopMechaMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   InGroupName                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          BlendOutTime                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaAnimInstanceBase::StopMechaMontage(const struct FName& InGroupName, float BlendOutTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.StopMechaMontage");

	UMechaAnimInstanceBase_StopMechaMontage_Params params;
	params.InGroupName = InGroupName;
	params.BlendOutTime = BlendOutTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.ResetMechaGlidingToFalling
// (Final, Native, Public)

void UMechaAnimInstanceBase::ResetMechaGlidingToFalling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.ResetMechaGlidingToFalling");

	UMechaAnimInstanceBase_ResetMechaGlidingToFalling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.PlayMechaMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)

void UMechaAnimInstanceBase::PlayMechaMontage(class UAnimMontage* Montage, float PlayRate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.PlayMechaMontage");

	UMechaAnimInstanceBase_PlayMechaMontage_Params params;
	params.Montage = Montage;
	params.PlayRate = PlayRate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.OnMechaStartMoving
// (Native, Event, Public, BlueprintEvent)

void UMechaAnimInstanceBase::OnMechaStartMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.OnMechaStartMoving");

	UMechaAnimInstanceBase_OnMechaStartMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.OnMechaStartFire
// (Final, Native, Public, BlueprintCallable)

void UMechaAnimInstanceBase::OnMechaStartFire()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.OnMechaStartFire");

	UMechaAnimInstanceBase_OnMechaStartFire_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.OnMechaReloadFinish
// (Final, Native, Public, BlueprintCallable)

void UMechaAnimInstanceBase::OnMechaReloadFinish()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.OnMechaReloadFinish");

	UMechaAnimInstanceBase_OnMechaReloadFinish_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.OnMechaHit
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 HitDir                         (Parm, IsPlainOldData)
// bool                           bHugeHit                       (Parm, ZeroConstructor, IsPlainOldData)

void UMechaAnimInstanceBase::OnMechaHit(const struct FVector& HitDir, bool bHugeHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.OnMechaHit");

	UMechaAnimInstanceBase_OnMechaHit_Params params;
	params.HitDir = HitDir;
	params.bHugeHit = bHugeHit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.MechaEnterFlying
// (Final, Native, Public)

void UMechaAnimInstanceBase::MechaEnterFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.MechaEnterFlying");

	UMechaAnimInstanceBase_MechaEnterFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.HandleOnMechaGlidingToFalling
// (Final, Native, Public)

void UMechaAnimInstanceBase::HandleOnMechaGlidingToFalling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.HandleOnMechaGlidingToFalling");

	UMechaAnimInstanceBase_HandleOnMechaGlidingToFalling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.HandleOnMechaAirGliding
// (Final, Native, Public)
// Parameters:
// bool                           bAirGliding                    (Parm, ZeroConstructor, IsPlainOldData)

void UMechaAnimInstanceBase::HandleOnMechaAirGliding(bool bAirGliding)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.HandleOnMechaAirGliding");

	UMechaAnimInstanceBase_HandleOnMechaAirGliding_Params params;
	params.bAirGliding = bAirGliding;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaAnimInstanceBase.GetLuaDebugString
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMechaAnimInstanceBase::GetLuaDebugString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.GetLuaDebugString");

	UMechaAnimInstanceBase_GetLuaDebugString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaAnimInstanceBase.GetActivedMontageNames
// (Final, Native, Public)
// Parameters:
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FString> UMechaAnimInstanceBase::GetActivedMontageNames()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.GetActivedMontageNames");

	UMechaAnimInstanceBase_GetActivedMontageNames_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaAnimInstanceBase.CanLockFoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaAnimInstanceBase::CanLockFoot()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaAnimInstanceBase.CanLockFoot");

	UMechaAnimInstanceBase_CanLockFoot_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaDamageComponent.RepulseVehicle
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)

void UMechaDamageComponent::RepulseVehicle(class ASTExtraVehicleBase* OtherVehicle, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.RepulseVehicle");

	UMechaDamageComponent_RepulseVehicle_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;
}


// Function Addons.MechaDamageComponent.RepulseCharacter
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)

void UMechaDamageComponent::RepulseCharacter(class ASTExtraBaseCharacter* OtherCharacter, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.RepulseCharacter");

	UMechaDamageComponent_RepulseCharacter_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;
}


// Function Addons.MechaDamageComponent.RegisterCollisionShapes
// (Final, Native, Public, BlueprintCallable)

void UMechaDamageComponent::RegisterCollisionShapes()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.RegisterCollisionShapes");

	UMechaDamageComponent_RegisterCollisionShapes_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaDamageComponent.MulticastRPC_RepulseVehicle
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vel                            (Parm, IsPlainOldData)
// struct FVector                 HitPoint                       (Parm, IsPlainOldData)

void UMechaDamageComponent::MulticastRPC_RepulseVehicle(class ASTExtraVehicleBase* OtherVehicle, const struct FVector& Vel, const struct FVector& HitPoint)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.MulticastRPC_RepulseVehicle");

	UMechaDamageComponent_MulticastRPC_RepulseVehicle_Params params;
	params.OtherVehicle = OtherVehicle;
	params.Vel = Vel;
	params.HitPoint = HitPoint;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaDamageComponent.MulticastRPC_RepulseCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vel                            (Parm, IsPlainOldData)
// struct FVector                 HitPoint                       (Parm, IsPlainOldData)

void UMechaDamageComponent::MulticastRPC_RepulseCharacter(class ASTExtraBaseCharacter* OtherCharacter, const struct FVector& Vel, const struct FVector& HitPoint)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.MulticastRPC_RepulseCharacter");

	UMechaDamageComponent_MulticastRPC_RepulseCharacter_Params params;
	params.OtherCharacter = OtherCharacter;
	params.Vel = Vel;
	params.HitPoint = HitPoint;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaDamageComponent.DetectBlockedPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaDamageComponent::DetectBlockedPawn(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.DetectBlockedPawn");

	UMechaDamageComponent_DetectBlockedPawn_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaDamageComponent.DealWithVehicleHit
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     SelfComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)

void UMechaDamageComponent::DealWithVehicleHit(class UPrimitiveComponent* SelfComp, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.DealWithVehicleHit");

	UMechaDamageComponent_DealWithVehicleHit_Params params;
	params.SelfComp = SelfComp;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;
}


// Function Addons.MechaDamageComponent.DealWithCharacterHit
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     SelfComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)

void UMechaDamageComponent::DealWithCharacterHit(class UPrimitiveComponent* SelfComp, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaDamageComponent.DealWithCharacterHit");

	UMechaDamageComponent_DealWithCharacterHit_Params params;
	params.SelfComp = SelfComp;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;
}


// Function Addons.MechaMovementComponent.UpdateDistanceToLand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaMovementComponent::UpdateDistanceToLand(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaMovementComponent.UpdateDistanceToLand");

	UMechaMovementComponent_UpdateDistanceToLand_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaMovementComponent.ShouldOptimizeTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaMovementComponent::ShouldOptimizeTick()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaMovementComponent.ShouldOptimizeTick");

	UMechaMovementComponent_ShouldOptimizeTick_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaMovementComponent.HasContinuousMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaMovementComponent::HasContinuousMove()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaMovementComponent.HasContinuousMove");

	UMechaMovementComponent_HasContinuousMove_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaMovementComponent.DrawDebugInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaMovementComponent::DrawDebugInfo(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaMovementComponent.DrawDebugInfo");

	UMechaMovementComponent_DrawDebugInfo_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaMovementComponent.ApplyContinuousMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UMechaMovementComponent::ApplyContinuousMove(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaMovementComponent.ApplyContinuousMove");

	UMechaMovementComponent_ApplyContinuousMove_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSeatComponent.UpdateMechaSeatGUI
// (Final, Native, Public, BlueprintCallable)

void UMechaSeatComponent::UpdateMechaSeatGUI()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.UpdateMechaSeatGUI");

	UMechaSeatComponent_UpdateMechaSeatGUI_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSeatComponent.UncombineVehicleSeats
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSeatComponent::UncombineVehicleSeats(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.UncombineVehicleSeats");

	UMechaSeatComponent_UncombineVehicleSeats_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSeatComponent.HandleUncombined
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSeatComponent::HandleUncombined(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.HandleUncombined");

	UMechaSeatComponent_HandleUncombined_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSeatComponent.HandleCombined
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSeatComponent::HandleCombined(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.HandleCombined");

	UMechaSeatComponent_HandleCombined_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSeatComponent.GetVehicleUserComponentBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   SeatOccupier                   (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleUserComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleUserComponentBase* UMechaSeatComponent::GetVehicleUserComponentBase(class ASTExtraBaseCharacter* SeatOccupier)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.GetVehicleUserComponentBase");

	UMechaSeatComponent_GetVehicleUserComponentBase_Params params;
	params.SeatOccupier = SeatOccupier;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSeatComponent.CombineVehicleSeats
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSeatComponent::CombineVehicleSeats(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSeatComponent.CombineVehicleSeats");

	UMechaSeatComponent_CombineVehicleSeats_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaCombineInterface.GetCombineState
// (Native, Public)
// Parameters:
// TEnumAsByte<enum ECombineState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<enum ECombineState> UMechaCombineInterface::GetCombineState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaCombineInterface.GetCombineState");

	UMechaCombineInterface_GetCombineState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaCombineInterface.GetCombinedVehicle
// (Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* UMechaCombineInterface::GetCombinedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaCombineInterface.GetCombinedVehicle");

	UMechaCombineInterface_GetCombinedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaCombineInterface.GetCombineComponent
// (Native, Public)
// Parameters:
// class UMechaSmoothAttachComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMechaSmoothAttachComponent* UMechaCombineInterface::GetCombineComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaCombineInterface.GetCombineComponent");

	UMechaCombineInterface_GetCombineComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.TryUnCombine
// (Native, Public, BlueprintCallable)

void UMechaSmoothAttachComponent::TryUnCombine()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.TryUnCombine");

	UMechaSmoothAttachComponent_TryUnCombine_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.TryCombine
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::TryCombine(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.TryCombine");

	UMechaSmoothAttachComponent_TryCombine_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ServerTryUnCombine
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UMechaSmoothAttachComponent::ServerTryUnCombine()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ServerTryUnCombine");

	UMechaSmoothAttachComponent_ServerTryUnCombine_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ServerTryCombine
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequested                     (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::ServerTryCombine(class ASTExtraVehicleBase* OtherVehicle, bool bRequested)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ServerTryCombine");

	UMechaSmoothAttachComponent_ServerTryCombine_Params params;
	params.OtherVehicle = OtherVehicle;
	params.bRequested = bRequested;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ProcessUncombine
// (Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::ProcessUncombine(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ProcessUncombine");

	UMechaSmoothAttachComponent_ProcessUncombine_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.ProcessCombine
// (Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::ProcessCombine(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ProcessCombine");

	UMechaSmoothAttachComponent_ProcessCombine_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.OnUncombinedFinished
// (Native, Event, Public, BlueprintEvent)

void UMechaSmoothAttachComponent::OnUncombinedFinished()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnUncombinedFinished");

	UMechaSmoothAttachComponent_OnUncombinedFinished_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnUncombined
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OldCombinedMecha               (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnUncombined(class ASTExtraVehicleBase* OldCombinedMecha)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnUncombined");

	UMechaSmoothAttachComponent_OnUncombined_Params params;
	params.OldCombinedMecha = OldCombinedMecha;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnRep_CombineState
// (Native, Public)
// Parameters:
// TEnumAsByte<enum ECombineState> OldCombineState                (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnRep_CombineState(TEnumAsByte<enum ECombineState> OldCombineState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnRep_CombineState");

	UMechaSmoothAttachComponent_OnRep_CombineState_Params params;
	params.OldCombineState = OldCombineState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnRep_CombinedOtherMecha
// (Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OldCombinedVehicle             (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnRep_CombinedOtherMecha(class ASTExtraVehicleBase* OldCombinedVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnRep_CombinedOtherMecha");

	UMechaSmoothAttachComponent_OnRep_CombinedOtherMecha_Params params;
	params.OldCombinedVehicle = OldCombinedVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnRep_bCanCombine
// (Native, Public)

void UMechaSmoothAttachComponent::OnRep_bCanCombine()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnRep_bCanCombine");

	UMechaSmoothAttachComponent_OnRep_bCanCombine_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnPreAttachTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     AttachedVehicle                (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnPreAttachTo(class ASTExtraVehicleBase* AttachedVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnPreAttachTo");

	UMechaSmoothAttachComponent_OnPreAttachTo_Params params;
	params.AttachedVehicle = AttachedVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnCombinedFinished
// (Native, Event, Public, BlueprintEvent)

void UMechaSmoothAttachComponent::OnCombinedFinished()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnCombinedFinished");

	UMechaSmoothAttachComponent_OnCombinedFinished_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnCombined
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnCombined(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnCombined");

	UMechaSmoothAttachComponent_OnCombined_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.OnAttachedTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     AttachedVehicle                (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::OnAttachedTo(class ASTExtraVehicleBase* AttachedVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.OnAttachedTo");

	UMechaSmoothAttachComponent_OnAttachedTo_Params params;
	params.AttachedVehicle = AttachedVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.MulticastSetRequestedCombine
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bRequested                     (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::MulticastSetRequestedCombine(bool bRequested)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.MulticastSetRequestedCombine");

	UMechaSmoothAttachComponent_MulticastSetRequestedCombine_Params params;
	params.bRequested = bRequested;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.LuaCheckUncombinePosition
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 InPosition                     (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaSmoothAttachComponent::LuaCheckUncombinePosition(const struct FVector& InPosition)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.LuaCheckUncombinePosition");

	UMechaSmoothAttachComponent_LuaCheckUncombinePosition_Params params;
	params.InPosition = InPosition;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.K2_ProcessUncombine
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::K2_ProcessUncombine(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.K2_ProcessUncombine");

	UMechaSmoothAttachComponent_K2_ProcessUncombine_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.K2_ProcessCombine
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::K2_ProcessCombine(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.K2_ProcessCombine");

	UMechaSmoothAttachComponent_K2_ProcessCombine_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.K2_OnRep_CombineState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<enum ECombineState> OldCombineState                (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::K2_OnRep_CombineState(TEnumAsByte<enum ECombineState> OldCombineState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.K2_OnRep_CombineState");

	UMechaSmoothAttachComponent_K2_OnRep_CombineState_Params params;
	params.OldCombineState = OldCombineState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.K2_OnRep_CombinedOtherMecha
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OldCombinedVehicle             (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::K2_OnRep_CombinedOtherMecha(class ASTExtraVehicleBase* OldCombinedVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.K2_OnRep_CombinedOtherMecha");

	UMechaSmoothAttachComponent_K2_OnRep_CombinedOtherMecha_Params params;
	params.OldCombinedVehicle = OldCombinedVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.K2_OnRep_bCanCombine
// (Native, Event, Public, BlueprintEvent)

void UMechaSmoothAttachComponent::K2_OnRep_bCanCombine()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.K2_OnRep_bCanCombine");

	UMechaSmoothAttachComponent_K2_OnRep_bCanCombine_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.HasCombined
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaSmoothAttachComponent::HasCombined()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.HasCombined");

	UMechaSmoothAttachComponent_HasCombined_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.HandleOnFatalUncombineError
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     HighPriorityVehicle            (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::HandleOnFatalUncombineError(class ASTExtraVehicleBase* HighPriorityVehicle, class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.HandleOnFatalUncombineError");

	UMechaSmoothAttachComponent_HandleOnFatalUncombineError_Params params;
	params.HighPriorityVehicle = HighPriorityVehicle;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.HandleOnFatalCombineError
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     HighPriorityVehicle            (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::HandleOnFatalCombineError(class ASTExtraVehicleBase* HighPriorityVehicle, class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.HandleOnFatalCombineError");

	UMechaSmoothAttachComponent_HandleOnFatalCombineError_Params params;
	params.HighPriorityVehicle = HighPriorityVehicle;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.GetNearbyValidCombineVehicles
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<class ASTExtraVehicleBase*> ValidCombineVehicles           (Parm, OutParm, ZeroConstructor)

void UMechaSmoothAttachComponent::GetNearbyValidCombineVehicles(TArray<class ASTExtraVehicleBase*>* ValidCombineVehicles)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.GetNearbyValidCombineVehicles");

	UMechaSmoothAttachComponent_GetNearbyValidCombineVehicles_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (ValidCombineVehicles != nullptr)
		*ValidCombineVehicles = params.ValidCombineVehicles;
}


// Function Addons.MechaSmoothAttachComponent.GetLuaDebugString
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMechaSmoothAttachComponent::GetLuaDebugString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.GetLuaDebugString");

	UMechaSmoothAttachComponent_GetLuaDebugString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.FindValidateUncombinePosition
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 StartLocation                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ForwardDirection               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 BoxExtent                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UMechaSmoothAttachComponent::FindValidateUncombinePosition(const struct FVector& StartLocation, const struct FVector& ForwardDirection, const struct FVector& BoxExtent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.FindValidateUncombinePosition");

	UMechaSmoothAttachComponent_FindValidateUncombinePosition_Params params;
	params.StartLocation = StartLocation;
	params.ForwardDirection = ForwardDirection;
	params.BoxExtent = BoxExtent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.ExitFreeCamera
// (Final, Native, Public, BlueprintCallable)

void UMechaSmoothAttachComponent::ExitFreeCamera()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ExitFreeCamera");

	UMechaSmoothAttachComponent_ExitFreeCamera_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ClientDrawDebugString
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FString                 DebugString                    (Parm, ZeroConstructor)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::ClientDrawDebugString(const struct FString& DebugString, const struct FColor& Color, float Duration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ClientDrawDebugString");

	UMechaSmoothAttachComponent_ClientDrawDebugString_Params params;
	params.DebugString = DebugString;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ClientDrawDebugCapsule
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 Center                         (Parm, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::ClientDrawDebugCapsule(const struct FVector& Center, float HalfHeight, float Radius, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ClientDrawDebugCapsule");

	UMechaSmoothAttachComponent_ClientDrawDebugCapsule_Params params;
	params.Center = Center;
	params.HalfHeight = HalfHeight;
	params.Radius = Radius;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ClientDrawDebugBox
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 Center                         (Parm, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// struct FQuat                   Quat                           (Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::ClientDrawDebugBox(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Quat, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ClientDrawDebugBox");

	UMechaSmoothAttachComponent_ClientDrawDebugBox_Params params;
	params.Center = Center;
	params.Extent = Extent;
	params.Quat = Quat;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.ClientDrawDebugArrow
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 from                           (Parm, IsPlainOldData)
// struct FVector                 to                             (Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UMechaSmoothAttachComponent::ClientDrawDebugArrow(const struct FVector& from, const struct FVector& to, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.ClientDrawDebugArrow");

	UMechaSmoothAttachComponent_ClientDrawDebugArrow_Params params;
	params.from = from;
	params.to = to;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSmoothAttachComponent.CanUnCombineWith
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::CanUnCombineWith(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.CanUnCombineWith");

	UMechaSmoothAttachComponent_CanUnCombineWith_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSmoothAttachComponent.CanCombineWith
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UMechaSmoothAttachComponent::CanCombineWith(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSmoothAttachComponent.CanCombineWith");

	UMechaSmoothAttachComponent_CanCombineWith_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaSpringArmComponent.HandleUncombined
// (Final, Native, Public, BlueprintCallable)

void UMechaSpringArmComponent::HandleUncombined()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSpringArmComponent.HandleUncombined");

	UMechaSpringArmComponent_HandleUncombined_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaSpringArmComponent.HandleCombined
// (Final, Native, Public, BlueprintCallable)

void UMechaSpringArmComponent::HandleCombined()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaSpringArmComponent.HandleCombined");

	UMechaSpringArmComponent_HandleCombined_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaUtils.GetMeshInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  InSkeletalMesh                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMechaUtils::GetMeshInfo(class USkeletalMeshComponent* InSkeletalMesh)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaUtils.GetMeshInfo");

	UMechaUtils_GetMeshInfo_Params params;
	params.InSkeletalMesh = InSkeletalMesh;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.UncombineHealthAndFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherHover                     (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::UncombineHealthAndFuel(class ASTExtraVehicleBase* OtherHover)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.UncombineHealthAndFuel");

	AMechaVehicle_UncombineHealthAndFuel_Params params;
	params.OtherHover = OtherHover;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.StopMechaMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          BlendOutTime                   (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::StopMechaMontage(float BlendOutTime, class UAnimMontage* Montage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.StopMechaMontage");

	AMechaVehicle_StopMechaMontage_Params params;
	params.BlendOutTime = BlendOutTime;
	params.Montage = Montage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.StateToString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AMechaVehicle::StateToString()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.StateToString");

	AMechaVehicle_StateToString_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.StartAirGliding
// (Final, Native, Public, BlueprintCallable)

void AMechaVehicle::StartAirGliding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.StartAirGliding");

	AMechaVehicle_StartAirGliding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.ShouldApplyVehicleImpulse
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     MyPrimComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::ShouldApplyVehicleImpulse(class ASTExtraVehicleBase* OtherVehicle, class UPrimitiveComponent* MyPrimComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.ShouldApplyVehicleImpulse");

	AMechaVehicle_ShouldApplyVehicleImpulse_Params params;
	params.OtherVehicle = OtherVehicle;
	params.MyPrimComp = MyPrimComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.SetWeaponState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMechaWeaponState> InState                        (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::SetWeaponState(TEnumAsByte<enum EMechaWeaponState> InState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.SetWeaponState");

	AMechaVehicle_SetWeaponState_Params params;
	params.InState = InState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.ServerUpdateControlRotation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                ControlRotation                (Parm, IsPlainOldData)

void AMechaVehicle::ServerUpdateControlRotation(const struct FRotator& ControlRotation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.ServerUpdateControlRotation");

	AMechaVehicle_ServerUpdateControlRotation_Params params;
	params.ControlRotation = ControlRotation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.ProcessAirGlidingLanded
// (Native, Event, Public, BlueprintEvent)

void AMechaVehicle::ProcessAirGlidingLanded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.ProcessAirGlidingLanded");

	AMechaVehicle_ProcessAirGlidingLanded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.PlayMechaMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::PlayMechaMontage(class UAnimMontage* Montage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.PlayMechaMontage");

	AMechaVehicle_PlayMechaMontage_Params params;
	params.Montage = Montage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnRep_NetControlRotation
// (Final, Native, Public)

void AMechaVehicle::OnRep_NetControlRotation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnRep_NetControlRotation");

	AMechaVehicle_OnRep_NetControlRotation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnRep_MechaStates
// (Final, Native, Public)
// Parameters:
// uint32_t                       OldStates                      (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnRep_MechaStates(uint32_t OldStates)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnRep_MechaStates");

	AMechaVehicle_OnRep_MechaStates_Params params;
	params.OldStates = OldStates;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnRep_bAirGliding
// (Final, Native, Public, BlueprintCallable)

void AMechaVehicle::OnRep_bAirGliding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnRep_bAirGliding");

	AMechaVehicle_OnRep_bAirGliding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnPlayerExitMecha
// (Final, Native, Private)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnPlayerExitMecha(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnPlayerExitMecha");

	AMechaVehicle_OnPlayerExitMecha_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnPlayerEnterMecha
// (Final, Native, Private)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnPlayerEnterMecha(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnPlayerEnterMecha");

	AMechaVehicle_OnPlayerEnterMecha_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnDriverLeaveMecha
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraCharacter*       LeaveDriver                    (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnDriverLeaveMecha(class ASTExtraCharacter* LeaveDriver)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnDriverLeaveMecha");

	AMechaVehicle_OnDriverLeaveMecha_Params params;
	params.LeaveDriver = LeaveDriver;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnDriverEnterMecha
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraCharacter*       EnterDriver                    (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnDriverEnterMecha(class ASTExtraCharacter* EnterDriver)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnDriverEnterMecha");

	AMechaVehicle_OnDriverEnterMecha_Params params;
	params.EnterDriver = EnterDriver;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnDeadMechaFallingToGrounded
// (Native, Event, Public, BlueprintEvent)

void AMechaVehicle::OnDeadMechaFallingToGrounded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnDeadMechaFallingToGrounded");

	AMechaVehicle_OnDeadMechaFallingToGrounded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.OnBeCachedCPlus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  SourceCatcher                  (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::OnBeCachedCPlus(class AActor* SourceCatcher)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.OnBeCachedCPlus");

	AMechaVehicle_OnBeCachedCPlus_Params params;
	params.SourceCatcher = SourceCatcher;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.MulticastRPC_AddContinuousMove
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UCurveFloat*             MoveCurve                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 movedir                        (Parm, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::MulticastRPC_AddContinuousMove(class UCurveFloat* MoveCurve, float Speed, const struct FVector& movedir, float Time)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.MulticastRPC_AddContinuousMove");

	AMechaVehicle_MulticastRPC_AddContinuousMove_Params params;
	params.MoveCurve = MoveCurve;
	params.Speed = Speed;
	params.movedir = movedir;
	params.Time = Time;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.MulticastDrawDebugBox
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 Center                         (Parm, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// struct FQuat                   Rotation                       (Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutonomousOnly                (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::MulticastDrawDebugBox(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, const struct FColor& Color, float LifeTime, float Thickness, bool bAutonomousOnly)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.MulticastDrawDebugBox");

	AMechaVehicle_MulticastDrawDebugBox_Params params;
	params.Center = Center;
	params.Extent = Extent;
	params.Rotation = Rotation;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;
	params.bAutonomousOnly = bAutonomousOnly;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.MulticastDrawDebugArrow
// (Net, Native, Event, NetMulticast, Public, HasDefaults, Const)
// Parameters:
// struct FVector                 LineStart                      (Parm, IsPlainOldData)
// struct FVector                 LineEnd                        (Parm, IsPlainOldData)
// float                          ArrowSize                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutonomousOnly                (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::MulticastDrawDebugArrow(const struct FVector& LineStart, const struct FVector& LineEnd, float ArrowSize, const struct FColor& Color, float Duration, float Thickness, bool bAutonomousOnly)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.MulticastDrawDebugArrow");

	AMechaVehicle_MulticastDrawDebugArrow_Params params;
	params.LineStart = LineStart;
	params.LineEnd = LineEnd;
	params.ArrowSize = ArrowSize;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;
	params.bAutonomousOnly = bAutonomousOnly;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.MulticastDoJump
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void AMechaVehicle::MulticastDoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.MulticastDoJump");

	AMechaVehicle_MulticastDoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.LeaveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::LeaveState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.LeaveState");

	AMechaVehicle_LeaveState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.InterruptState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// EMechaState                    InterruptBy                    (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::InterruptState(EMechaState State, EMechaState InterruptBy)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.InterruptState");

	AMechaVehicle_InterruptState_Params params;
	params.State = State;
	params.InterruptBy = InterruptBy;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.HasState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::HasState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.HasState");

	AMechaVehicle_HasState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.HasCombined
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::HasCombined()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.HasCombined");

	AMechaVehicle_HasCombined_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.HandleOnDestroyBy
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::HandleOnDestroyBy(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.HandleOnDestroyBy");

	AMechaVehicle_HandleOnDestroyBy_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.GetMechaMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMechaMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMechaMovementComponent* AMechaVehicle::GetMechaMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetMechaMovement");

	AMechaVehicle_GetMechaMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.GetInVehicleLocalPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* AMechaVehicle::GetInVehicleLocalPlayer()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetInVehicleLocalPlayer");

	AMechaVehicle_GetInVehicleLocalPlayer_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.GetHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AMechaVehicle::GetHeight()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetHeight");

	AMechaVehicle_GetHeight_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.GetCombineState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum ECombineState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<enum ECombineState> AMechaVehicle::GetCombineState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetCombineState");

	AMechaVehicle_GetCombineState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.GetCombinedVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* AMechaVehicle::GetCombinedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetCombinedVehicle");

	AMechaVehicle_GetCombinedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.GetCombineComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMechaSmoothAttachComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMechaSmoothAttachComponent* AMechaVehicle::GetCombineComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.GetCombineComponent");

	AMechaVehicle_GetCombineComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.EnterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::EnterState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.EnterState");

	AMechaVehicle_EnterState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.EndAirGliding
// (Final, Native, Public, BlueprintCallable)

void AMechaVehicle::EndAirGliding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.EndAirGliding");

	AMechaVehicle_EndAirGliding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.EnableMechaResolvePenetration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::EnableMechaResolvePenetration(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.EnableMechaResolvePenetration");

	AMechaVehicle_EnableMechaResolvePenetration_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.DrawDebugInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::DrawDebugInfo(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.DrawDebugInfo");

	AMechaVehicle_DrawDebugInfo_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.DoJump
// (Final, Native, Public)

void AMechaVehicle::DoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.DoJump");

	AMechaVehicle_DoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.CombineHealthAndFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherHover                     (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::CombineHealthAndFuel(class ASTExtraVehicleBase* OtherHover)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.CombineHealthAndFuel");

	AMechaVehicle_CombineHealthAndFuel_Params params;
	params.OtherHover = OtherHover;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.CheckDriverState
// (Final, Native, Public)

void AMechaVehicle::CheckDriverState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.CheckDriverState");

	AMechaVehicle_CheckDriverState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.CanHitVehicle
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     HitVehicle                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::CanHitVehicle(class ASTExtraVehicleBase* HitVehicle, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.CanHitVehicle");

	AMechaVehicle_CanHitVehicle_Params params;
	params.HitVehicle = HitVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.CanHitCharacter
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   HitCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              InHit                          (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::CanHitCharacter(class ASTExtraBaseCharacter* HitCharacter, struct FHitResult* InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.CanHitCharacter");

	AMechaVehicle_CanHitCharacter_Params params;
	params.HitCharacter = HitCharacter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (InHit != nullptr)
		*InHit = params.InHit;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.CacheMaxHealthAndFuel
// (Final, Native, Public, BlueprintCallable)

void AMechaVehicle::CacheMaxHealthAndFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.CacheMaxHealthAndFuel");

	AMechaVehicle_CacheMaxHealthAndFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.ApplyVehicleImpulse
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ApplyImpulse                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bVelocityChange                (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::ApplyVehicleImpulse(const struct FVector& ApplyImpulse, bool bVelocityChange)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.ApplyVehicleImpulse");

	AMechaVehicle_ApplyVehicleImpulse_Params params;
	params.ApplyImpulse = ApplyImpulse;
	params.bVelocityChange = bVelocityChange;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.AllowState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMechaState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AMechaVehicle::AllowState(EMechaState State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.AllowState");

	AMechaVehicle_AllowState_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaVehicle.AddContinuousSpeedMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 movedir                        (Parm, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::AddContinuousSpeedMove(float Speed, const struct FVector& movedir, float Time)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.AddContinuousSpeedMove");

	AMechaVehicle_AddContinuousSpeedMove_Params params;
	params.Speed = Speed;
	params.movedir = movedir;
	params.Time = Time;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaVehicle.AddContinuousCurveMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCurveFloat*             MoveCurve                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 movedir                        (Parm, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AMechaVehicle::AddContinuousCurveMove(class UCurveFloat* MoveCurve, const struct FVector& movedir, float Time)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaVehicle.AddContinuousCurveMove");

	AMechaVehicle_AddContinuousCurveMove_Params params;
	params.MoveCurve = MoveCurve;
	params.movedir = movedir;
	params.Time = Time;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.SetCompassMat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* InCompassMat                   (Parm, ZeroConstructor, IsPlainOldData)

void UMechaWeaponSeekAndLockUI::SetCompassMat(class UMaterialInstanceDynamic* InCompassMat)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.SetCompassMat");

	UMechaWeaponSeekAndLockUI_SetCompassMat_Params params;
	params.InCompassMat = InCompassMat;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.IsTextNotEqualTo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   SelfValue                      (Parm)
// struct FText                   OtherText                      (Parm)
// bool                           ReverseResult                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaWeaponSeekAndLockUI::IsTextNotEqualTo(const struct FText& SelfValue, const struct FText& OtherText, bool ReverseResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.IsTextNotEqualTo");

	UMechaWeaponSeekAndLockUI_IsTextNotEqualTo_Params params;
	params.SelfValue = SelfValue;
	params.OtherText = OtherText;
	params.ReverseResult = ReverseResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaWeaponSeekAndLockUI.IsStrNotEqualToText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 InValue                        (Parm, ZeroConstructor)
// struct FText                   InText                         (Parm)
// bool                           ReverseResult                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaWeaponSeekAndLockUI::IsStrNotEqualToText(const struct FString& InValue, const struct FText& InText, bool ReverseResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.IsStrNotEqualToText");

	UMechaWeaponSeekAndLockUI_IsStrNotEqualToText_Params params;
	params.InValue = InValue;
	params.InText = InText;
	params.ReverseResult = ReverseResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaWeaponSeekAndLockUI.IsModToZero
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            InValue                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ModValue                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaWeaponSeekAndLockUI::IsModToZero(int InValue, int ModValue)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.IsModToZero");

	UMechaWeaponSeekAndLockUI_IsModToZero_Params params;
	params.InValue = InValue;
	params.ModValue = ModValue;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaWeaponSeekAndLockUI.IsIntNotEqualToText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            InValue                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   InText                         (Parm)
// bool                           ReverseResult                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMechaWeaponSeekAndLockUI::IsIntNotEqualToText(int InValue, const struct FText& InText, bool ReverseResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.IsIntNotEqualToText");

	UMechaWeaponSeekAndLockUI_IsIntNotEqualToText_Params params;
	params.InValue = InValue;
	params.InText = InText;
	params.ReverseResult = ReverseResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaWeaponSeekAndLockUI.InitWeapon
// (Native, Public)
// Parameters:
// class AActor*                  OwnerWeapon                    (Parm, ZeroConstructor, IsPlainOldData)

void UMechaWeaponSeekAndLockUI::InitWeapon(class AActor* OwnerWeapon)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.InitWeapon");

	UMechaWeaponSeekAndLockUI_InitWeapon_Params params;
	params.OwnerWeapon = OwnerWeapon;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.HandleChangeTraceTarget
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UMechaWeaponSeekAndLockUI::HandleChangeTraceTarget(const struct FHitResult& HitInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.HandleChangeTraceTarget");

	UMechaWeaponSeekAndLockUI_HandleChangeTraceTarget_Params params;
	params.HitInfo = HitInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.HandleChangeSeekAndLockStageTip
// (Final, Native, Protected)
// Parameters:
// struct FString                 Tip                            (Parm, ZeroConstructor)

void UMechaWeaponSeekAndLockUI::HandleChangeSeekAndLockStageTip(const struct FString& Tip)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.HandleChangeSeekAndLockStageTip");

	UMechaWeaponSeekAndLockUI_HandleChangeSeekAndLockStageTip_Params params;
	params.Tip = Tip;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.GetPlayerLookRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UMechaWeaponSeekAndLockUI::GetPlayerLookRotation()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.GetPlayerLookRotation");

	UMechaWeaponSeekAndLockUI_GetPlayerLookRotation_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.MechaWeaponSeekAndLockUI.ExtraForGuidedMissileRenderStyle
// (Final, Native, Protected)
// Parameters:
// bool                           bSet                           (Parm, ZeroConstructor, IsPlainOldData)

void UMechaWeaponSeekAndLockUI::ExtraForGuidedMissileRenderStyle(bool bSet)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.ExtraForGuidedMissileRenderStyle");

	UMechaWeaponSeekAndLockUI_ExtraForGuidedMissileRenderStyle_Params params;
	params.bSet = bSet;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.BPChangeTraceTargetDis
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UMechaWeaponSeekAndLockUI::BPChangeTraceTargetDis(float Distance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.BPChangeTraceTargetDis");

	UMechaWeaponSeekAndLockUI_BPChangeTraceTargetDis_Params params;
	params.Distance = Distance;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.BPChangeSeekAndLockStageTip
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FString                 Tip                            (Parm, ZeroConstructor)

void UMechaWeaponSeekAndLockUI::BPChangeSeekAndLockStageTip(const struct FString& Tip)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.BPChangeSeekAndLockStageTip");

	UMechaWeaponSeekAndLockUI_BPChangeSeekAndLockStageTip_Params params;
	params.Tip = Tip;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.AfterShow
// (Native, Event, Protected, BlueprintEvent)

void UMechaWeaponSeekAndLockUI::AfterShow()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.AfterShow");

	UMechaWeaponSeekAndLockUI_AfterShow_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MechaWeaponSeekAndLockUI.AfterHide
// (Native, Event, Protected, BlueprintEvent)

void UMechaWeaponSeekAndLockUI::AfterHide()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MechaWeaponSeekAndLockUI.AfterHide");

	UMechaWeaponSeekAndLockUI_AfterHide_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.MonsterRaptorAnimInstance.OnResetPlayedIdleIndex
// (Final, Native, Public)
// Parameters:
// int                            NewIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void UMonsterRaptorAnimInstance::OnResetPlayedIdleIndex(int NewIndex)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.MonsterRaptorAnimInstance.OnResetPlayedIdleIndex");

	UMonsterRaptorAnimInstance_OnResetPlayedIdleIndex_Params params;
	params.NewIndex = NewIndex;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ServerGetBackPackInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            TeamID                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UOBHttpComponent::ServerGetBackPackInfo(int TeamID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ServerGetBackPackInfo");

	UOBHttpComponent_ServerGetBackPackInfo_Params params;
	params.TeamID = TeamID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ServerGetAllPlayerThrowInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UOBHttpComponent::ServerGetAllPlayerThrowInfo()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ServerGetAllPlayerThrowInfo");

	UOBHttpComponent_ServerGetAllPlayerThrowInfo_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.PostTeamWeaponInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 TeamWeaponInfoJsonStr          (Parm, ZeroConstructor)

void UOBHttpComponent::PostTeamWeaponInfo(const struct FString& TeamWeaponInfoJsonStr)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.PostTeamWeaponInfo");

	UOBHttpComponent_PostTeamWeaponInfo_Params params;
	params.TeamWeaponInfoJsonStr = TeamWeaponInfoJsonStr;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.PostTeamBackPackInfoByTeamID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TeamID                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UOBHttpComponent::PostTeamBackPackInfoByTeamID(int TeamID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.PostTeamBackPackInfoByTeamID");

	UOBHttpComponent_PostTeamBackPackInfoByTeamID_Params params;
	params.TeamID = TeamID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.PostTDMResultInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 TDMResultInfoJsonStr           (Parm, ZeroConstructor)

void UOBHttpComponent::PostTDMResultInfo(const struct FString& TDMResultInfoJsonStr)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.PostTDMResultInfo");

	UOBHttpComponent_PostTDMResultInfo_Params params;
	params.TDMResultInfoJsonStr = TDMResultInfoJsonStr;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.PostPlayersAMInfo
// (Final, Native, Public)
// Parameters:
// struct FString                 PlayerAMInfoJsonStr            (Parm, ZeroConstructor)

void UOBHttpComponent::PostPlayersAMInfo(const struct FString& PlayerAMInfoJsonStr)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.PostPlayersAMInfo");

	UOBHttpComponent_PostPlayersAMInfo_Params params;
	params.PlayerAMInfoJsonStr = PlayerAMInfoJsonStr;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.OnRep_RealTimeAPIList
// (Final, Native, Public)

void UOBHttpComponent::OnRep_RealTimeAPIList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.OnRep_RealTimeAPIList");

	UOBHttpComponent_OnRep_RealTimeAPIList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.OnRep_AfterMatchAPIList
// (Final, Native, Public)

void UOBHttpComponent::OnRep_AfterMatchAPIList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.OnRep_AfterMatchAPIList");

	UOBHttpComponent_OnRep_AfterMatchAPIList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientUpdateTeammateItemList
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)

void UOBHttpComponent::ClientUpdateTeammateItemList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientUpdateTeammateItemList");

	UOBHttpComponent_ClientUpdateTeammateItemList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientGetPlayerUseSightInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FPlayerSightUsageInfoCompress> PlayerSightUsageInfoCompress   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UOBHttpComponent::ClientGetPlayerUseSightInfo(TArray<struct FPlayerSightUsageInfoCompress> PlayerSightUsageInfoCompress)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientGetPlayerUseSightInfo");

	UOBHttpComponent_ClientGetPlayerUseSightInfo_Params params;
	params.PlayerSightUsageInfoCompress = PlayerSightUsageInfoCompress;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientGetPlayerPickUpInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32_t                       PlayerKey                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerPickUpInfo       PickupInfo                     (ConstParm, Parm)

void UOBHttpComponent::ClientGetPlayerPickUpInfo(uint32_t PlayerKey, const struct FPlayerPickUpInfo& PickupInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientGetPlayerPickUpInfo");

	UOBHttpComponent_ClientGetPlayerPickUpInfo_Params params;
	params.PlayerKey = PlayerKey;
	params.PickupInfo = PickupInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientGetBackPackInfo
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// TArray<struct FPlayerBackPackInfo> TeamBackPackInfo               (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UOBHttpComponent::ClientGetBackPackInfo(TArray<struct FPlayerBackPackInfo> TeamBackPackInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientGetBackPackInfo");

	UOBHttpComponent_ClientGetBackPackInfo_Params params;
	params.TeamBackPackInfo = TeamBackPackInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientGetAllPlayerThrowInfo
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// TArray<struct FPlayerThrowInfo> AllPlayerThrowInfo             (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UOBHttpComponent::ClientGetAllPlayerThrowInfo(TArray<struct FPlayerThrowInfo> AllPlayerThrowInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientGetAllPlayerThrowInfo");

	UOBHttpComponent_ClientGetAllPlayerThrowInfo_Params params;
	params.AllPlayerThrowInfo = AllPlayerThrowInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBHttpComponent.ClientGetAirDropBoxInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// unsigned char                  AirDropId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FAirDropBoxDataItem> AirDropBoxDataList             (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UOBHttpComponent::ClientGetAirDropBoxInfo(unsigned char AirDropId, TArray<struct FAirDropBoxDataItem> AirDropBoxDataList)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBHttpComponent.ClientGetAirDropBoxInfo");

	UOBHttpComponent_ClientGetAirDropBoxInfo_Params params;
	params.AirDropId = AirDropId;
	params.AirDropBoxDataList = AirDropBoxDataList;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModeAirDropWidget.SetAirDrop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAirDropBoxActor*        DropBox                        (Parm, ZeroConstructor, IsPlainOldData)

void UOBModeAirDropWidget::SetAirDrop(class AAirDropBoxActor* DropBox)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModeAirDropWidget.SetAirDrop");

	UOBModeAirDropWidget_SetAirDrop_Params params;
	params.DropBox = DropBox;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModeAirDropWidget.OnItemClicked
// (Final, Native, Public, BlueprintCallable)

void UOBModeAirDropWidget::OnItemClicked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModeAirDropWidget.OnItemClicked");

	UOBModeAirDropWidget_OnItemClicked_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePlayerHeadList.GetHeadItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor)
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsWithCreate                  (Parm, ZeroConstructor, IsPlainOldData)
// class UOBModePositionWidget*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UOBModePositionWidget* UOBModePlayerHeadList::GetHeadItem(const struct FString& PlayerName, int TeamID, bool bIsWithCreate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePlayerHeadList.GetHeadItem");

	UOBModePlayerHeadList_GetHeadItem_Params params;
	params.PlayerName = PlayerName;
	params.TeamID = TeamID;
	params.bIsWithCreate = bIsWithCreate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OBModePlayerHeadList.DynamicSortPlayerHeadWidget
// (Final, Native, Public, BlueprintCallable)

void UOBModePlayerHeadList::DynamicSortPlayerHeadWidget()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePlayerHeadList.DynamicSortPlayerHeadWidget");

	UOBModePlayerHeadList_DynamicSortPlayerHeadWidget_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePlayerHeadList.CreateHeadItem
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor)
// struct FHeadItem               HeadItem                       (Parm, OutParm)

void UOBModePlayerHeadList::CreateHeadItem(const struct FString& PlayerName, struct FHeadItem* HeadItem)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePlayerHeadList.CreateHeadItem");

	UOBModePlayerHeadList_CreateHeadItem_Params params;
	params.PlayerName = PlayerName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (HeadItem != nullptr)
		*HeadItem = params.HeadItem;
}


// Function Addons.OBModePositionWidget.SetPlayerCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::SetPlayerCharacter(class ASTExtraPlayerController* Controller, int idx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.SetPlayerCharacter");

	UOBModePositionWidget_SetPlayerCharacter_Params params;
	params.Controller = Controller;
	params.idx = idx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.RefreshWeaponIconStatusDetail
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemDefineID           DefineItem                     (ConstParm, Parm, OutParm, ReferenceParm)

void UOBModePositionWidget::RefreshWeaponIconStatusDetail(const struct FItemDefineID& DefineItem)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.RefreshWeaponIconStatusDetail");

	UOBModePositionWidget_RefreshWeaponIconStatusDetail_Params params;
	params.DefineItem = DefineItem;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.RefreshWeaponBulletStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           bHasBullet                     (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::RefreshWeaponBulletStatus(bool bHasBullet)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.RefreshWeaponBulletStatus");

	UOBModePositionWidget_RefreshWeaponBulletStatus_Params params;
	params.bHasBullet = bHasBullet;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.RefreshPlayerHealth
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          hpRatio                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          breathRatio                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsNearDeath                    (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::RefreshPlayerHealth(float hpRatio, float breathRatio, bool IsNearDeath)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.RefreshPlayerHealth");

	UOBModePositionWidget_RefreshPlayerHealth_Params params;
	params.hpRatio = hpRatio;
	params.breathRatio = breathRatio;
	params.IsNearDeath = IsNearDeath;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.RefreshOpenWeaponIconStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           IsOpen                         (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::RefreshOpenWeaponIconStatus(bool IsOpen)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.RefreshOpenWeaponIconStatus");

	UOBModePositionWidget_RefreshOpenWeaponIconStatus_Params params;
	params.IsOpen = IsOpen;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.RefreshDistance
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          fovDistance                    (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::RefreshDistance(int Distance, float fovDistance)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.RefreshDistance");

	UOBModePositionWidget_RefreshDistance_Params params;
	params.Distance = Distance;
	params.fovDistance = fovDistance;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.ReceiveUseWeseeStyle
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERelationshipWithTarget        RelationshipWithTarget         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UOBModePositionWidget::ReceiveUseWeseeStyle(ERelationshipWithTarget RelationshipWithTarget)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.ReceiveUseWeseeStyle");

	UOBModePositionWidget_ReceiveUseWeseeStyle_Params params;
	params.RelationshipWithTarget = RelationshipWithTarget;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.OpenShowWeaponIcon
// (Final, Native, Public, BlueprintCallable)

void UOBModePositionWidget::OpenShowWeaponIcon()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.OpenShowWeaponIcon");

	UOBModePositionWidget_OpenShowWeaponIcon_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.OnItemClicked
// (Final, Native, Public, BlueprintCallable)

void UOBModePositionWidget::OnItemClicked()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.OnItemClicked");

	UOBModePositionWidget_OnItemClicked_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.HandleWeaponChange
// (Final, Native, Public)

void UOBModePositionWidget::HandleWeaponChange()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.HandleWeaponChange");

	UOBModePositionWidget_HandleWeaponChange_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.HandleCheckCurWeaponBulletChange
// (Final, Native, Public)

void UOBModePositionWidget::HandleCheckCurWeaponBulletChange()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.HandleCheckCurWeaponBulletChange");

	UOBModePositionWidget_HandleCheckCurWeaponBulletChange_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.GetWidgetID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UOBModePositionWidget::GetWidgetID()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.GetWidgetID");

	UOBModePositionWidget_GetWidgetID_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OBModePositionWidget.GetOpacityByDistance
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          Distance3D                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UOBModePositionWidget::GetOpacityByDistance(float Distance3D)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.GetOpacityByDistance");

	UOBModePositionWidget_GetOpacityByDistance_Params params;
	params.Distance3D = Distance3D;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OBModePositionWidget.GetCachedPlayerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* UOBModePositionWidget::GetCachedPlayerCharacter()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.GetCachedPlayerCharacter");

	UOBModePositionWidget_GetCachedPlayerCharacter_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OBModePositionWidget.DisplayFinalDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          FinalDamage                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            AttackerTeamID                 (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::DisplayFinalDamage(float FinalDamage, int AttackerTeamID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.DisplayFinalDamage");

	UOBModePositionWidget_DisplayFinalDamage_Params params;
	params.FinalDamage = FinalDamage;
	params.AttackerTeamID = AttackerTeamID;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.CloseShowWeaponIcon
// (Final, Native, Public, BlueprintCallable)

void UOBModePositionWidget::CloseShowWeaponIcon()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.CloseShowWeaponIcon");

	UOBModePositionWidget_CloseShowWeaponIcon_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OBModePositionWidget.CheckOwnWeaponStatus
// (Final, Native, Public, BlueprintCallable)

void UOBModePositionWidget::CheckOwnWeaponStatus()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OBModePositionWidget.CheckOwnWeaponStatus");

	UOBModePositionWidget_CheckOwnWeaponStatus_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ObserverProbeComponent.PostInfoAfterMatch
// (Final, Native, Private)

void UObserverProbeComponent::PostInfoAfterMatch()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ObserverProbeComponent.PostInfoAfterMatch");

	UObserverProbeComponent_PostInfoAfterMatch_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ObserverProbeComponent.OpenOBMLAIDebug
// (Final, Native, Public)

void UObserverProbeComponent::OpenOBMLAIDebug()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ObserverProbeComponent.OpenOBMLAIDebug");

	UObserverProbeComponent_OpenOBMLAIDebug_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ObserverProbeComponent.OnTerminatorEndGame
// (Final, Native, Public)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ExtraParam                     (Parm, ZeroConstructor, IsPlainOldData)

void UObserverProbeComponent::OnTerminatorEndGame(class AController* Killer, class AController* Victim, int DamageType, int ExtraParam)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ObserverProbeComponent.OnTerminatorEndGame");

	UObserverProbeComponent_OnTerminatorEndGame_Params params;
	params.Killer = Killer;
	params.Victim = Victim;
	params.DamageType = DamageType;
	params.ExtraParam = ExtraParam;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ObserverProbeComponent.CollectSightUseTime
// (Final, Native, Private)
// Parameters:
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            SightId                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UObserverProbeComponent::CollectSightUseTime(uint32_t PlayerKey, int SightId, bool bUse)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ObserverProbeComponent.CollectSightUseTime");

	UObserverProbeComponent_CollectSightUseTime_Params params;
	params.PlayerKey = PlayerKey;
	params.SightId = SightId;
	params.bUse = bUse;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.TryVehicleDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::TryVehicleDive(bool bStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.TryVehicleDive");

	AOceanVehicle_TryVehicleDive_Params params;
	params.bStart = bStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.TickSyncCameraInfo
// (Final, Native, Public)
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::TickSyncCameraInfo(float Delta)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.TickSyncCameraInfo");

	AOceanVehicle_TickSyncCameraInfo_Params params;
	params.Delta = Delta;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.StopAllBlanketSfx
// (Final, Native, Public, BlueprintCallable)

void AOceanVehicle::StopAllBlanketSfx()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.StopAllBlanketSfx");

	AOceanVehicle_StopAllBlanketSfx_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.OnRep_UpOnSpecialWater
// (Final, Native, Public)
// Parameters:
// bool                           bPrevState                     (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::OnRep_UpOnSpecialWater(bool bPrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.OnRep_UpOnSpecialWater");

	AOceanVehicle_OnRep_UpOnSpecialWater_Params params;
	params.bPrevState = bPrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.OnRep_OceanVehicleDiveCDChanged
// (Final, Native, Public)
// Parameters:
// bool                           bPrevState                     (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::OnRep_OceanVehicleDiveCDChanged(bool bPrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.OnRep_OceanVehicleDiveCDChanged");

	AOceanVehicle_OnRep_OceanVehicleDiveCDChanged_Params params;
	params.bPrevState = bPrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.OnRep_InSpecialWater
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           bPrevState                     (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::OnRep_InSpecialWater(bool bPrevState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.OnRep_InSpecialWater");

	AOceanVehicle_OnRep_InSpecialWater_Params params;
	params.bPrevState = bPrevState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.IsOceanVehicleInWater
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AOceanVehicle::IsOceanVehicleInWater()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.IsOceanVehicleInWater");

	AOceanVehicle_IsOceanVehicleInWater_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.GetUnitUID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AOceanVehicle::GetUnitUID()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.GetUnitUID");

	AOceanVehicle_GetUnitUID_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.GetConsumeFuelRate
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AOceanVehicle::GetConsumeFuelRate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.GetConsumeFuelRate");

	AOceanVehicle_GetConsumeFuelRate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.EnableWaterModeCameraModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::EnableWaterModeCameraModifier(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.EnableWaterModeCameraModifier");

	AOceanVehicle_EnableWaterModeCameraModifier_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.EnableDiveCameraModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AOceanVehicle::EnableDiveCameraModifier(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.EnableDiveCameraModifier");

	AOceanVehicle_EnableDiveCameraModifier_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.DestroyAllCachedParticleEffect
// (Final, Native, Protected, BlueprintCallable)

void AOceanVehicle::DestroyAllCachedParticleEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.DestroyAllCachedParticleEffect");

	AOceanVehicle_DestroyAllCachedParticleEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicle.CanUpdateMovementInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AOceanVehicle::CanUpdateMovementInput()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.CanUpdateMovementInput");

	AOceanVehicle_CanUpdateMovementInput_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.CanOceanVehicleDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AOceanVehicle::CanOceanVehicleDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.CanOceanVehicleDive");

	AOceanVehicle_CanOceanVehicleDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.CanConsumeFuel
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AOceanVehicle::CanConsumeFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.CanConsumeFuel");

	AOceanVehicle_CanConsumeFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicle.CanAutoIncreaseFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AOceanVehicle::CanAutoIncreaseFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicle.CanAutoIncreaseFuel");

	AOceanVehicle_CanAutoIncreaseFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.StartFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UOceanVehicleMovementComponent::StartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.StartFlyingDive");

	UOceanVehicleMovementComponent_StartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.SetServerDiveDirection
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 ClientDivDirection             (Parm, IsPlainOldData)

void UOceanVehicleMovementComponent::SetServerDiveDirection(const struct FVector& ClientDivDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.SetServerDiveDirection");

	UOceanVehicleMovementComponent_SetServerDiveDirection_Params params;
	params.ClientDivDirection = ClientDivDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.SetMovementMode");

	UOceanVehicleMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.OnInSpecialWaterStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           bInEnterWater                  (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::OnInSpecialWaterStateChange(bool bInEnterWater)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.OnInSpecialWaterStateChange");

	UOceanVehicleMovementComponent_OnInSpecialWaterStateChange_Params params;
	params.bInEnterWater = bInEnterWater;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.IsLowFlying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::IsLowFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.IsLowFlying");

	UOceanVehicleMovementComponent_IsLowFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.IsLocationInSpecialWater
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 InLoc                          (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::IsLocationInSpecialWater(const struct FVector& InLoc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.IsLocationInSpecialWater");

	UOceanVehicleMovementComponent_IsLocationInSpecialWater_Params params;
	params.InLoc = InLoc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.IsDiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::IsDiving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.IsDiving");

	UOceanVehicleMovementComponent_IsDiving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.IsCurveMoving
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::IsCurveMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.IsCurveMoving");

	UOceanVehicleMovementComponent_IsCurveMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.IsAutoLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::IsAutoLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.IsAutoLanding");

	UOceanVehicleMovementComponent_IsAutoLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.GetOceanVehicleMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOceanVehicleBaseMoveMode      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOceanVehicleBaseMoveMode UOceanVehicleMovementComponent::GetOceanVehicleMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.GetOceanVehicleMoveState");

	UOceanVehicleMovementComponent_GetOceanVehicleMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.GetFlyingConfig
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FFlyBioVehicleFlyingConfig ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFlyBioVehicleFlyingConfig UOceanVehicleMovementComponent::GetFlyingConfig()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.GetFlyingConfig");

	UOceanVehicleMovementComponent_GetFlyingConfig_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.EndFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UOceanVehicleMovementComponent::EndFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.EndFlyingDive");

	UOceanVehicleMovementComponent_EndFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.DealWithCustomAction
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::DealWithCustomAction(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.DealWithCustomAction");

	UOceanVehicleMovementComponent_DealWithCustomAction_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.CheckCanStartFlyingDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::CheckCanStartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.CheckCanStartFlyingDive");

	UOceanVehicleMovementComponent_CheckCanStartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.CanDiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOceanVehicleMovementComponent::CanDiving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.CanDiving");

	UOceanVehicleMovementComponent_CanDiving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.OceanVehicleMovementComponent.CalculateFlyingVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::CalculateFlyingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.CalculateFlyingVelocity");

	UOceanVehicleMovementComponent_CalculateFlyingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.CalculateFlyingAcceleration
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::CalculateFlyingAcceleration(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.CalculateFlyingAcceleration");

	UOceanVehicleMovementComponent_CalculateFlyingAcceleration_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OceanVehicleMovementComponent.CalculateDivingVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UOceanVehicleMovementComponent::CalculateDivingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OceanVehicleMovementComponent.CalculateDivingVelocity");

	UOceanVehicleMovementComponent_CalculateDivingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OtherCharacterBearerUnit.OnAvatarAllMeshLoaded
// (Final, Native, Public)

void UOtherCharacterBearerUnit::OnAvatarAllMeshLoaded()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OtherCharacterBearerUnit.OnAvatarAllMeshLoaded");

	UOtherCharacterBearerUnit_OnAvatarAllMeshLoaded_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OtherWeaponBearerUnit.OnWeaponAvatarLoaded
// (Final, Native, Public)
// Parameters:
// int                            Val                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)

void UOtherWeaponBearerUnit::OnWeaponAvatarLoaded(int Val, const struct FItemDefineID& ID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OtherWeaponBearerUnit.OnWeaponAvatarLoaded");

	UOtherWeaponBearerUnit_OnWeaponAvatarLoaded_Params params;
	params.Val = Val;
	params.ID = ID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.OtherWeaponBearerUnit.OnWeaponAttachAvatarLoaded
// (Final, Native, Public)
// Parameters:
// int                            Val                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)

void UOtherWeaponBearerUnit::OnWeaponAttachAvatarLoaded(int Val, const struct FItemDefineID& ID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.OtherWeaponBearerUnit.OnWeaponAttachAvatarLoaded");

	UOtherWeaponBearerUnit_OnWeaponAttachAvatarLoaded_Params params;
	params.Val = Val;
	params.ID = ID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ParachuteWarterActor.CollisionQueryParamsAddIgnoredActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InIgnoreActor                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AParachuteWarterActor::CollisionQueryParamsAddIgnoredActor(class AActor* InIgnoreActor)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ParachuteWarterActor.CollisionQueryParamsAddIgnoredActor");

	AParachuteWarterActor_CollisionQueryParamsAddIgnoredActor_Params params;
	params.InIgnoreActor = InIgnoreActor;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ParachuteWarterActor.ChangeAboveSpecicalAreaType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   DellActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAboveSpecicalAreaIn           (Parm, ZeroConstructor, IsPlainOldData)

void AParachuteWarterActor::ChangeAboveSpecicalAreaType(class ASTExtraBaseCharacter* DellActor, bool bAboveSpecicalAreaIn)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ParachuteWarterActor.ChangeAboveSpecicalAreaType");

	AParachuteWarterActor_ChangeAboveSpecicalAreaType_Params params;
	params.DellActor = DellActor;
	params.bAboveSpecicalAreaIn = bAboveSpecicalAreaIn;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ParachuteWarterActor.AddOrRemoveCheckActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   checkActor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Add                            (Parm, ZeroConstructor, IsPlainOldData)

void AParachuteWarterActor::AddOrRemoveCheckActor(int PlayerKey, class ASTExtraBaseCharacter* checkActor, bool Add)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ParachuteWarterActor.AddOrRemoveCheckActor");

	AParachuteWarterActor_AddOrRemoveCheckActor_Params params;
	params.PlayerKey = PlayerKey;
	params.checkActor = checkActor;
	params.Add = Add;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PCOBCommonComponent.TrackingEnd
// (Final, Native, Public)

void UPCOBCommonComponent::TrackingEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PCOBCommonComponent.TrackingEnd");

	UPCOBCommonComponent_TrackingEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PCOBCommonComponent.PCOBTerminator
// (Final, Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   Victim                         (Parm, ZeroConstructor, IsPlainOldData)

void UPCOBCommonComponent::PCOBTerminator(class ASTExtraBaseCharacter* Causer, class ASTExtraBaseCharacter* Victim)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PCOBCommonComponent.PCOBTerminator");

	UPCOBCommonComponent_PCOBTerminator_Params params;
	params.Causer = Causer;
	params.Victim = Victim;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PCOBCommonComponent.OnLoadAllLevelChanged
// (Final, Native, Public)
// Parameters:
// bool                           bLoadAllLevel                  (Parm, ZeroConstructor, IsPlainOldData)

void UPCOBCommonComponent::OnLoadAllLevelChanged(bool bLoadAllLevel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PCOBCommonComponent.OnLoadAllLevelChanged");

	UPCOBCommonComponent_OnLoadAllLevelChanged_Params params;
	params.bLoadAllLevel = bLoadAllLevel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurAnimInstance.ResetStartFlying
// (Final, Native, Public)

void UPterosaurAnimInstance::ResetStartFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurAnimInstance.ResetStartFlying");

	UPterosaurAnimInstance_ResetStartFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurAnimInstance.OnStartFlying
// (Final, Native, Public)

void UPterosaurAnimInstance::OnStartFlying()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurAnimInstance.OnStartFlying");

	UPterosaurAnimInstance_OnStartFlying_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.UpdateVerticalHeight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::UpdateVerticalHeight(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.UpdateVerticalHeight");

	UPterosaurMovementComponent_UpdateVerticalHeight_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.StartTakingOff
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::StartTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.StartTakingOff");

	UPterosaurMovementComponent_StartTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.StartSwoopDown
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void UPterosaurMovementComponent::StartSwoopDown(const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.StartSwoopDown");

	UPterosaurMovementComponent_StartSwoopDown_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.StartLanding
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::StartLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.StartLanding");

	UPterosaurMovementComponent_StartLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.StartFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::StartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.StartFlyingDive");

	UPterosaurMovementComponent_StartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.SetServerDiveDirection
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void UPterosaurMovementComponent::SetServerDiveDirection(const struct FVector& Direction)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.SetServerDiveDirection");

	UPterosaurMovementComponent_SetServerDiveDirection_Params params;
	params.Direction = Direction;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::SetMovementMode(TEnumAsByte<enum EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.SetMovementMode");

	UPterosaurMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.SetAutoLanding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::SetAutoLanding(float Value)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.SetAutoLanding");

	UPterosaurMovementComponent_SetAutoLanding_Params params;
	params.Value = Value;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.IsTakingOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsTakingOff");

	UPterosaurMovementComponent_IsTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsSwoopDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsSwoopDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsSwoopDown");

	UPterosaurMovementComponent_IsSwoopDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsSwoopCatching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsSwoopCatching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsSwoopCatching");

	UPterosaurMovementComponent_IsSwoopCatching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsStrugglingToLand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsStrugglingToLand()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsStrugglingToLand");

	UPterosaurMovementComponent_IsStrugglingToLand_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsLocalSwoopingDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsLocalSwoopingDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsLocalSwoopingDown");

	UPterosaurMovementComponent_IsLocalSwoopingDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsLandingWalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsLandingWalking()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsLandingWalking");

	UPterosaurMovementComponent_IsLandingWalking_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsLanding");

	UPterosaurMovementComponent_IsLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsDiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsDiving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsDiving");

	UPterosaurMovementComponent_IsDiving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.IsCurveMoving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::IsCurveMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.IsCurveMoving");

	UPterosaurMovementComponent_IsCurveMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.GetMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPterosaurMoveMode             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPterosaurMoveMode UPterosaurMovementComponent::GetMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.GetMoveState");

	UPterosaurMovementComponent_GetMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.GetDistanceToLand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPterosaurMovementComponent::GetDistanceToLand()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.GetDistanceToLand");

	UPterosaurMovementComponent_GetDistanceToLand_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.ExitSwoopDown
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::ExitSwoopDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.ExitSwoopDown");

	UPterosaurMovementComponent_ExitSwoopDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.ExitLanding
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::ExitLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.ExitLanding");

	UPterosaurMovementComponent_ExitLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.EndTakingOff
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::EndTakingOff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.EndTakingOff");

	UPterosaurMovementComponent_EndTakingOff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.EndSwoopDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bRestVelocity                  (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::EndSwoopDown(bool bRestVelocity)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.EndSwoopDown");

	UPterosaurMovementComponent_EndSwoopDown_Params params;
	params.bRestVelocity = bRestVelocity;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.EndLanding
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::EndLanding()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.EndLanding");

	UPterosaurMovementComponent_EndLanding_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.EndFlyingDive
// (Final, Native, Public, BlueprintCallable)

void UPterosaurMovementComponent::EndFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.EndFlyingDive");

	UPterosaurMovementComponent_EndFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.DealWithCustomAction
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::DealWithCustomAction(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.DealWithCustomAction");

	UPterosaurMovementComponent_DealWithCustomAction_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.CheckCanStartFlyingDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPterosaurMovementComponent::CheckCanStartFlyingDive()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.CheckCanStartFlyingDive");

	UPterosaurMovementComponent_CheckCanStartFlyingDive_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurMovementComponent.CalculateFlyingVelocity
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::CalculateFlyingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.CalculateFlyingVelocity");

	UPterosaurMovementComponent_CalculateFlyingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.CalculateFlyingAcceleration
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::CalculateFlyingAcceleration(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.CalculateFlyingAcceleration");

	UPterosaurMovementComponent_CalculateFlyingAcceleration_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurMovementComponent.CalculateDivingVelocity
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPterosaurMovementComponent::CalculateDivingVelocity(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurMovementComponent.CalculateDivingVelocity");

	UPterosaurMovementComponent_CalculateDivingVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.TryFlyingDive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bTry                           (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::TryFlyingDive(bool bTry)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.TryFlyingDive");

	APterosaurVehicle_TryFlyingDive_Params params;
	params.bTry = bTry;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.TryCancelSwoopDown
// (Final, Native, Public, BlueprintCallable)

void APterosaurVehicle::TryCancelSwoopDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.TryCancelSwoopDown");

	APterosaurVehicle_TryCancelSwoopDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.ServerSwoopDown
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)
// bool                           IsForceEnd                     (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::ServerSwoopDown(const struct FVector& TargetLocation, bool IsForceEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.ServerSwoopDown");

	APterosaurVehicle_ServerSwoopDown_Params params;
	params.TargetLocation = TargetLocation;
	params.IsForceEnd = IsForceEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.ServerReleaseCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   Requester                      (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::ServerReleaseCharacter(class ASTExtraBaseCharacter* Requester)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.ServerReleaseCharacter");

	APterosaurVehicle_ServerReleaseCharacter_Params params;
	params.Requester = Requester;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.OnRep_SyncSwoopCatchState
// (Event, Protected, BlueprintEvent)

void APterosaurVehicle::OnRep_SyncSwoopCatchState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.OnRep_SyncSwoopCatchState");

	APterosaurVehicle_OnRep_SyncSwoopCatchState_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.OnPterosaurSwoopStateChanged
// (Final, Native, Protected, HasDefaults)
// Parameters:
// EPterosaurSwoopStage           NewStage                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void APterosaurVehicle::OnPterosaurSwoopStateChanged(EPterosaurSwoopStage NewStage, const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.OnPterosaurSwoopStateChanged");

	APterosaurVehicle_OnPterosaurSwoopStateChanged_Params params;
	params.NewStage = NewStage;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.OnPterosaurPrepareCatch
// (Final, Native, Public)

void APterosaurVehicle::OnPterosaurPrepareCatch()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.OnPterosaurPrepareCatch");

	APterosaurVehicle_OnPterosaurPrepareCatch_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.OnClientExitFromPterosaur
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::OnClientExitFromPterosaur(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.OnClientExitFromPterosaur");

	APterosaurVehicle_OnClientExitFromPterosaur_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.MultiCast_SwoopDown
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void APterosaurVehicle::MultiCast_SwoopDown(const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.MultiCast_SwoopDown");

	APterosaurVehicle_MultiCast_SwoopDown_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.MultiCast_SplineCorrect
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 SyncLocation                   (Parm, IsPlainOldData)
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)
// TArray<struct FVector>         SplinePoints                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void APterosaurVehicle::MultiCast_SplineCorrect(const struct FVector& SyncLocation, const struct FVector& TargetLocation, TArray<struct FVector> SplinePoints)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.MultiCast_SplineCorrect");

	APterosaurVehicle_MultiCast_SplineCorrect_Params params;
	params.SyncLocation = SyncLocation;
	params.TargetLocation = TargetLocation;
	params.SplinePoints = SplinePoints;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.IsSwoopDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::IsSwoopDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.IsSwoopDown");

	APterosaurVehicle_IsSwoopDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.IsSwoopCoolDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::IsSwoopCoolDown()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.IsSwoopCoolDown");

	APterosaurVehicle_IsSwoopCoolDown_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.IsSwoopCatching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::IsSwoopCatching()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.IsSwoopCatching");

	APterosaurVehicle_IsSwoopCatching_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.HandleOnSeatDetached
// (Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.HandleOnSeatDetached");

	APterosaurVehicle_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.HandleOnSeatAttached
// (Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.HandleOnSeatAttached");

	APterosaurVehicle_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.GetPterosaurMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPterosaurMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPterosaurMovementComponent* APterosaurVehicle::GetPterosaurMovementComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.GetPterosaurMovementComponent");

	APterosaurVehicle_GetPterosaurMovementComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.GetConsumeFuelRate
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float APterosaurVehicle::GetConsumeFuelRate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.GetConsumeFuelRate");

	APterosaurVehicle_GetConsumeFuelRate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.ForceCatchCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::ForceCatchCharacter(class ASTExtraBaseCharacter* Character)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.ForceCatchCharacter");

	APterosaurVehicle_ForceCatchCharacter_Params params;
	params.Character = Character;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.DoSwoopDown
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::DoSwoopDown(const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.DoSwoopDown");

	APterosaurVehicle_DoSwoopDown_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.CanConsumeFuel
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APterosaurVehicle::CanConsumeFuel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.CanConsumeFuel");

	APterosaurVehicle_CanConsumeFuel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.PterosaurVehicle.BroadCastOnPterosaurPrepareCatch
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void APterosaurVehicle::BroadCastOnPterosaurPrepareCatch()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.BroadCastOnPterosaurPrepareCatch");

	APterosaurVehicle_BroadCastOnPterosaurPrepareCatch_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.PterosaurVehicle.BPOnPterosaurSwoopStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// unsigned char                  NewStage                       (Parm, ZeroConstructor, IsPlainOldData)

void APterosaurVehicle::BPOnPterosaurSwoopStateChanged(unsigned char NewStage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.PterosaurVehicle.BPOnPterosaurSwoopStateChanged");

	APterosaurVehicle_BPOnPterosaurSwoopStateChanged_Params params;
	params.NewStage = NewStage;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaptorMovementComponent.GetWalkingAccResistance
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URaptorMovementComponent::GetWalkingAccResistance(float Speed)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorMovementComponent.GetWalkingAccResistance");

	URaptorMovementComponent_GetWalkingAccResistance_Params params;
	params.Speed = Speed;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.RaptorMovementComponent.GetMaxAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URaptorMovementComponent::GetMaxAcceleration()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorMovementComponent.GetMaxAcceleration");

	URaptorMovementComponent_GetMaxAcceleration_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.RaptorVehicle.SetHandBrake
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ARaptorVehicle::SetHandBrake(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorVehicle.SetHandBrake");

	ARaptorVehicle_SetHandBrake_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaptorVehicle.ServerSetHandBrake
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ARaptorVehicle::ServerSetHandBrake(float rate)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorVehicle.ServerSetHandBrake");

	ARaptorVehicle_ServerSetHandBrake_Params params;
	params.rate = rate;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaptorVehicle.MulticastDoJump
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ARaptorVehicle::MulticastDoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorVehicle.MulticastDoJump");

	ARaptorVehicle_MulticastDoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaptorVehicle.GetRaptorMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URaptorMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class URaptorMovementComponent* ARaptorVehicle::GetRaptorMovementComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorVehicle.GetRaptorMovementComponent");

	ARaptorVehicle_GetRaptorMovementComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.RaptorVehicle.DoJump
// (Final, Native, Public, BlueprintCallable)

void ARaptorVehicle::DoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaptorVehicle.DoJump");

	ARaptorVehicle_DoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishAnimInstance.OnBeginFlying
// (Final, Native, Public)
// Parameters:
// bool                           bIsLowFlying                   (Parm, ZeroConstructor, IsPlainOldData)

void URaysFishAnimInstance::OnBeginFlying(bool bIsLowFlying)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishAnimInstance.OnBeginFlying");

	URaysFishAnimInstance_OnBeginFlying_Params params;
	params.bIsLowFlying = bIsLowFlying;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishAnimInstance.HandleOnOceanVehicleDive
// (Final, Native, Public, HasDefaults)
// Parameters:
// bool                           bEnter                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InDirection                    (Parm, IsPlainOldData)

void URaysFishAnimInstance::HandleOnOceanVehicleDive(bool bEnter, const struct FVector& InDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishAnimInstance.HandleOnOceanVehicleDive");

	URaysFishAnimInstance_HandleOnOceanVehicleDive_Params params;
	params.bEnter = bEnter;
	params.InDirection = InDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishAnimInstance.HandleOnOceanVehicleBubbleSkill
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void URaysFishAnimInstance::HandleOnOceanVehicleBubbleSkill(const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishAnimInstance.HandleOnOceanVehicleBubbleSkill");

	URaysFishAnimInstance_HandleOnOceanVehicleBubbleSkill_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishRiderAnimInstance.OnBeginFlying
// (Native, Public)
// Parameters:
// bool                           bIsLowFlying                   (Parm, ZeroConstructor, IsPlainOldData)

void URaysFishRiderAnimInstance::OnBeginFlying(bool bIsLowFlying)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishRiderAnimInstance.OnBeginFlying");

	URaysFishRiderAnimInstance_OnBeginFlying_Params params;
	params.bIsLowFlying = bIsLowFlying;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishRiderAnimInstance.HandleOnOceanVehicleDive
// (Final, Native, Public, HasDefaults)
// Parameters:
// bool                           bEnter                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InDirection                    (Parm, IsPlainOldData)

void URaysFishRiderAnimInstance::HandleOnOceanVehicleDive(bool bEnter, const struct FVector& InDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishRiderAnimInstance.HandleOnOceanVehicleDive");

	URaysFishRiderAnimInstance_HandleOnOceanVehicleDive_Params params;
	params.bEnter = bEnter;
	params.InDirection = InDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RaysFishRiderAnimInstance.HandleOnOceanVehicleBubbleSkill
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void URaysFishRiderAnimInstance::HandleOnOceanVehicleBubbleSkill(const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RaysFishRiderAnimInstance.HandleOnOceanVehicleBubbleSkill");

	URaysFishRiderAnimInstance_HandleOnOceanVehicleBubbleSkill_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RegionOverlapComponent.SetPlayAreaComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     AreaComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void URegionOverlapComponent::SetPlayAreaComponent(class UPrimitiveComponent* AreaComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RegionOverlapComponent.SetPlayAreaComponent");

	URegionOverlapComponent_SetPlayAreaComponent_Params params;
	params.AreaComponent = AreaComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.RegionOverlapComponent.GetOverlappingActors
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          OverlappingActors              (Parm, OutParm, ZeroConstructor)
// class UClass*                  ClassFilter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceQuery                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum ECollisionChannel> CollisionChannel               (Parm, ZeroConstructor, IsPlainOldData)

void URegionOverlapComponent::GetOverlappingActors(class UClass* ClassFilter, bool bForceQuery, TEnumAsByte<enum ECollisionChannel> CollisionChannel, TArray<class AActor*>* OverlappingActors)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.RegionOverlapComponent.GetOverlappingActors");

	URegionOverlapComponent_GetOverlappingActors_Params params;
	params.ClassFilter = ClassFilter;
	params.bForceQuery = bForceQuery;
	params.CollisionChannel = CollisionChannel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OverlappingActors != nullptr)
		*OverlappingActors = params.OverlappingActors;
}


// Function Addons.ReindeerBioVehicle.TryAttachToOtherVehicle
// (Final, Native, Public, BlueprintCallable)

void AReindeerBioVehicle::TryAttachToOtherVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.TryAttachToOtherVehicle");

	AReindeerBioVehicle_TryAttachToOtherVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.OnClientExitFromAttachedVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerBioVehicle::OnClientExitFromAttachedVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.OnClientExitFromAttachedVehicle");

	AReindeerBioVehicle_OnClientExitFromAttachedVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.MulticastDoJump
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void AReindeerBioVehicle::MulticastDoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.MulticastDoJump");

	AReindeerBioVehicle_MulticastDoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.K2_OnClientAttachWithReindeerCart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerBioVehicle::K2_OnClientAttachWithReindeerCart(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.K2_OnClientAttachWithReindeerCart");

	AReindeerBioVehicle_K2_OnClientAttachWithReindeerCart_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.HandleVehicleHealthDestroy
// (Native, Public)

void AReindeerBioVehicle::HandleVehicleHealthDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.HandleVehicleHealthDestroy");

	AReindeerBioVehicle_HandleVehicleHealthDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.GetVehicleAttachState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReindeerBioVehicle::GetVehicleAttachState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.GetVehicleAttachState");

	AReindeerBioVehicle_GetVehicleAttachState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerBioVehicle.GetVehicleAttachComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVehicleAttachmentComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleAttachmentComponent* AReindeerBioVehicle::GetVehicleAttachComp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.GetVehicleAttachComp");

	AReindeerBioVehicle_GetVehicleAttachComp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerBioVehicle.GetBioFlyMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBioFlyMovementComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBioFlyMovementComponentBase* AReindeerBioVehicle::GetBioFlyMovementComponent()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.GetBioFlyMovementComponent");

	AReindeerBioVehicle_GetBioFlyMovementComponent_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerBioVehicle.GetAttachedVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* AReindeerBioVehicle::GetAttachedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.GetAttachedVehicle");

	AReindeerBioVehicle_GetAttachedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerBioVehicle.DoJump
// (Final, Native, Public, BlueprintCallable)

void AReindeerBioVehicle::DoJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.DoJump");

	AReindeerBioVehicle_DoJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerBioVehicle.DoAttachLogic
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerBioVehicle::DoAttachLogic(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerBioVehicle.DoAttachLogic");

	AReindeerBioVehicle_DoAttachLogic_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.UpdateParticleState
// (Final, Native, Public)

void AReindeerCartVehicle::UpdateParticleState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.UpdateParticleState");

	AReindeerCartVehicle_UpdateParticleState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.TryAttachToOtherVehicle
// (Final, Native, Public, BlueprintCallable)

void AReindeerCartVehicle::TryAttachToOtherVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.TryAttachToOtherVehicle");

	AReindeerCartVehicle_TryAttachToOtherVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.SetMovingParticleActived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Inactive                       (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::SetMovingParticleActived(bool Inactive)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.SetMovingParticleActived");

	AReindeerCartVehicle_SetMovingParticleActived_Params params;
	params.Inactive = Inactive;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.SetFloatingParticleActived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Inactive                       (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::SetFloatingParticleActived(bool Inactive)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.SetFloatingParticleActived");

	AReindeerCartVehicle_SetFloatingParticleActived_Params params;
	params.Inactive = Inactive;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.OnParticleEffectLoadingFinished
// (Final, Native, Public)

void AReindeerCartVehicle::OnParticleEffectLoadingFinished()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.OnParticleEffectLoadingFinished");

	AReindeerCartVehicle_OnParticleEffectLoadingFinished_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.OnClientExitFromAttachedVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::OnClientExitFromAttachedVehicle(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.OnClientExitFromAttachedVehicle");

	AReindeerCartVehicle_OnClientExitFromAttachedVehicle_Params params;
	params.Character = Character;
	params.SeatType = SeatType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.LoadParticleEffect
// (Final, Native, Public)

void AReindeerCartVehicle::LoadParticleEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.LoadParticleEffect");

	AReindeerCartVehicle_LoadParticleEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.K2_OnClientAttachToReindeer
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::K2_OnClientAttachToReindeer(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.K2_OnClientAttachToReindeer");

	AReindeerCartVehicle_K2_OnClientAttachToReindeer_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.HandleVehicleHealthDestroy
// (Native, Public)

void AReindeerCartVehicle::HandleVehicleHealthDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.HandleVehicleHealthDestroy");

	AReindeerCartVehicle_HandleVehicleHealthDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.HandleOnSeatAttached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.HandleOnSeatAttached");

	AReindeerCartVehicle_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.GetVehicleAttachState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AReindeerCartVehicle::GetVehicleAttachState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.GetVehicleAttachState");

	AReindeerCartVehicle_GetVehicleAttachState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerCartVehicle.GetVehicleAttachComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVehicleAttachmentComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleAttachmentComponent* AReindeerCartVehicle::GetVehicleAttachComp()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.GetVehicleAttachComp");

	AReindeerCartVehicle_GetVehicleAttachComp_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerCartVehicle.GetForwardSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AReindeerCartVehicle::GetForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.GetForwardSpeed");

	AReindeerCartVehicle_GetForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerCartVehicle.GetAttachedVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* AReindeerCartVehicle::GetAttachedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.GetAttachedVehicle");

	AReindeerCartVehicle_GetAttachedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ReindeerCartVehicle.DoAttachLogic
// (Final, Native, Protected)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void AReindeerCartVehicle::DoAttachLogic(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.DoAttachLogic");

	AReindeerCartVehicle_DoAttachLogic_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.DestroyAllCachedParticleEffect
// (Final, Native, Public, BlueprintCallable)

void AReindeerCartVehicle::DestroyAllCachedParticleEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.DestroyAllCachedParticleEffect");

	AReindeerCartVehicle_DestroyAllCachedParticleEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerCartVehicle.CloseWheelsCollision
// (Final, Native, Protected)

void AReindeerCartVehicle::CloseWheelsCollision()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerCartVehicle.CloseWheelsCollision");

	AReindeerCartVehicle_CloseWheelsCollision_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.ReindeerSeatComponent.GetTotalSeatsNum
// (Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UReindeerSeatComponent::GetTotalSeatsNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ReindeerSeatComponent.GetTotalSeatsNum");

	UReindeerSeatComponent_GetTotalSeatsNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.ScanAvatar.ScanAndPrint
// (Final, Native, Public, BlueprintCallable)

void AScanAvatar::ScanAndPrint()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.ScanAvatar.ScanAndPrint");

	AScanAvatar_ScanAndPrint_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManager.OnRenderQualityChange
// (Final, Native, Protected)
// Parameters:
// bool                           bLoadMap                       (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManager::OnRenderQualityChange(bool bLoadMap)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManager.OnRenderQualityChange");

	USmartBearerManager_OnRenderQualityChange_Params params;
	params.bLoadMap = bLoadMap;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManager.OnPreMatchSuccess
// (Final, Native, Protected)
// Parameters:
// int                            InSubMode                      (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManager::OnPreMatchSuccess(int InSubMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManager.OnPreMatchSuccess");

	USmartBearerManager_OnPreMatchSuccess_Params params;
	params.InSubMode = InSubMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetUseSkipMapForDistacneFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkinnedMeshComponent*   InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetUseSkipMapForDistacneFactor(class USkinnedMeshComponent* InMeshComponent, bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetUseSkipMapForDistacneFactor");

	USmartBearerManagerBPLibrary_SetUseSkipMapForDistacneFactor_Params params;
	params.InMeshComponent = InMeshComponent;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetStaticMeshMinLOD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            NewLOD                         (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetStaticMeshMinLOD(class UStaticMeshComponent* InMeshComponent, int NewLOD)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetStaticMeshMinLOD");

	USmartBearerManagerBPLibrary_SetStaticMeshMinLOD_Params params;
	params.InMeshComponent = InMeshComponent;
	params.NewLOD = NewLOD;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetSkinnedMeshUpdateFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkinnedMeshComponent*   InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            UpdateFlag                     (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetSkinnedMeshUpdateFlag(class USkinnedMeshComponent* InMeshComponent, int UpdateFlag)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetSkinnedMeshUpdateFlag");

	USmartBearerManagerBPLibrary_SetSkinnedMeshUpdateFlag_Params params;
	params.InMeshComponent = InMeshComponent;
	params.UpdateFlag = UpdateFlag;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetSkinnedMeshMinLOD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkinnedMeshComponent*   InMeshComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            NewLOD                         (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetSkinnedMeshMinLOD(class USkinnedMeshComponent* InMeshComponent, int NewLOD)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetSkinnedMeshMinLOD");

	USmartBearerManagerBPLibrary_SetSkinnedMeshMinLOD_Params params;
	params.InMeshComponent = InMeshComponent;
	params.NewLOD = NewLOD;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetPrimitiveVisibile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetPrimitiveVisibile(class UPrimitiveComponent* InComponent, bool bVisible)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetPrimitiveVisibile");

	USmartBearerManagerBPLibrary_SetPrimitiveVisibile_Params params;
	params.InComponent = InComponent;
	params.bVisible = bVisible;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.SetParticleSystemMinTimeBetweenTick
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent* InParticleSystem               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            TickTime                       (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::SetParticleSystemMinTimeBetweenTick(class UParticleSystemComponent* InParticleSystem, int TickTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.SetParticleSystemMinTimeBetweenTick");

	USmartBearerManagerBPLibrary_SetParticleSystemMinTimeBetweenTick_Params params;
	params.InParticleSystem = InParticleSystem;
	params.TickTime = TickTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.RemoveSubSquenceFromSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*     seqActor                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SubSequenceName                (Parm, ZeroConstructor)

void USmartBearerManagerBPLibrary::RemoveSubSquenceFromSequence(class ALevelSequenceActor* seqActor, const struct FString& SubSequenceName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.RemoveSubSquenceFromSequence");

	USmartBearerManagerBPLibrary_RemoveSubSquenceFromSequence_Params params;
	params.seqActor = seqActor;
	params.SubSequenceName = SubSequenceName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.ReleaseTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*              TextureToRelease               (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::ReleaseTexture2D(class UTexture2D* TextureToRelease)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.ReleaseTexture2D");

	USmartBearerManagerBPLibrary_ReleaseTexture2D_Params params;
	params.TextureToRelease = TextureToRelease;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.MarkRenderStateDirty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USmartBearerManagerBPLibrary::MarkRenderStateDirty(class UPrimitiveComponent* InComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.MarkRenderStateDirty");

	USmartBearerManagerBPLibrary_MarkRenderStateDirty_Params params;
	params.InComponent = InComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.IsUMGBlurEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsUMGBlurEnabled()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsUMGBlurEnabled");

	USmartBearerManagerBPLibrary_IsUMGBlurEnabled_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.IsTickAsyncLoadingOptSpecialFullOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsTickAsyncLoadingOptSpecialFullOpen()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsTickAsyncLoadingOptSpecialFullOpen");

	USmartBearerManagerBPLibrary_IsTickAsyncLoadingOptSpecialFullOpen_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.IsSuperFrameOptSwitcherEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Switcher                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsSuperFrameOptSwitcherEnable(int Switcher)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsSuperFrameOptSwitcherEnable");

	USmartBearerManagerBPLibrary_IsSuperFrameOptSwitcherEnable_Params params;
	params.Switcher = Switcher;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.IsStreamingOptSpecialFullOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsStreamingOptSpecialFullOpen()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsStreamingOptSpecialFullOpen");

	USmartBearerManagerBPLibrary_IsStreamingOptSpecialFullOpen_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.IsSmartBearerOptSwitcherEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Switcher                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsSmartBearerOptSwitcherEnable(int Switcher)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsSmartBearerOptSwitcherEnable");

	USmartBearerManagerBPLibrary_IsSmartBearerOptSwitcherEnable_Params params;
	params.Switcher = Switcher;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.IsActorChanCleanUpOptSpecialFullOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerBPLibrary::IsActorChanCleanUpOptSpecialFullOpen()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.IsActorChanCleanUpOptSpecialFullOpen");

	USmartBearerManagerBPLibrary_IsActorChanCleanUpOptSpecialFullOpen_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.GetOrLoadFromCahceMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            GroudID                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PathToLoad                     (Parm, ZeroConstructor)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* USmartBearerManagerBPLibrary::GetOrLoadFromCahceMap(int GroudID, const struct FString& PathToLoad)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.GetOrLoadFromCahceMap");

	USmartBearerManagerBPLibrary_GetOrLoadFromCahceMap_Params params;
	params.GroudID = GroudID;
	params.PathToLoad = PathToLoad;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.GetCurrentNormalCharacterSkinShow
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USmartBearerManagerBPLibrary::GetCurrentNormalCharacterSkinShow()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.GetCurrentNormalCharacterSkinShow");

	USmartBearerManagerBPLibrary_GetCurrentNormalCharacterSkinShow_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.GetCurrentGradeLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USmartBearerManagerBPLibrary::GetCurrentGradeLevel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.GetCurrentGradeLevel");

	USmartBearerManagerBPLibrary_GetCurrentGradeLevel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.GetCurrentDeviceLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USmartBearerManagerBPLibrary::GetCurrentDeviceLevel()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.GetCurrentDeviceLevel");

	USmartBearerManagerBPLibrary_GetCurrentDeviceLevel_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.GetCurrentBearerNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USmartBearerManagerBPLibrary::GetCurrentBearerNum()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.GetCurrentBearerNum");

	USmartBearerManagerBPLibrary_GetCurrentBearerNum_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SmartBearerManagerBPLibrary.ClearFromResCacheMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            GroudID                        (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerBPLibrary::ClearFromResCacheMap(int GroudID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.ClearFromResCacheMap");

	USmartBearerManagerBPLibrary_ClearFromResCacheMap_Params params;
	params.GroudID = GroudID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerBPLibrary.AddPrefixName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PrefixName                     (Parm, ZeroConstructor)

void USmartBearerManagerBPLibrary::AddPrefixName(class UObject* Object, const struct FString& PrefixName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerBPLibrary.AddPrefixName");

	USmartBearerManagerBPLibrary_AddPrefixName_Params params;
	params.Object = Object;
	params.PrefixName = PrefixName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetSuperFrameOptSwitcher
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetSuperFrameOptSwitcher(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetSuperFrameOptSwitcher");

	USmartBearerManagerLuaBridge_SetSuperFrameOptSwitcher_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetSmartBearerOptSwitcher
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetSmartBearerOptSwitcher(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetSmartBearerOptSwitcher");

	USmartBearerManagerLuaBridge_SetSmartBearerOptSwitcher_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetSmartBearerNumData
// (Final, Native, Static, Public)
// Parameters:
// struct FString                 Data                           (Parm, ZeroConstructor)

void USmartBearerManagerLuaBridge::SetSmartBearerNumData(const struct FString& Data)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetSmartBearerNumData");

	USmartBearerManagerLuaBridge_SetSmartBearerNumData_Params params;
	params.Data = Data;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetPostLoadThreadSwitcher
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetPostLoadThreadSwitcher(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetPostLoadThreadSwitcher");

	USmartBearerManagerLuaBridge_SetPostLoadThreadSwitcher_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetOverrideSmartBearerNumData
// (Final, Native, Static, Public)
// Parameters:
// struct FString                 Data                           (Parm, ZeroConstructor)

void USmartBearerManagerLuaBridge::SetOverrideSmartBearerNumData(const struct FString& Data)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetOverrideSmartBearerNumData");

	USmartBearerManagerLuaBridge_SetOverrideSmartBearerNumData_Params params;
	params.Data = Data;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetIsMyTeam
// (Final, Native, Static, Public)
// Parameters:
// struct FScriptDelegate         IsMyTeamDel                    (Parm, ZeroConstructor)

void USmartBearerManagerLuaBridge::SetIsMyTeam(const struct FScriptDelegate& IsMyTeamDel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetIsMyTeam");

	USmartBearerManagerLuaBridge_SetIsMyTeam_Params params;
	params.IsMyTeamDel = IsMyTeamDel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetIsMyFriend
// (Final, Native, Static, Public)
// Parameters:
// struct FScriptDelegate         IsMyFriendDel                  (Parm, ZeroConstructor)

void USmartBearerManagerLuaBridge::SetIsMyFriend(const struct FScriptDelegate& IsMyFriendDel)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetIsMyFriend");

	USmartBearerManagerLuaBridge_SetIsMyFriend_Params params;
	params.IsMyFriendDel = IsMyFriendDel;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherC
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetClientBackEndSwitcherC(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherC");

	USmartBearerManagerLuaBridge_SetClientBackEndSwitcherC_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherB
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetClientBackEndSwitcherB(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherB");

	USmartBearerManagerLuaBridge_SetClientBackEndSwitcherB_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherA
// (Final, Native, Static, Public)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::SetClientBackEndSwitcherA(int State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.SetClientBackEndSwitcherA");

	USmartBearerManagerLuaBridge_SetClientBackEndSwitcherA_Params params;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.OnPreMatchSuccess
// (Final, Native, Static, Public)
// Parameters:
// int                            submode_id                     (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::OnPreMatchSuccess(int submode_id)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.OnPreMatchSuccess");

	USmartBearerManagerLuaBridge_OnPreMatchSuccess_Params params;
	params.submode_id = submode_id;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.OnChatUIVisibleChange
// (Final, Native, Static, Public)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void USmartBearerManagerLuaBridge::OnChatUIVisibleChange(bool bVisible)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.OnChatUIVisibleChange");

	USmartBearerManagerLuaBridge_OnChatUIVisibleChange_Params params;
	params.bVisible = bVisible;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SmartBearerManagerLuaBridge.IsClientBackEndSwitcherBEnable
// (Final, Native, Static, Public)
// Parameters:
// int                            Switcher                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USmartBearerManagerLuaBridge::IsClientBackEndSwitcherBEnable(int Switcher)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SmartBearerManagerLuaBridge.IsClientBackEndSwitcherBEnable");

	USmartBearerManagerLuaBridge_IsClientBackEndSwitcherBEnable_Params params;
	params.Switcher = Switcher;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.WallRunVerticalStepUp
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Delta                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              InHit                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USpecialMoveObj_LeggedAnimal::WallRunVerticalStepUp(const struct FVector& Delta, const struct FHitResult& InHit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.WallRunVerticalStepUp");

	USpecialMoveObj_LeggedAnimal_WallRunVerticalStepUp_Params params;
	params.Delta = Delta;
	params.InHit = InHit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.StartWallRun
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::StartWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.StartWallRun");

	USpecialMoveObj_LeggedAnimal_StartWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.SpecialMoveSetCharacterOwner
// (Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   InOwner                        (Parm, ZeroConstructor, IsPlainOldData)

void USpecialMoveObj_LeggedAnimal::SpecialMoveSetCharacterOwner(class ASTExtraBaseCharacter* InOwner)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.SpecialMoveSetCharacterOwner");

	USpecialMoveObj_LeggedAnimal_SpecialMoveSetCharacterOwner_Params params;
	params.InOwner = InOwner;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.SetAnimRunStop
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::SetAnimRunStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.SetAnimRunStop");

	USpecialMoveObj_LeggedAnimal_SetAnimRunStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnStartWallRun
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::OnStartWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnStartWallRun");

	USpecialMoveObj_LeggedAnimal_OnStartWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaStartWallRun
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::OnLuaStartWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaStartWallRun");

	USpecialMoveObj_LeggedAnimal_OnLuaStartWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaRunStop
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::OnLuaRunStop()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaRunStop");

	USpecialMoveObj_LeggedAnimal_OnLuaRunStop_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaEndWallRun
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::OnLuaEndWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnLuaEndWallRun");

	USpecialMoveObj_LeggedAnimal_OnLuaEndWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnEndWallRun
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::OnEndWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnEndWallRun");

	USpecialMoveObj_LeggedAnimal_OnEndWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.OnClientWallRunEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::OnClientWallRunEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.OnClientWallRunEnd");

	USpecialMoveObj_LeggedAnimal_OnClientWallRunEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.LuaAnimalVaultExit
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::LuaAnimalVaultExit()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.LuaAnimalVaultExit");

	USpecialMoveObj_LeggedAnimal_LuaAnimalVaultExit_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.LuaAnimalVault
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDirectMoveData         MoveData                       (Parm)

void USpecialMoveObj_LeggedAnimal::LuaAnimalVault(const struct FDirectMoveData& MoveData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.LuaAnimalVault");

	USpecialMoveObj_LeggedAnimal_LuaAnimalVault_Params params;
	params.MoveData = MoveData;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.HandleOnWallRunChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bWallRun                       (Parm, ZeroConstructor, IsPlainOldData)

void USpecialMoveObj_LeggedAnimal::HandleOnWallRunChanged(bool bWallRun)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.HandleOnWallRunChanged");

	USpecialMoveObj_LeggedAnimal_HandleOnWallRunChanged_Params params;
	params.bWallRun = bWallRun;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.HandleOnJump
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USpecialMoveObj_LeggedAnimal::HandleOnJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.HandleOnJump");

	USpecialMoveObj_LeggedAnimal_HandleOnJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.GetSpeedRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USpecialMoveObj_LeggedAnimal::GetSpeedRate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.GetSpeedRate");

	USpecialMoveObj_LeggedAnimal_GetSpeedRate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.GetMaxRunSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USpecialMoveObj_LeggedAnimal::GetMaxRunSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.GetMaxRunSpeed");

	USpecialMoveObj_LeggedAnimal_GetMaxRunSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.EndWallRun
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::EndWallRun()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.EndWallRun");

	USpecialMoveObj_LeggedAnimal_EndWallRun_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.CheckForwardWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Dt                             (Parm, ZeroConstructor, IsPlainOldData)

void USpecialMoveObj_LeggedAnimal::CheckForwardWall(float Dt)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.CheckForwardWall");

	USpecialMoveObj_LeggedAnimal_CheckForwardWall_Params params;
	params.Dt = Dt;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.CheckForwardInputOnWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USpecialMoveObj_LeggedAnimal::CheckForwardInputOnWall()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.CheckForwardInputOnWall");

	USpecialMoveObj_LeggedAnimal_CheckForwardInputOnWall_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.CalcWaterHeightOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USpecialMoveObj_LeggedAnimal::CalcWaterHeightOffset()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.CalcWaterHeightOffset");

	USpecialMoveObj_LeggedAnimal_CalcWaterHeightOffset_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.CalcCoolDown
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USpecialMoveObj_LeggedAnimal::CalcCoolDown(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.CalcCoolDown");

	USpecialMoveObj_LeggedAnimal_CalcCoolDown_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.AnimalVaultExit
// (Final, Native, Public, BlueprintCallable)

void USpecialMoveObj_LeggedAnimal::AnimalVaultExit()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.AnimalVaultExit");

	USpecialMoveObj_LeggedAnimal_AnimalVaultExit_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SpecialMoveObj_LeggedAnimal.AnimalVault
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 StartPos                       (Parm, IsPlainOldData)
// struct FVector                 VaultDir                       (Parm, IsPlainOldData)
// struct FVector                 EndPos                         (Parm, IsPlainOldData)

void USpecialMoveObj_LeggedAnimal::AnimalVault(const struct FVector& StartPos, const struct FVector& VaultDir, const struct FVector& EndPos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SpecialMoveObj_LeggedAnimal.AnimalVault");

	USpecialMoveObj_LeggedAnimal_AnimalVault_Params params;
	params.StartPos = StartPos;
	params.VaultDir = VaultDir;
	params.EndPos = EndPos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.UpdateTuring
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::UpdateTuring(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.UpdateTuring");

	USplineMoveObj_UpdateTuring_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.UpdateSplineMoveTurning
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::UpdateSplineMoveTurning(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.UpdateSplineMoveTurning");

	USplineMoveObj_UpdateSplineMoveTurning_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.UpdateMoveSound
// (Final, Native, Public, BlueprintCallable)

void USplineMoveObj::UpdateMoveSound()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.UpdateMoveSound");

	USplineMoveObj_UpdateMoveSound_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.UpdateFocusRotation
// (Final, Native, Public, Const)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::UpdateFocusRotation(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.UpdateFocusRotation");

	USplineMoveObj_UpdateFocusRotation_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.UpdateCameraLag
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::UpdateCameraLag(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.UpdateCameraLag");

	USplineMoveObj_UpdateCameraLag_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.TryEnterSpline
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USplineMoveObj::TryEnterSpline()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.TryEnterSpline");

	USplineMoveObj_TryEnterSpline_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.StopMoveSound
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::StopMoveSound()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.StopMoveSound");

	USplineMoveObj_StopMoveSound_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.StartSplineMoveCameraLag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::StartSplineMoveCameraLag()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.StartSplineMoveCameraLag");

	USplineMoveObj_StartSplineMoveCameraLag_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.SplineMoveTurningEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::SplineMoveTurningEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.SplineMoveTurningEnd");

	USplineMoveObj_SplineMoveTurningEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.SplineMoveTurningBegin
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 InTargetDir                    (Parm, IsPlainOldData)
// bool                           bIsLeft                        (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::SplineMoveTurningBegin(const struct FVector& InTargetDir, bool bIsLeft)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.SplineMoveTurningBegin");

	USplineMoveObj_SplineMoveTurningBegin_Params params;
	params.InTargetDir = InTargetDir;
	params.bIsLeft = bIsLeft;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.SpecialMoveSetCharacterOwner
// (Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   InOwner                        (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::SpecialMoveSetCharacterOwner(class ASTExtraBaseCharacter* InOwner)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.SpecialMoveSetCharacterOwner");

	USplineMoveObj_SpecialMoveSetCharacterOwner_Params params;
	params.InOwner = InOwner;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.SetSplineMoveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum ECustomMovmentMode> InMoveState                    (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::SetSplineMoveState(TEnumAsByte<enum ECustomMovmentMode> InMoveState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.SetSplineMoveState");

	USplineMoveObj_SetSplineMoveState_Params params;
	params.InMoveState = InMoveState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.SetSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USplineMoveObj::SetSpline(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.SetSpline");

	USplineMoveObj_SetSpline_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.ServerPlayerTryEnterSpline
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 EnterLocation                  (Parm, IsPlainOldData)
// struct FRotator                EnterRot                       (Parm, IsPlainOldData)

void USplineMoveObj::ServerPlayerTryEnterSpline(class USplineComponent* InSpline, const struct FVector& EnterLocation, const struct FRotator& EnterRot)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.ServerPlayerTryEnterSpline");

	USplineMoveObj_ServerPlayerTryEnterSpline_Params params;
	params.InSpline = InSpline;
	params.EnterLocation = EnterLocation;
	params.EnterRot = EnterRot;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.PlayMoveSound
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::PlayMoveSound()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.PlayMoveSound");

	USplineMoveObj_PlayMoveSound_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.PlayerLeaveSpline
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<enum EMovementMode> InMovementMode                 (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::PlayerLeaveSpline(class USplineComponent* InSpline, TEnumAsByte<enum EMovementMode> InMovementMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.PlayerLeaveSpline");

	USplineMoveObj_PlayerLeaveSpline_Params params;
	params.InSpline = InSpline;
	params.InMovementMode = InMovementMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.PlayerEnterSpline
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 EnterLoc                       (Parm, IsPlainOldData)
// struct FRotator                EnterRot                       (Parm, IsPlainOldData)

void USplineMoveObj::PlayerEnterSpline(class USplineComponent* InSpline, const struct FVector& EnterLoc, const struct FRotator& EnterRot)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.PlayerEnterSpline");

	USplineMoveObj_PlayerEnterSpline_Params params;
	params.InSpline = InSpline;
	params.EnterLoc = EnterLoc;
	params.EnterRot = EnterRot;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OwnerJump
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::OwnerJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OwnerJump");

	USplineMoveObj_OwnerJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OwnerHasWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USplineMoveObj::OwnerHasWeapon()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OwnerHasWeapon");

	USplineMoveObj_OwnerHasWeapon_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.OnSplineMoveHit
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void USplineMoveObj::OnSplineMoveHit(const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnSplineMoveHit");

	USplineMoveObj_OnSplineMoveHit_Params params;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnSpecialMoveCharacterJump
// (Native, Event, Public, BlueprintEvent)

void USplineMoveObj::OnSpecialMoveCharacterJump()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnSpecialMoveCharacterJump");

	USplineMoveObj_OnSpecialMoveCharacterJump_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnSimulateCharStateChanged
// (Final, Native, Public)
// Parameters:
// uint64_t                       InCurrentStates                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// uint64_t                       InPrevStates                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::OnSimulateCharStateChanged(uint64_t InCurrentStates, uint64_t InPrevStates)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnSimulateCharStateChanged");

	USplineMoveObj_OnSimulateCharStateChanged_Params params;
	params.InCurrentStates = InCurrentStates;
	params.InPrevStates = InPrevStates;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnPlayerRespawn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUAEPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::OnPlayerRespawn(class AUAEPlayerController* PC)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnPlayerRespawn");

	USplineMoveObj_OnPlayerRespawn_Params params;
	params.PC = PC;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnPawnStateInterrupted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)
// EPawnState                     InterruptedBy                  (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::OnPawnStateInterrupted(EPawnState State, EPawnState InterruptedBy)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnPawnStateInterrupted");

	USplineMoveObj_OnPawnStateInterrupted_Params params;
	params.State = State;
	params.InterruptedBy = InterruptedBy;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnPawnLeaveState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EPawnState                     LeaveState                     (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::OnPawnLeaveState(EPawnState LeaveState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnPawnLeaveState");

	USplineMoveObj_OnPawnLeaveState_Params params;
	params.LeaveState = LeaveState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.OnPawnEnterState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EPawnState                     EnterState                     (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::OnPawnEnterState(EPawnState EnterState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.OnPawnEnterState");

	USplineMoveObj_OnPawnEnterState_Params params;
	params.EnterState = EnterState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.MoveAlongSplineError
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::MoveAlongSplineError()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.MoveAlongSplineError");

	USplineMoveObj_MoveAlongSplineError_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.InteractEnterSpline
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USplineMoveObj::InteractEnterSpline(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.InteractEnterSpline");

	USplineMoveObj_InteractEnterSpline_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.InSplineMoveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USplineMoveObj::InSplineMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.InSplineMoveState");

	USplineMoveObj_InSplineMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.HandleBeginTouchScreen
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector2D               Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void USplineMoveObj::HandleBeginTouchScreen(const struct FVector2D& Loc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.HandleBeginTouchScreen");

	USplineMoveObj_HandleBeginTouchScreen_Params params;
	params.Loc = Loc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.GetSplineMoveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<enum ECustomMovmentMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<enum ECustomMovmentMode> USplineMoveObj::GetSplineMoveState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetSplineMoveState");

	USplineMoveObj_GetSplineMoveState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetProjectionLocationOnSpline
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 InLocation                     (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USplineMoveObj::GetProjectionLocationOnSpline(class USplineComponent* InSpline, const struct FVector& InLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetProjectionLocationOnSpline");

	USplineMoveObj_GetProjectionLocationOnSpline_Params params;
	params.InSpline = InSpline;
	params.InLocation = InLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetPlayerEnterSplineRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator USplineMoveObj::GetPlayerEnterSplineRotation(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetPlayerEnterSplineRotation");

	USplineMoveObj_GetPlayerEnterSplineRotation_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetPlayerEnterSplineLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USplineMoveObj::GetPlayerEnterSplineLocation(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetPlayerEnterSplineLocation");

	USplineMoveObj_GetPlayerEnterSplineLocation_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetDistanceAlongSplineAtWorldLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 InLoc                          (Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USplineMoveObj::GetDistanceAlongSplineAtWorldLocation(class USplineComponent* InSpline, const struct FVector& InLoc)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetDistanceAlongSplineAtWorldLocation");

	USplineMoveObj_GetDistanceAlongSplineAtWorldLocation_Params params;
	params.InSpline = InSpline;
	params.InLoc = InLoc;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetCurrentTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USplineMoveObj::GetCurrentTime()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetCurrentTime");

	USplineMoveObj_GetCurrentTime_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* USplineMoveObj::GetCharacterOwner()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.GetCharacterOwner");

	USplineMoveObj_GetCharacterOwner_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.ForceLeaveSpline
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USplineMoveObj::ForceLeaveSpline(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.ForceLeaveSpline");

	USplineMoveObj_ForceLeaveSpline_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.EndSplineMoveCameraLag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USplineMoveObj::EndSplineMoveCameraLag()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.EndSplineMoveCameraLag");

	USplineMoveObj_EndSplineMoveCameraLag_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.EnableFocusRotation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           InEnable                       (Parm, ZeroConstructor, IsPlainOldData)

void USplineMoveObj::EnableFocusRotation(bool InEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.EnableFocusRotation");

	USplineMoveObj_EnableFocusRotation_Params params;
	params.InEnable = InEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.CustomModeIsSplineMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  InCustomMode                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USplineMoveObj::CustomModeIsSplineMove(unsigned char InCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.CustomModeIsSplineMove");

	USplineMoveObj_CustomModeIsSplineMove_Params params;
	params.InCustomMode = InCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SplineMoveObj.ClientPlayerLeaveSpline
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USplineComponent*        InSpline                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USplineMoveObj::ClientPlayerLeaveSpline(class USplineComponent* InSpline)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.ClientPlayerLeaveSpline");

	USplineMoveObj_ClientPlayerLeaveSpline_Params params;
	params.InSpline = InSpline;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.AsyncLoadSoundResourceFinish
// (Final, Native, Public, BlueprintCallable)

void USplineMoveObj::AsyncLoadSoundResourceFinish()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.AsyncLoadSoundResourceFinish");

	USplineMoveObj_AsyncLoadSoundResourceFinish_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.AsyncLoadSoundResource
// (Final, Native, Public, BlueprintCallable)

void USplineMoveObj::AsyncLoadSoundResource()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.AsyncLoadSoundResource");

	USplineMoveObj_AsyncLoadSoundResource_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SplineMoveObj.AllowTryEnterSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USplineMoveObj::AllowTryEnterSpline()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SplineMoveObj.AllowTryEnterSpline");

	USplineMoveObj_AllowTryEnterSpline_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.StandradVehicleBearerUnit.OnVehicleBeforeWheelDestroy
// (Final, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UStandradVehicleBearerUnit::OnVehicleBeforeWheelDestroy(int Index)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.StandradVehicleBearerUnit.OnVehicleBeforeWheelDestroy");

	UStandradVehicleBearerUnit_OnVehicleBeforeWheelDestroy_Params params;
	params.Index = Index;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.StandradVehicleBearerUnit.OnVehicleAvatarEquiped
// (Final, Native, Public)

void UStandradVehicleBearerUnit::OnVehicleAvatarEquiped()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.StandradVehicleBearerUnit.OnVehicleAvatarEquiped");

	UStandradVehicleBearerUnit_OnVehicleAvatarEquiped_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.StandradVehicleBearerUnit.OnUpdateSeatGUI
// (Final, Native, Public)

void UStandradVehicleBearerUnit::OnUpdateSeatGUI()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.StandradVehicleBearerUnit.OnUpdateSeatGUI");

	UStandradVehicleBearerUnit_OnUpdateSeatGUI_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddItem.OnExecute
// (Native, Protected)

void USTBuffAction_AddItem::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddItem.OnExecute");

	USTBuffAction_AddItem_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddItem.OnEnd
// (Native, Protected)

void USTBuffAction_AddItem::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddItem.OnEnd");

	USTBuffAction_AddItem_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRecoveryPrompt.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AddRecoveryPrompt::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRecoveryPrompt.OnTick");

	USTBuffAction_AddRecoveryPrompt_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRecoveryPrompt.OnExecute
// (Native, Protected)

void USTBuffAction_AddRecoveryPrompt::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRecoveryPrompt.OnExecute");

	USTBuffAction_AddRecoveryPrompt_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRecoveryPrompt.OnEnd
// (Native, Protected)

void USTBuffAction_AddRecoveryPrompt::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRecoveryPrompt.OnEnd");

	USTBuffAction_AddRecoveryPrompt_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveBuff.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AddRemoveBuff::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveBuff.OnTick");

	USTBuffAction_AddRemoveBuff_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveBuff.OnExecute
// (Native, Protected)

void USTBuffAction_AddRemoveBuff::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveBuff.OnExecute");

	USTBuffAction_AddRemoveBuff_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AddRemoveMapMarkForActorClass::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnTick");

	USTBuffAction_AddRemoveMapMarkForActorClass_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnExecute
// (Native, Protected)

void USTBuffAction_AddRemoveMapMarkForActorClass::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnExecute");

	USTBuffAction_AddRemoveMapMarkForActorClass_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnEnd
// (Native, Protected)

void USTBuffAction_AddRemoveMapMarkForActorClass::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForActorClass.OnEnd");

	USTBuffAction_AddRemoveMapMarkForActorClass_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AddRemoveMapMarkForSelfPawn::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnTick");

	USTBuffAction_AddRemoveMapMarkForSelfPawn_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnExecute
// (Native, Protected)

void USTBuffAction_AddRemoveMapMarkForSelfPawn::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnExecute");

	USTBuffAction_AddRemoveMapMarkForSelfPawn_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnEnd
// (Native, Protected)

void USTBuffAction_AddRemoveMapMarkForSelfPawn::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AddRemoveMapMarkForSelfPawn.OnEnd");

	USTBuffAction_AddRemoveMapMarkForSelfPawn_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AdjustStunPostMat.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AdjustStunPostMat::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AdjustStunPostMat.OnTick");

	USTBuffAction_AdjustStunPostMat_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AdjustStunPostMat.OnInitialize
// (Native, Protected)

void USTBuffAction_AdjustStunPostMat::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AdjustStunPostMat.OnInitialize");

	USTBuffAction_AdjustStunPostMat_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AdjustStunPostMat.OnExecute
// (Native, Protected)

void USTBuffAction_AdjustStunPostMat::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AdjustStunPostMat.OnExecute");

	USTBuffAction_AdjustStunPostMat_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AdjustStunPostMat.OnEnd
// (Native, Protected)

void USTBuffAction_AdjustStunPostMat::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AdjustStunPostMat.OnEnd");

	USTBuffAction_AdjustStunPostMat_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.OnTakeDamageEvent
// (Final, Native, Public, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AIMoveToLocation::OnTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.OnTakeDamageEvent");

	USTBuffAction_AIMoveToLocation_OnTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.OnInitialize
// (Native, Public)

void USTBuffAction_AIMoveToLocation::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.OnInitialize");

	USTBuffAction_AIMoveToLocation_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.OnForceMoveToLocationEvent
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 MoveToPos                      (Parm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AIMoveToLocation::OnForceMoveToLocationEvent(const struct FVector& MoveToPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.OnForceMoveToLocationEvent");

	USTBuffAction_AIMoveToLocation_OnForceMoveToLocationEvent_Params params;
	params.MoveToPos = MoveToPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.OnExecute
// (Native, Public)

void USTBuffAction_AIMoveToLocation::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.OnExecute");

	USTBuffAction_AIMoveToLocation_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.OnDestroy
// (Native, Public)

void USTBuffAction_AIMoveToLocation::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.OnDestroy");

	USTBuffAction_AIMoveToLocation_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AIMoveToLocation.DoForceMoveToLocation
// (Final, Native, Public)
// Parameters:
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AIMoveToLocation::DoForceMoveToLocation(bool bStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AIMoveToLocation.DoForceMoveToLocation");

	USTBuffAction_AIMoveToLocation_DoForceMoveToLocation_Params params;
	params.bStart = bStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.OnExecute
// (Native, Protected)

void USTBuffAction_Attachment::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.OnExecute");

	USTBuffAction_Attachment_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.OnEnd
// (Native, Protected)

void USTBuffAction_Attachment::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.OnEnd");

	USTBuffAction_Attachment_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.OnDestroy
// (Native, Protected)

void USTBuffAction_Attachment::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.OnDestroy");

	USTBuffAction_Attachment_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.DestroyAttachment
// (Final, Native, Protected)

void USTBuffAction_Attachment::DestroyAttachment()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.DestroyAttachment");

	USTBuffAction_Attachment_DestroyAttachment_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.CreateAttachment
// (Final, Native, Protected)

void USTBuffAction_Attachment::CreateAttachment()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.CreateAttachment");

	USTBuffAction_Attachment_CreateAttachment_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.AsyncLoadFinish
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_Attachment::AsyncLoadFinish(class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.AsyncLoadFinish");

	USTBuffAction_Attachment_AsyncLoadFinish_Params params;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Attachment.AsyncLoad
// (Final, Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_Attachment::AsyncLoad()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Attachment.AsyncLoad");

	USTBuffAction_Attachment_AsyncLoad_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_AttrConversion.OnResetExecute
// (Native, Protected)
// Parameters:
// bool                           IgnoreEnd                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AttrConversion::OnResetExecute(bool IgnoreEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrConversion.OnResetExecute");

	USTBuffAction_AttrConversion_OnResetExecute_Params params;
	params.IgnoreEnd = IgnoreEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrConversion.OnInitialize
// (Native, Protected)

void USTBuffAction_AttrConversion::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrConversion.OnInitialize");

	USTBuffAction_AttrConversion_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrConversion.OnExecute
// (Native, Protected)

void USTBuffAction_AttrConversion::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrConversion.OnExecute");

	USTBuffAction_AttrConversion_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrConversion.OnEnd
// (Native, Protected)

void USTBuffAction_AttrConversion::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrConversion.OnEnd");

	USTBuffAction_AttrConversion_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrConversion.GetAttrModify
// (Final, Native, Protected)
// Parameters:
// class UAttrModifyComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAttrModifyComponent* USTBuffAction_AttrConversion::GetAttrModify()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrConversion.GetAttrModify");

	USTBuffAction_AttrConversion_GetAttrModify_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_AttrModifier.OnResetExecute
// (Native, Protected)
// Parameters:
// bool                           IgnoreEnd                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_AttrModifier::OnResetExecute(bool IgnoreEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrModifier.OnResetExecute");

	USTBuffAction_AttrModifier_OnResetExecute_Params params;
	params.IgnoreEnd = IgnoreEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrModifier.OnInitialize
// (Native, Protected)

void USTBuffAction_AttrModifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrModifier.OnInitialize");

	USTBuffAction_AttrModifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrModifier.OnExecute
// (Native, Protected)

void USTBuffAction_AttrModifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrModifier.OnExecute");

	USTBuffAction_AttrModifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrModifier.OnEnd
// (Native, Protected)

void USTBuffAction_AttrModifier::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrModifier.OnEnd");

	USTBuffAction_AttrModifier_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_AttrModifier.GetAttrModify
// (Final, Native, Protected)
// Parameters:
// class UAttrModifyComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAttrModifyComponent* USTBuffAction_AttrModifier::GetAttrModify()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_AttrModifier.GetAttrModify");

	USTBuffAction_AttrModifier_GetAttrModify_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_BaseHitFilter.FilterGun
// (Final, Native, Public)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_BaseHitFilter::FilterGun(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BaseHitFilter.FilterGun");

	USTBuffAction_BaseHitFilter_FilterGun_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_BaseHitFilter.FilterBullet
// (Final, Native, Public)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_BaseHitFilter::FilterBullet(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BaseHitFilter.FilterBullet");

	USTBuffAction_BaseHitFilter_FilterBullet_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_BaseHitFilter.CheckFilter
// (Final, Native, Public)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_BaseHitFilter::CheckFilter(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BaseHitFilter.CheckFilter");

	USTBuffAction_BaseHitFilter_CheckFilter_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_BPCallEvent.OnInitialize
// (Native, Protected)

void USTBuffAction_BPCallEvent::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BPCallEvent.OnInitialize");

	USTBuffAction_BPCallEvent_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_BPCallEvent.OnExecute
// (Native, Protected)

void USTBuffAction_BPCallEvent::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BPCallEvent.OnExecute");

	USTBuffAction_BPCallEvent_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_BPCallEvent.OnEnd
// (Native, Protected)

void USTBuffAction_BPCallEvent::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BPCallEvent.OnEnd");

	USTBuffAction_BPCallEvent_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_BPCallEvent.BPInitialize
// (Event, Protected, BlueprintEvent)

void USTBuffAction_BPCallEvent::BPInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BPCallEvent.BPInitialize");

	USTBuffAction_BPCallEvent_BPInitialize_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_BPCallEvent.BPGetOwner
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* USTBuffAction_BPCallEvent::BPGetOwner()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_BPCallEvent.BPGetOwner");

	USTBuffAction_BPCallEvent_BPGetOwner_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_CameraAnim.OnExecute
// (Native, Protected)

void USTBuffAction_CameraAnim::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CameraAnim.OnExecute");

	USTBuffAction_CameraAnim_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CameraAnim.OnEnd
// (Native, Protected)

void USTBuffAction_CameraAnim::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CameraAnim.OnEnd");

	USTBuffAction_CameraAnim_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CameraTracker.OnExecute
// (Native, Protected)

void USTBuffAction_CameraTracker::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CameraTracker.OnExecute");

	USTBuffAction_CameraTracker_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CameraTracker.OnEnd
// (Native, Protected)

void USTBuffAction_CameraTracker::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CameraTracker.OnEnd");

	USTBuffAction_CameraTracker_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ChangeParticleParam.OnExecute
// (Native, Protected)

void USTBuffAction_ChangeParticleParam::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ChangeParticleParam.OnExecute");

	USTBuffAction_ChangeParticleParam_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ChangeParticleParam.OnEnd
// (Native, Protected)

void USTBuffAction_ChangeParticleParam::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ChangeParticleParam.OnEnd");

	USTBuffAction_ChangeParticleParam_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ChangeRectiftAvatar.OnExecute
// (Native, Protected)

void USTBuffAction_ChangeRectiftAvatar::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ChangeRectiftAvatar.OnExecute");

	USTBuffAction_ChangeRectiftAvatar_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ChangeRectiftAvatar.OnEnd
// (Native, Protected)

void USTBuffAction_ChangeRectiftAvatar::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ChangeRectiftAvatar.OnEnd");

	USTBuffAction_ChangeRectiftAvatar_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.OnInitialize
// (Native, Protected)

void USTBuffAction_CustomCondDamage::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.OnInitialize");

	USTBuffAction_CustomCondDamage_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.OnExecute
// (Native, Protected)

void USTBuffAction_CustomCondDamage::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.OnExecute");

	USTBuffAction_CustomCondDamage_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.OnEnd
// (Native, Protected)

void USTBuffAction_CustomCondDamage::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.OnEnd");

	USTBuffAction_CustomCondDamage_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.OnDestroy
// (Native, Protected)

void USTBuffAction_CustomCondDamage::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.OnDestroy");

	USTBuffAction_CustomCondDamage_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.OnAttackerPreTakeDamage
// (Final, Native, Public)
// Parameters:
// class AActor*                  VictimActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomDamageableInfo*   uCustomDamageInfo              (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_CustomCondDamage::OnAttackerPreTakeDamage(class AActor* VictimActor, class UCustomDamageableInfo* uCustomDamageInfo)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.OnAttackerPreTakeDamage");

	USTBuffAction_CustomCondDamage_OnAttackerPreTakeDamage_Params params;
	params.VictimActor = VictimActor;
	params.uCustomDamageInfo = uCustomDamageInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_CustomCondDamage.GetCustomTypeDamageData
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  VictimActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomDamageableInfo*   uCustomDamageInfo              (Parm, ZeroConstructor, IsPlainOldData)
// struct FBACustomTypeDamageData OutData                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_CustomCondDamage::GetCustomTypeDamageData(class AActor* VictimActor, class UCustomDamageableInfo* uCustomDamageInfo, struct FBACustomTypeDamageData* OutData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.GetCustomTypeDamageData");

	USTBuffAction_CustomCondDamage_GetCustomTypeDamageData_Params params;
	params.VictimActor = VictimActor;
	params.uCustomDamageInfo = uCustomDamageInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_CustomCondDamage.GetCustomHpDamageData
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  VictimActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomDamageableInfo*   uCustomDamageInfo              (Parm, ZeroConstructor, IsPlainOldData)
// struct FBACustomHpDamageData   OutData                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_CustomCondDamage::GetCustomHpDamageData(class AActor* VictimActor, class UCustomDamageableInfo* uCustomDamageInfo, struct FBACustomHpDamageData* OutData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.GetCustomHpDamageData");

	USTBuffAction_CustomCondDamage_GetCustomHpDamageData_Params params;
	params.VictimActor = VictimActor;
	params.uCustomDamageInfo = uCustomDamageInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_CustomCondDamage.GetCustomDistDamageData
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  VictimActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomDamageableInfo*   uCustomDamageInfo              (Parm, ZeroConstructor, IsPlainOldData)
// struct FBACustomDistDamageData OutData                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_CustomCondDamage::GetCustomDistDamageData(class AActor* VictimActor, class UCustomDamageableInfo* uCustomDamageInfo, struct FBACustomDistDamageData* OutData)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_CustomCondDamage.GetCustomDistDamageData");

	USTBuffAction_CustomCondDamage_GetCustomDistDamageData_Params params;
	params.VictimActor = VictimActor;
	params.uCustomDamageInfo = uCustomDamageInfo;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_DirectMove.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_DirectMove::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DirectMove.OnTick");

	USTBuffAction_DirectMove_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DirectMove.OnExecute
// (Native, Protected)

void USTBuffAction_DirectMove::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DirectMove.OnExecute");

	USTBuffAction_DirectMove_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DirectMove.OnEnd
// (Native, Protected)

void USTBuffAction_DirectMove::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DirectMove.OnEnd");

	USTBuffAction_DirectMove_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DisablePawnState.OnExecute
// (Native, Protected)

void USTBuffAction_DisablePawnState::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DisablePawnState.OnExecute");

	USTBuffAction_DisablePawnState_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DisablePawnState.OnEnd
// (Native, Protected)

void USTBuffAction_DisablePawnState::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DisablePawnState.OnEnd");

	USTBuffAction_DisablePawnState_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Dot.TakeDotValue
// (Native, Protected)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTBuffAction_Dot::TakeDotValue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Dot.TakeDotValue");

	USTBuffAction_Dot_TakeDotValue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_Dot.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_Dot::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Dot.OnTick");

	USTBuffAction_Dot_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Dot.OnExecute
// (Native, Protected)

void USTBuffAction_Dot::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Dot.OnExecute");

	USTBuffAction_Dot_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DotBullet.TakeDotValue
// (Final, Native, Protected)

void USTBuffAction_DotBullet::TakeDotValue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotBullet.TakeDotValue");

	USTBuffAction_DotBullet_TakeDotValue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DotBullet.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_DotBullet::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotBullet.OnTick");

	USTBuffAction_DotBullet_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DotBullet.OnExecute
// (Native, Protected)

void USTBuffAction_DotBullet::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotBullet.OnExecute");

	USTBuffAction_DotBullet_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_DotBullet.CaculateDotValue
// (Final, Native, Protected)
// Parameters:
// float                          OriginValue                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTBuffAction_DotBullet::CaculateDotValue(float OriginValue)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotBullet.CaculateDotValue");

	USTBuffAction_DotBullet_CaculateDotValue_Params params;
	params.OriginValue = OriginValue;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_DotSkillBlackboard.TakeDotValue
// (Native, Protected)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTBuffAction_DotSkillBlackboard::TakeDotValue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotSkillBlackboard.TakeDotValue");

	USTBuffAction_DotSkillBlackboard_TakeDotValue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_DotSkillBlackboard.OnInitialize
// (Native, Protected)

void USTBuffAction_DotSkillBlackboard::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_DotSkillBlackboard.OnInitialize");

	USTBuffAction_DotSkillBlackboard_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnableMove.OnExecute
// (Native, Protected)

void USTBuffAction_EnableMove::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnableMove.OnExecute");

	USTBuffAction_EnableMove_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnableMove.OnEnd
// (Native, Protected)

void USTBuffAction_EnableMove::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnableMove.OnEnd");

	USTBuffAction_EnableMove_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnemySense.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_EnemySense::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnemySense.OnTick");

	USTBuffAction_EnemySense_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnemySense.OnInitialize
// (Native, Protected)

void USTBuffAction_EnemySense::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnemySense.OnInitialize");

	USTBuffAction_EnemySense_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnemySense.OnExecute
// (Native, Protected)

void USTBuffAction_EnemySense::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnemySense.OnExecute");

	USTBuffAction_EnemySense_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnterState.OnExecute
// (Native, Protected)

void USTBuffAction_EnterState::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnterState.OnExecute");

	USTBuffAction_EnterState_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EnterState.OnEnd
// (Native, Protected)

void USTBuffAction_EnterState::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EnterState.OnEnd");

	USTBuffAction_EnterState_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EquipmentWeightAttr.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_EquipmentWeightAttr::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EquipmentWeightAttr.OnTick");

	USTBuffAction_EquipmentWeightAttr_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EquipmentWeightAttr.OnInitialize
// (Native, Protected)

void USTBuffAction_EquipmentWeightAttr::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EquipmentWeightAttr.OnInitialize");

	USTBuffAction_EquipmentWeightAttr_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EquipmentWeightAttr.OnExecute
// (Native, Protected)

void USTBuffAction_EquipmentWeightAttr::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EquipmentWeightAttr.OnExecute");

	USTBuffAction_EquipmentWeightAttr_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_EquipmentWeightAttr.OnEnd
// (Native, Protected)

void USTBuffAction_EquipmentWeightAttr::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_EquipmentWeightAttr.OnEnd");

	USTBuffAction_EquipmentWeightAttr_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GameTipWithMsg.OnExecute
// (Native, Protected)

void USTBuffAction_GameTipWithMsg::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GameTipWithMsg.OnExecute");

	USTBuffAction_GameTipWithMsg_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.SpawnExplodeActor
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 SpawnEffActorPos               (Parm, IsPlainOldData)

void USTBuffAction_GenBulletHitEffect::SpawnExplodeActor(const struct FVector& SpawnEffActorPos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.SpawnExplodeActor");

	USTBuffAction_GenBulletHitEffect_SpawnExplodeActor_Params params;
	params.SpawnEffActorPos = SpawnEffActorPos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.SpawnEffectActor
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 SpawnEffActorPos               (Parm, IsPlainOldData)

void USTBuffAction_GenBulletHitEffect::SpawnEffectActor(const struct FVector& SpawnEffActorPos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.SpawnEffectActor");

	USTBuffAction_GenBulletHitEffect_SpawnEffectActor_Params params;
	params.SpawnEffActorPos = SpawnEffActorPos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.OnServerBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletHitEffect::OnServerBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.OnServerBulleteHitEvent");

	USTBuffAction_GenBulletHitEffect_OnServerBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.OnInitialize
// (Native, Protected)

void USTBuffAction_GenBulletHitEffect::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.OnInitialize");

	USTBuffAction_GenBulletHitEffect_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.OnExecute
// (Native, Protected)

void USTBuffAction_GenBulletHitEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.OnExecute");

	USTBuffAction_GenBulletHitEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.OnDestroy
// (Native, Protected)

void USTBuffAction_GenBulletHitEffect::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.OnDestroy");

	USTBuffAction_GenBulletHitEffect_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.OnClientBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletHitEffect::OnClientBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.OnClientBulleteHitEvent");

	USTBuffAction_GenBulletHitEffect_OnClientBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitEffect.AddScreenEdgeEff
// (Final, Native, Protected)

void USTBuffAction_GenBulletHitEffect::AddScreenEdgeEff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitEffect.AddScreenEdgeEff");

	USTBuffAction_GenBulletHitEffect_AddScreenEdgeEff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.RemoveExplodeEffect
// (Final, Native, Protected)

void USTBuffAction_GenBulletHitExplode::RemoveExplodeEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.RemoveExplodeEffect");

	USTBuffAction_GenBulletHitExplode_RemoveExplodeEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.OnServerBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletHitExplode::OnServerBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.OnServerBulleteHitEvent");

	USTBuffAction_GenBulletHitExplode_OnServerBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.OnInitialize
// (Native, Protected)

void USTBuffAction_GenBulletHitExplode::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.OnInitialize");

	USTBuffAction_GenBulletHitExplode_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.OnDestroy
// (Native, Protected)

void USTBuffAction_GenBulletHitExplode::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.OnDestroy");

	USTBuffAction_GenBulletHitExplode_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.OnClientBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletHitExplode::OnClientBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.OnClientBulleteHitEvent");

	USTBuffAction_GenBulletHitExplode_OnClientBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletHitExplode.AddScreenEdgeEff
// (Final, Native, Protected)

void USTBuffAction_GenBulletHitExplode::AddScreenEdgeEff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletHitExplode.AddScreenEdgeEff");

	USTBuffAction_GenBulletHitExplode_AddScreenEdgeEff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletPosionHitEffect.OnServerBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletPosionHitEffect::OnServerBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletPosionHitEffect.OnServerBulleteHitEvent");

	USTBuffAction_GenBulletPosionHitEffect_OnServerBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletPosionHitEffect.OnInitialize
// (Native, Protected)

void USTBuffAction_GenBulletPosionHitEffect::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletPosionHitEffect.OnInitialize");

	USTBuffAction_GenBulletPosionHitEffect_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletPosionHitEffect.OnDestroy
// (Native, Protected)

void USTBuffAction_GenBulletPosionHitEffect::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletPosionHitEffect.OnDestroy");

	USTBuffAction_GenBulletPosionHitEffect_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenBulletPosionHitEffect.OnClientBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenBulletPosionHitEffect::OnClientBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenBulletPosionHitEffect.OnClientBulleteHitEvent");

	USTBuffAction_GenBulletPosionHitEffect_OnClientBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenCureAmplifier.OnInitialize
// (Native, Public)

void USTBuffAction_GenCureAmplifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenCureAmplifier.OnInitialize");

	USTBuffAction_GenCureAmplifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenCureAmplifier.OnExecute
// (Native, Public)

void USTBuffAction_GenCureAmplifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenCureAmplifier.OnExecute");

	USTBuffAction_GenCureAmplifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenCureAmplifier.OnDestroy
// (Native, Public)

void USTBuffAction_GenCureAmplifier::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenCureAmplifier.OnDestroy");

	USTBuffAction_GenCureAmplifier_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenCureAmplifier.GenCureEffect
// (Final, Native, Public)

void USTBuffAction_GenCureAmplifier::GenCureEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenCureAmplifier.GenCureEffect");

	USTBuffAction_GenCureAmplifier_GenCureEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.OnParticleSystemFinished
// (Native, Protected)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USTBuffAction_GenEffectAtPosition::OnParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.OnParticleSystemFinished");

	USTBuffAction_GenEffectAtPosition_OnParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.OnInitialize
// (Native, Protected)

void USTBuffAction_GenEffectAtPosition::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.OnInitialize");

	USTBuffAction_GenEffectAtPosition_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.OnDestroy
// (Native, Protected)

void USTBuffAction_GenEffectAtPosition::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.OnDestroy");

	USTBuffAction_GenEffectAtPosition_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.OnClientTakeDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenEffectAtPosition::OnClientTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.OnClientTakeDamageEvent");

	USTBuffAction_GenEffectAtPosition_OnClientTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.OnClientPushDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenEffectAtPosition::OnClientPushDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Causer, class AActor* Victim)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.OnClientPushDamageEvent");

	USTBuffAction_GenEffectAtPosition_OnClientPushDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Causer = Causer;
	params.Victim = Victim;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenEffectAtPosition.GenDieEffect
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 GenPosition                    (Parm, IsPlainOldData)

void USTBuffAction_GenEffectAtPosition::GenDieEffect(const struct FVector& GenPosition)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenEffectAtPosition.GenDieEffect");

	USTBuffAction_GenEffectAtPosition_GenDieEffect_Params params;
	params.GenPosition = GenPosition;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.SpawnEffectActor
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 SpawnEffActorPos               (Parm, IsPlainOldData)

void USTBuffAction_GenNoiseAmplifier::SpawnEffectActor(const struct FVector& SpawnEffActorPos)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.SpawnEffectActor");

	USTBuffAction_GenNoiseAmplifier_SpawnEffectActor_Params params;
	params.SpawnEffActorPos = SpawnEffActorPos;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.OnServerBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenNoiseAmplifier::OnServerBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.OnServerBulleteHitEvent");

	USTBuffAction_GenNoiseAmplifier_OnServerBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.OnInitialize
// (Native, Protected)

void USTBuffAction_GenNoiseAmplifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.OnInitialize");

	USTBuffAction_GenNoiseAmplifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.OnExecute
// (Native, Protected)

void USTBuffAction_GenNoiseAmplifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.OnExecute");

	USTBuffAction_GenNoiseAmplifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.OnDestroy
// (Native, Protected)

void USTBuffAction_GenNoiseAmplifier::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.OnDestroy");

	USTBuffAction_GenNoiseAmplifier_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.OnClientBulleteHitEvent
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  Causer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitPos                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_GenNoiseAmplifier::OnClientBulleteHitEvent(class AActor* Causer, class AActor* Victim, const struct FVector& HitPos, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.OnClientBulleteHitEvent");

	USTBuffAction_GenNoiseAmplifier_OnClientBulleteHitEvent_Params params;
	params.Causer = Causer;
	params.Victim = Victim;
	params.HitPos = HitPos;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.GenBulletHitEffect
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 GenPosition                    (Parm, IsPlainOldData)

void USTBuffAction_GenNoiseAmplifier::GenBulletHitEffect(const struct FVector& GenPosition)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.GenBulletHitEffect");

	USTBuffAction_GenNoiseAmplifier_GenBulletHitEffect_Params params;
	params.GenPosition = GenPosition;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenNoiseAmplifier.AddScreenEdgeEff
// (Final, Native, Protected)

void USTBuffAction_GenNoiseAmplifier::AddScreenEdgeEff()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenNoiseAmplifier.AddScreenEdgeEff");

	USTBuffAction_GenNoiseAmplifier_AddScreenEdgeEff_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenSmokeAmplifier.RemoveSmokeEffect
// (Final, Native, Public)

void USTBuffAction_GenSmokeAmplifier::RemoveSmokeEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenSmokeAmplifier.RemoveSmokeEffect");

	USTBuffAction_GenSmokeAmplifier_RemoveSmokeEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenSmokeAmplifier.OnInitialize
// (Native, Public)

void USTBuffAction_GenSmokeAmplifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenSmokeAmplifier.OnInitialize");

	USTBuffAction_GenSmokeAmplifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenSmokeAmplifier.OnExecute
// (Native, Public)

void USTBuffAction_GenSmokeAmplifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenSmokeAmplifier.OnExecute");

	USTBuffAction_GenSmokeAmplifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenSmokeAmplifier.OnDestroy
// (Native, Public)

void USTBuffAction_GenSmokeAmplifier::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenSmokeAmplifier.OnDestroy");

	USTBuffAction_GenSmokeAmplifier_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_GenSmokeAmplifier.GenSmokeEffect
// (Final, Native, Public)

void USTBuffAction_GenSmokeAmplifier::GenSmokeEffect()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_GenSmokeAmplifier.GenSmokeEffect");

	USTBuffAction_GenSmokeAmplifier_GenSmokeEffect_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_HangInAir.OnTick
// (Native, Public)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_HangInAir::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_HangInAir.OnTick");

	USTBuffAction_HangInAir_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_HangInAir.OnExecute
// (Native, Public)

void USTBuffAction_HangInAir::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_HangInAir.OnExecute");

	USTBuffAction_HangInAir_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_HangInAir.OnEnd
// (Native, Public)

void USTBuffAction_HangInAir::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_HangInAir.OnEnd");

	USTBuffAction_HangInAir_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_InGameUIMsg.OnExecute
// (Native, Protected)

void USTBuffAction_InGameUIMsg::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_InGameUIMsg.OnExecute");

	USTBuffAction_InGameUIMsg_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_InGameUIMsg.OnEnd
// (Native, Protected)

void USTBuffAction_InGameUIMsg::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_InGameUIMsg.OnEnd");

	USTBuffAction_InGameUIMsg_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Invincible.OnExecute
// (Native, Protected)

void USTBuffAction_Invincible::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Invincible.OnExecute");

	USTBuffAction_Invincible_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Invincible.OnEnd
// (Native, Protected)

void USTBuffAction_Invincible::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Invincible.OnEnd");

	USTBuffAction_Invincible_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_LauchCharacter.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_LauchCharacter::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_LauchCharacter.OnTick");

	USTBuffAction_LauchCharacter_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_LauchCharacter.OnExecute
// (Native, Protected)

void USTBuffAction_LauchCharacter::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_LauchCharacter.OnExecute");

	USTBuffAction_LauchCharacter_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_LauchCharacter.OnEnd
// (Native, Protected)

void USTBuffAction_LauchCharacter::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_LauchCharacter.OnEnd");

	USTBuffAction_LauchCharacter_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Log.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_Log::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Log.OnTick");

	USTBuffAction_Log_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Log.OnExecute
// (Native, Protected)

void USTBuffAction_Log::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Log.OnExecute");

	USTBuffAction_Log_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Log.OnEnd
// (Native, Protected)

void USTBuffAction_Log::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Log.OnEnd");

	USTBuffAction_Log_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MaintenanceVehicle.OnExecute
// (Final, Native, Protected)

void USTBuffAction_MaintenanceVehicle::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MaintenanceVehicle.OnExecute");

	USTBuffAction_MaintenanceVehicle_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ModifyDuration.OnInitialize
// (Native, Protected)

void USTBuffAction_ModifyDuration::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ModifyDuration.OnInitialize");

	USTBuffAction_ModifyDuration_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ModifyProperty.OnExecute
// (Native, Protected)

void USTBuffAction_ModifyProperty::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ModifyProperty.OnExecute");

	USTBuffAction_ModifyProperty_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ModifyProperty.OnEnd
// (Native, Protected)

void USTBuffAction_ModifyProperty::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ModifyProperty.OnEnd");

	USTBuffAction_ModifyProperty_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MPCSpeedScale.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_MPCSpeedScale::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MPCSpeedScale.OnTick");

	USTBuffAction_MPCSpeedScale_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MPCSpeedScale.OnInitialize
// (Native, Protected)

void USTBuffAction_MPCSpeedScale::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MPCSpeedScale.OnInitialize");

	USTBuffAction_MPCSpeedScale_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MPCSpeedScale.OnExecute
// (Native, Protected)

void USTBuffAction_MPCSpeedScale::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MPCSpeedScale.OnExecute");

	USTBuffAction_MPCSpeedScale_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MPCSpeedScale.OnEnd
// (Native, Protected)

void USTBuffAction_MPCSpeedScale::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MPCSpeedScale.OnEnd");

	USTBuffAction_MPCSpeedScale_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MPCSpeedScale.OnDestroy
// (Native, Protected)

void USTBuffAction_MPCSpeedScale::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MPCSpeedScale.OnDestroy");

	USTBuffAction_MPCSpeedScale_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MultiAttrModifier.OnInitialize
// (Native, Protected)

void USTBuffAction_MultiAttrModifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MultiAttrModifier.OnInitialize");

	USTBuffAction_MultiAttrModifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MultiAttrModifier.OnExecute
// (Native, Protected)

void USTBuffAction_MultiAttrModifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MultiAttrModifier.OnExecute");

	USTBuffAction_MultiAttrModifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MultiAttrModifier.OnEnd
// (Native, Protected)

void USTBuffAction_MultiAttrModifier::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MultiAttrModifier.OnEnd");

	USTBuffAction_MultiAttrModifier_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_MultiAttrModifier.GetAttrModify
// (Final, Native, Protected)
// Parameters:
// class UAttrModifyComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAttrModifyComponent* USTBuffAction_MultiAttrModifier::GetAttrModify()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_MultiAttrModifier.GetAttrModify");

	USTBuffAction_MultiAttrModifier_GetAttrModify_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_OverrideSkill.OnExecute
// (Native, Protected)

void USTBuffAction_OverrideSkill::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_OverrideSkill.OnExecute");

	USTBuffAction_OverrideSkill_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_OverrideSkill.OnEnd
// (Native, Protected)

void USTBuffAction_OverrideSkill::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_OverrideSkill.OnEnd");

	USTBuffAction_OverrideSkill_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PetVisible.OnInitialize
// (Native, Protected)

void USTBuffAction_PetVisible::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PetVisible.OnInitialize");

	USTBuffAction_PetVisible_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PetVisible.OnExecute
// (Native, Protected)

void USTBuffAction_PetVisible::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PetVisible.OnExecute");

	USTBuffAction_PetVisible_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PetVisible.OnEnd
// (Native, Protected)

void USTBuffAction_PetVisible::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PetVisible.OnEnd");

	USTBuffAction_PetVisible_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayAkAudio.OnTick
// (Native, Protected)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_PlayAkAudio::OnTick(float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayAkAudio.OnTick");

	USTBuffAction_PlayAkAudio_OnTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayAkAudio.OnInitialize
// (Native, Protected)

void USTBuffAction_PlayAkAudio::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayAkAudio.OnInitialize");

	USTBuffAction_PlayAkAudio_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayAkAudio.OnExecute
// (Native, Protected)

void USTBuffAction_PlayAkAudio::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayAkAudio.OnExecute");

	USTBuffAction_PlayAkAudio_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayAkAudio.OnEnd
// (Native, Protected)

void USTBuffAction_PlayAkAudio::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayAkAudio.OnEnd");

	USTBuffAction_PlayAkAudio_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayEmote.OnExecute
// (Native, Protected)

void USTBuffAction_PlayEmote::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayEmote.OnExecute");

	USTBuffAction_PlayEmote_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayerInvincibleEffect.OnResetExecute
// (Native, Protected)
// Parameters:
// bool                           IgnoreEnd                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_PlayerInvincibleEffect::OnResetExecute(bool IgnoreEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayerInvincibleEffect.OnResetExecute");

	USTBuffAction_PlayerInvincibleEffect_OnResetExecute_Params params;
	params.IgnoreEnd = IgnoreEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayerInvincibleEffect.OnInitialize
// (Native, Protected)

void USTBuffAction_PlayerInvincibleEffect::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayerInvincibleEffect.OnInitialize");

	USTBuffAction_PlayerInvincibleEffect_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayerInvincibleEffect.OnExecute
// (Native, Protected)

void USTBuffAction_PlayerInvincibleEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayerInvincibleEffect.OnExecute");

	USTBuffAction_PlayerInvincibleEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayerInvincibleEffect.OnEnd
// (Native, Protected)

void USTBuffAction_PlayerInvincibleEffect::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayerInvincibleEffect.OnEnd");

	USTBuffAction_PlayerInvincibleEffect_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_PlayMontage::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage.OnTick");

	USTBuffAction_PlayMontage_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage.OnInitialize
// (Native, Protected)

void USTBuffAction_PlayMontage::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage.OnInitialize");

	USTBuffAction_PlayMontage_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage.OnExecute
// (Native, Protected)

void USTBuffAction_PlayMontage::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage.OnExecute");

	USTBuffAction_PlayMontage_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage.OnEnd
// (Native, Protected)

void USTBuffAction_PlayMontage::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage.OnEnd");

	USTBuffAction_PlayMontage_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_PlayMontage_Pose::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose.OnTick");

	USTBuffAction_PlayMontage_Pose_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose.OnInitialize
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose.OnInitialize");

	USTBuffAction_PlayMontage_Pose_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose.OnExecute
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose.OnExecute");

	USTBuffAction_PlayMontage_Pose_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose.OnEnd
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose.OnEnd");

	USTBuffAction_PlayMontage_Pose_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_PlayMontage_Pose_IsArmed::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnTick");

	USTBuffAction_PlayMontage_Pose_IsArmed_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnInitialize
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose_IsArmed::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnInitialize");

	USTBuffAction_PlayMontage_Pose_IsArmed_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnExecute
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose_IsArmed::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnExecute");

	USTBuffAction_PlayMontage_Pose_IsArmed_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnEnd
// (Native, Protected)

void USTBuffAction_PlayMontage_Pose_IsArmed::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayMontage_Pose_IsArmed.OnEnd");

	USTBuffAction_PlayMontage_Pose_IsArmed_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayParticleScreenEffect.OnExecute
// (Native, Protected)

void USTBuffAction_PlayParticleScreenEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayParticleScreenEffect.OnExecute");

	USTBuffAction_PlayParticleScreenEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayParticleScreenEffect.OnEnd
// (Native, Protected)

void USTBuffAction_PlayParticleScreenEffect::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayParticleScreenEffect.OnEnd");

	USTBuffAction_PlayParticleScreenEffect_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayScreenAppearance.OnExecute
// (Native, Protected)

void USTBuffAction_PlayScreenAppearance::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayScreenAppearance.OnExecute");

	USTBuffAction_PlayScreenAppearance_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayScreenAppearance.OnEnd
// (Native, Protected)

void USTBuffAction_PlayScreenAppearance::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayScreenAppearance.OnEnd");

	USTBuffAction_PlayScreenAppearance_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayScreenEffect.OnExecute
// (Native, Protected)

void USTBuffAction_PlayScreenEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayScreenEffect.OnExecute");

	USTBuffAction_PlayScreenEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_PlayScreenEffect.OnEnd
// (Native, Protected)

void USTBuffAction_PlayScreenEffect::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_PlayScreenEffect.OnEnd");

	USTBuffAction_PlayScreenEffect_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Recovery.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_Recovery::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Recovery.OnTick");

	USTBuffAction_Recovery_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Recovery.OnExecute
// (Native, Protected)

void USTBuffAction_Recovery::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Recovery.OnExecute");

	USTBuffAction_Recovery_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_Recovery.OnEnd
// (Native, Protected)

void USTBuffAction_Recovery::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_Recovery.OnEnd");

	USTBuffAction_Recovery_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceAvatarMaterial.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_ReplaceAvatarMaterial::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceAvatarMaterial.OnTick");

	USTBuffAction_ReplaceAvatarMaterial_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceAvatarMaterial.OnInitialize
// (Native, Protected)

void USTBuffAction_ReplaceAvatarMaterial::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceAvatarMaterial.OnInitialize");

	USTBuffAction_ReplaceAvatarMaterial_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceAvatarMaterial.OnEnd
// (Native, Protected)

void USTBuffAction_ReplaceAvatarMaterial::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceAvatarMaterial.OnEnd");

	USTBuffAction_ReplaceAvatarMaterial_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceCharAnim.OnExecute
// (Native, Protected)

void USTBuffAction_ReplaceCharAnim::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceCharAnim.OnExecute");

	USTBuffAction_ReplaceCharAnim_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceCharAnim.OnEnd
// (Native, Protected)

void USTBuffAction_ReplaceCharAnim::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceCharAnim.OnEnd");

	USTBuffAction_ReplaceCharAnim_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceCharAvatarAnim.OnExecute
// (Native, Protected)

void USTBuffAction_ReplaceCharAvatarAnim::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceCharAvatarAnim.OnExecute");

	USTBuffAction_ReplaceCharAvatarAnim_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_ReplaceCharAvatarAnim.OnEnd
// (Native, Protected)

void USTBuffAction_ReplaceCharAvatarAnim::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_ReplaceCharAvatarAnim.OnEnd");

	USTBuffAction_ReplaceCharAvatarAnim_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetEyeEffect.OnExecute
// (Native, Protected)

void USTBuffAction_SetEyeEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetEyeEffect.OnExecute");

	USTBuffAction_SetEyeEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetEyeEffect.OnEnd
// (Native, Protected)

void USTBuffAction_SetEyeEffect::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetEyeEffect.OnEnd");

	USTBuffAction_SetEyeEffect_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameter.SetMatParameter
// (Final, Native, Protected)
// Parameters:
// class UMeshComponent*          MeshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FCustomMatConfig        Config                         (Parm)
// bool                           End                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            MeshConfigIndex                (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SetMaterialParameter::SetMatParameter(class UMeshComponent* MeshComp, const struct FCustomMatConfig& Config, bool End, int MeshConfigIndex)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameter.SetMatParameter");

	USTBuffAction_SetMaterialParameter_SetMatParameter_Params params;
	params.MeshComp = MeshComp;
	params.Config = Config;
	params.End = End;
	params.MeshConfigIndex = MeshConfigIndex;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameter.OnExecute
// (Native, Protected)

void USTBuffAction_SetMaterialParameter::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameter.OnExecute");

	USTBuffAction_SetMaterialParameter_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameter.OnEnd
// (Native, Protected)

void USTBuffAction_SetMaterialParameter::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameter.OnEnd");

	USTBuffAction_SetMaterialParameter_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.SetMatParameterInterp
// (Final, Native, Protected)
// Parameters:
// class UMeshComponent*          MeshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FCustomMatConfig        Config                         (Parm)
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SetMaterialParameterInterp::SetMatParameterInterp(class UMeshComponent* MeshComp, const struct FCustomMatConfig& Config, float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.SetMatParameterInterp");

	USTBuffAction_SetMaterialParameterInterp_SetMatParameterInterp_Params params;
	params.MeshComp = MeshComp;
	params.Config = Config;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.SetMatParameter
// (Final, Native, Protected)
// Parameters:
// class UMeshComponent*          MeshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FCustomMatConfig        Config                         (Parm)
// bool                           End                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            MeshConfigIndex                (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SetMaterialParameterInterp::SetMatParameter(class UMeshComponent* MeshComp, const struct FCustomMatConfig& Config, bool End, int MeshConfigIndex)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.SetMatParameter");

	USTBuffAction_SetMaterialParameterInterp_SetMatParameter_Params params;
	params.MeshComp = MeshComp;
	params.Config = Config;
	params.End = End;
	params.MeshConfigIndex = MeshConfigIndex;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.SaveMatParameter
// (Final, Native, Protected)
// Parameters:
// class UMeshComponent*          MeshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FCustomMatConfig        Config                         (Parm)

void USTBuffAction_SetMaterialParameterInterp::SaveMatParameter(class UMeshComponent* MeshComp, const struct FCustomMatConfig& Config)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.SaveMatParameter");

	USTBuffAction_SetMaterialParameterInterp_SaveMatParameter_Params params;
	params.MeshComp = MeshComp;
	params.Config = Config;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SetMaterialParameterInterp::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.OnTick");

	USTBuffAction_SetMaterialParameterInterp_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.OnExecute
// (Native, Protected)

void USTBuffAction_SetMaterialParameterInterp::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.OnExecute");

	USTBuffAction_SetMaterialParameterInterp_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMaterialParameterInterp.OnEnd
// (Native, Protected)

void USTBuffAction_SetMaterialParameterInterp::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMaterialParameterInterp.OnEnd");

	USTBuffAction_SetMaterialParameterInterp_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMoveable.OnExecute
// (Native, Protected)

void USTBuffAction_SetMoveable::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMoveable.OnExecute");

	USTBuffAction_SetMoveable_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetMoveable.OnEnd
// (Native, Protected)

void USTBuffAction_SetMoveable::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetMoveable.OnEnd");

	USTBuffAction_SetMoveable_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetRecoveryPrompt.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SetRecoveryPrompt::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetRecoveryPrompt.OnTick");

	USTBuffAction_SetRecoveryPrompt_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetRecoveryPrompt.OnExecute
// (Native, Protected)

void USTBuffAction_SetRecoveryPrompt::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetRecoveryPrompt.OnExecute");

	USTBuffAction_SetRecoveryPrompt_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SetRecoveryPrompt.OnEnd
// (Native, Protected)

void USTBuffAction_SetRecoveryPrompt::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SetRecoveryPrompt.OnEnd");

	USTBuffAction_SetRecoveryPrompt_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SpawnActor.OnInitialize
// (Native, Protected)

void USTBuffAction_SpawnActor::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SpawnActor.OnInitialize");

	USTBuffAction_SpawnActor_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SpawnActor.OnExecute
// (Native, Protected)

void USTBuffAction_SpawnActor::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SpawnActor.OnExecute");

	USTBuffAction_SpawnActor_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SpawnActor.OnEnd
// (Native, Protected)

void USTBuffAction_SpawnActor::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SpawnActor.OnEnd");

	USTBuffAction_SpawnActor_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_SpawnActor.AsyncLoadFinish
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_SpawnActor::AsyncLoadFinish(class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_SpawnActor.AsyncLoadFinish");

	USTBuffAction_SpawnActor_AsyncLoadFinish_Params params;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_StunGrenade.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_StunGrenade::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_StunGrenade.OnTick");

	USTBuffAction_StunGrenade_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_StunGrenade.OnExecute
// (Native, Protected)

void USTBuffAction_StunGrenade::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_StunGrenade.OnExecute");

	USTBuffAction_StunGrenade_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_StunGrenade.OnEnd
// (Native, Protected)

void USTBuffAction_StunGrenade::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_StunGrenade.OnEnd");

	USTBuffAction_StunGrenade_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleAddImpulse.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_VehicleAddImpulse::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleAddImpulse.OnTick");

	USTBuffAction_VehicleAddImpulse_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleAddImpulse.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleAddImpulse::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleAddImpulse.OnExecute");

	USTBuffAction_VehicleAddImpulse_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleAddImpulse.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleAddImpulse::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleAddImpulse.OnEnd");

	USTBuffAction_VehicleAddImpulse_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleBoostingEffect.OnInitialize
// (Native, Protected)

void USTBuffAction_VehicleBoostingEffect::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleBoostingEffect.OnInitialize");

	USTBuffAction_VehicleBoostingEffect_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleBoostingEffect.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleBoostingEffect::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleBoostingEffect.OnExecute");

	USTBuffAction_VehicleBoostingEffect_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleBoostingEffect.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleBoostingEffect::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleBoostingEffect.OnEnd");

	USTBuffAction_VehicleBoostingEffect_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleDisablePhysicsTimer.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleDisablePhysicsTimer::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleDisablePhysicsTimer.OnExecute");

	USTBuffAction_VehicleDisablePhysicsTimer_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleDisablePhysicsTimer.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleDisablePhysicsTimer::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleDisablePhysicsTimer.OnEnd");

	USTBuffAction_VehicleDisablePhysicsTimer_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleEngineSetup.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_VehicleEngineSetup::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleEngineSetup.OnTick");

	USTBuffAction_VehicleEngineSetup_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleEngineSetup.OnInitialize
// (Native, Protected)

void USTBuffAction_VehicleEngineSetup::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleEngineSetup.OnInitialize");

	USTBuffAction_VehicleEngineSetup_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleEngineSetup.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleEngineSetup::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleEngineSetup.OnExecute");

	USTBuffAction_VehicleEngineSetup_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleEngineSetup.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleEngineSetup::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleEngineSetup.OnEnd");

	USTBuffAction_VehicleEngineSetup_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleFastStart.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_VehicleFastStart::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleFastStart.OnTick");

	USTBuffAction_VehicleFastStart_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleFastStart.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleFastStart::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleFastStart.OnExecute");

	USTBuffAction_VehicleFastStart_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleFastStart.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleFastStart::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleFastStart.OnEnd");

	USTBuffAction_VehicleFastStart_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleSetLinearVelocity.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_VehicleSetLinearVelocity::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleSetLinearVelocity.OnTick");

	USTBuffAction_VehicleSetLinearVelocity_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleSetLinearVelocity.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleSetLinearVelocity::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleSetLinearVelocity.OnExecute");

	USTBuffAction_VehicleSetLinearVelocity_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleSetLinearVelocity.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleSetLinearVelocity::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleSetLinearVelocity.OnEnd");

	USTBuffAction_VehicleSetLinearVelocity_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleTriggerFastStart.OnTick
// (Native, Protected)
// Parameters:
// float                          DetalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_VehicleTriggerFastStart::OnTick(float DetalTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleTriggerFastStart.OnTick");

	USTBuffAction_VehicleTriggerFastStart_OnTick_Params params;
	params.DetalTime = DetalTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleTriggerFastStart.OnExecute
// (Native, Protected)

void USTBuffAction_VehicleTriggerFastStart::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleTriggerFastStart.OnExecute");

	USTBuffAction_VehicleTriggerFastStart_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_VehicleTriggerFastStart.OnEnd
// (Native, Protected)

void USTBuffAction_VehicleTriggerFastStart::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_VehicleTriggerFastStart.OnEnd");

	USTBuffAction_VehicleTriggerFastStart_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.UndoAllWeaponAttrModifier
// (Final, Native, Public)

void USTBuffAction_WeaponAttrModifier::UndoAllWeaponAttrModifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.UndoAllWeaponAttrModifier");

	USTBuffAction_WeaponAttrModifier_UndoAllWeaponAttrModifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnResetExecute
// (Native, Protected)
// Parameters:
// bool                           IgnoreEnd                      (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_WeaponAttrModifier::OnResetExecute(bool IgnoreEnd)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnResetExecute");

	USTBuffAction_WeaponAttrModifier_OnResetExecute_Params params;
	params.IgnoreEnd = IgnoreEnd;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnNewWeapon
// (Final, Native, Public)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_WeaponAttrModifier::OnNewWeapon(class ASTExtraWeapon* Weapon)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnNewWeapon");

	USTBuffAction_WeaponAttrModifier_OnNewWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnInitialize
// (Native, Protected)

void USTBuffAction_WeaponAttrModifier::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnInitialize");

	USTBuffAction_WeaponAttrModifier_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnExecute
// (Native, Protected)

void USTBuffAction_WeaponAttrModifier::OnExecute()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnExecute");

	USTBuffAction_WeaponAttrModifier_OnExecute_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnEnd
// (Native, Protected)

void USTBuffAction_WeaponAttrModifier::OnEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnEnd");

	USTBuffAction_WeaponAttrModifier_OnEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.OnDestroy
// (Native, Protected)

void USTBuffAction_WeaponAttrModifier::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.OnDestroy");

	USTBuffAction_WeaponAttrModifier_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.IsValidWeapon
// (Final, Native, Public)
// Parameters:
// class ASTExtraShootWeapon*     ShootWeapon                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffAction_WeaponAttrModifier::IsValidWeapon(class ASTExtraShootWeapon* ShootWeapon)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.IsValidWeapon");

	USTBuffAction_WeaponAttrModifier_IsValidWeapon_Params params;
	params.ShootWeapon = ShootWeapon;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffAction_WeaponAttrModifier.DoWeaponAttrModifier
// (Final, Native, Public)
// Parameters:
// class ASTExtraShootWeapon*     ShootWeapon                    (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffAction_WeaponAttrModifier::DoWeaponAttrModifier(class ASTExtraShootWeapon* ShootWeapon)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.DoWeaponAttrModifier");

	USTBuffAction_WeaponAttrModifier_DoWeaponAttrModifier_Params params;
	params.ShootWeapon = ShootWeapon;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.DoAllWeaponAttrModifier
// (Final, Native, Public)

void USTBuffAction_WeaponAttrModifier::DoAllWeaponAttrModifier()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.DoAllWeaponAttrModifier");

	USTBuffAction_WeaponAttrModifier_DoAllWeaponAttrModifier_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffAction_WeaponAttrModifier.AfterAttrModify
// (Final, Native, Public, HasOutParms)
// Parameters:
// class ASTExtraShootWeapon*     ShootWeapon                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          OldValue                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FBAWeaponAttrModifyConfig AttrModifyCfg                  (ConstParm, Parm, OutParm, ReferenceParm)

void USTBuffAction_WeaponAttrModifier::AfterAttrModify(class ASTExtraShootWeapon* ShootWeapon, float OldValue, float NewValue, const struct FBAWeaponAttrModifyConfig& AttrModifyCfg)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffAction_WeaponAttrModifier.AfterAttrModify");

	USTBuffAction_WeaponAttrModifier_AfterAttrModify_Params params;
	params.ShootWeapon = ShootWeapon;
	params.OldValue = OldValue;
	params.NewValue = NewValue;
	params.AttrModifyCfg = AttrModifyCfg;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_BlackboardValueComparison.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_BlackboardValueComparison::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_BlackboardValueComparison.CheckIsTrue");

	USTBuffCondition_BlackboardValueComparison_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_BuffLevel.OnInitialize
// (Native, Public)

void USTBuffCondition_BuffLevel::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_BuffLevel.OnInitialize");

	USTBuffCondition_BuffLevel_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_BuffLevel.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_BuffLevel::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_BuffLevel.CheckIsTrue");

	USTBuffCondition_BuffLevel_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_Drowning.OnInitialize
// (Native, Protected)

void USTBuffCondition_Drowning::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_Drowning.OnInitialize");

	USTBuffCondition_Drowning_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_Drowning.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_Drowning::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_Drowning.CheckIsTrue");

	USTBuffCondition_Drowning_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_HeightGround.OnInitialize
// (Native, Protected)

void USTBuffCondition_HeightGround::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_HeightGround.OnInitialize");

	USTBuffCondition_HeightGround_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_HeightGround.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_HeightGround::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_HeightGround.CheckIsTrue");

	USTBuffCondition_HeightGround_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_InPoisonFog.OnInitialize
// (Native, Protected)

void USTBuffCondition_InPoisonFog::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_InPoisonFog.OnInitialize");

	USTBuffCondition_InPoisonFog_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_InPoisonFog.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_InPoisonFog::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_InPoisonFog.CheckIsTrue");

	USTBuffCondition_InPoisonFog_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsAI.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsAI::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsAI.CheckIsTrue");

	USTBuffCondition_IsAI_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsHealthOn.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsHealthOn::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHealthOn.OnInitialize");

	USTBuffCondition_IsHealthOn_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHealthOn.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsHealthOn::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHealthOn.CheckIsTrue");

	USTBuffCondition_IsHealthOn_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsHit.OnTakeDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsHit::OnTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.OnTakeDamageEvent");

	USTBuffCondition_IsHit_OnTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.OnPushDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsHit::OnPushDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Causer, class AActor* Victim, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.OnPushDamageEvent");

	USTBuffCondition_IsHit_OnPushDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Causer = Causer;
	params.Victim = Victim;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.OnPostTakeDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsHit::OnPostTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AController* Controller, class AActor* DamageCauser, int DamageType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.OnPostTakeDamageEvent");

	USTBuffCondition_IsHit_OnPostTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Controller = Controller;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsHit::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.OnInitialize");

	USTBuffCondition_IsHit_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsHit::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.OnDestroy");

	USTBuffCondition_IsHit_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.IsFilterBullet
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsHit::IsFilterBullet(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.IsFilterBullet");

	USTBuffCondition_IsHit_IsFilterBullet_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsHit.HandleDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsHit::HandleDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.HandleDamageEvent");

	USTBuffCondition_IsHit_HandleDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsHit.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsHit::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsHit.CheckIsTrue");

	USTBuffCondition_IsHit_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsInDoor.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsInDoor::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsInDoor.OnInitialize");

	USTBuffCondition_IsInDoor_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsInDoor.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsInDoor::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsInDoor.CheckIsTrue");

	USTBuffCondition_IsInDoor_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKeepInState.OnTakeDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKeepInState::OnTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AController* Controller, class AActor* DamageCauser, int DamageType)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.OnTakeDamageEvent");

	USTBuffCondition_IsKeepInState_OnTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Controller = Controller;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKeepInState.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsKeepInState::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.OnInitialize");

	USTBuffCondition_IsKeepInState_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKeepInState.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsKeepInState::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.OnDestroy");

	USTBuffCondition_IsKeepInState_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKeepInState.OnCharacterTakeDamageEvent
// (Final, Native, Protected)
// Parameters:
// class ASTExtraBaseCharacter*   TakeDamageChar                 (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKeepInState::OnCharacterTakeDamageEvent(class ASTExtraBaseCharacter* TakeDamageChar)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.OnCharacterTakeDamageEvent");

	USTBuffCondition_IsKeepInState_OnCharacterTakeDamageEvent_Params params;
	params.TakeDamageChar = TakeDamageChar;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKeepInState.IsInState
// (Final, Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKeepInState::IsInState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.IsInState");

	USTBuffCondition_IsKeepInState_IsInState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKeepInState.HandlePlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// EPawnState                     NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKeepInState::HandlePlayerStateChanged(EPawnState NewState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.HandlePlayerStateChanged");

	USTBuffCondition_IsKeepInState_HandlePlayerStateChanged_Params params;
	params.NewState = NewState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKeepInState.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKeepInState::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKeepInState.CheckIsTrue");

	USTBuffCondition_IsKeepInState_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKill.OnTakeDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKill::OnTakeDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.OnTakeDamageEvent");

	USTBuffCondition_IsKill_OnTakeDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKill.OnPushDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKill::OnPushDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Causer, class AActor* Victim, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.OnPushDamageEvent");

	USTBuffCondition_IsKill_OnPushDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Causer = Causer;
	params.Victim = Victim;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKill.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsKill::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.OnInitialize");

	USTBuffCondition_IsKill_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKill.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsKill::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.OnDestroy");

	USTBuffCondition_IsKill_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKill.IsFilterGun
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKill::IsFilterGun(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.IsFilterGun");

	USTBuffCondition_IsKill_IsFilterGun_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKill.IsFilterBullet
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKill::IsFilterBullet(class AActor* Shooter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.IsFilterBullet");

	USTBuffCondition_IsKill_IsFilterBullet_Params params;
	params.Shooter = Shooter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKill.HandleDamageEvent
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKill::HandleDamageEvent(float Damage, const struct FDamageEvent& DamageEvent, class AActor* Victim, class AActor* Causer)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.HandleDamageEvent");

	USTBuffCondition_IsKill_HandleDamageEvent_Params params;
	params.Damage = Damage;
	params.DamageEvent = DamageEvent;
	params.Victim = Victim;
	params.Causer = Causer;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKill.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKill::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKill.CheckIsTrue");

	USTBuffCondition_IsKill_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsKillSomeOne.OnRealDeathEvent
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKillSomeOne::OnRealDeathEvent(class AActor* Victim, class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKillSomeOne.OnRealDeathEvent");

	USTBuffCondition_IsKillSomeOne_OnRealDeathEvent_Params params;
	params.Victim = Victim;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKillSomeOne.OnNearDeathEvent
// (Final, Native, Protected)
// Parameters:
// class APawn*                   Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Causer                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsKillSomeOne::OnNearDeathEvent(class APawn* Victim, class AController* Causer)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKillSomeOne.OnNearDeathEvent");

	USTBuffCondition_IsKillSomeOne_OnNearDeathEvent_Params params;
	params.Victim = Victim;
	params.Causer = Causer;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKillSomeOne.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsKillSomeOne::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKillSomeOne.OnInitialize");

	USTBuffCondition_IsKillSomeOne_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKillSomeOne.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsKillSomeOne::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKillSomeOne.OnDestroy");

	USTBuffCondition_IsKillSomeOne_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsKillSomeOne.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsKillSomeOne::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsKillSomeOne.CheckIsTrue");

	USTBuffCondition_IsKillSomeOne_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsLanded.OnMovementChanged
// (Final, Native, Protected)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMovementMode> PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PreviousCustomMode             (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsLanded::OnMovementChanged(class ACharacter* Character, TEnumAsByte<enum EMovementMode> PrevMovementMode, unsigned char PreviousCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsLanded.OnMovementChanged");

	USTBuffCondition_IsLanded_OnMovementChanged_Params params;
	params.Character = Character;
	params.PrevMovementMode = PrevMovementMode;
	params.PreviousCustomMode = PreviousCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsLanded.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsLanded::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsLanded.OnInitialize");

	USTBuffCondition_IsLanded_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsLanded.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsLanded::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsLanded.OnDestroy");

	USTBuffCondition_IsLanded_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsLanded.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsLanded::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsLanded.CheckIsTrue");

	USTBuffCondition_IsLanded_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsMoving.OnInitialize
// (Native, Public)

void USTBuffCondition_IsMoving::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsMoving.OnInitialize");

	USTBuffCondition_IsMoving_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsMoving.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsMoving::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsMoving.CheckIsTrue");

	USTBuffCondition_IsMoving_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsNearDeath.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsNearDeath::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsNearDeath.OnInitialize");

	USTBuffCondition_IsNearDeath_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsNearDeath.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsNearDeath::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsNearDeath.OnDestroy");

	USTBuffCondition_IsNearDeath_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsNearDeath.IsEnterNearDeath
// (Final, Native, Protected)
// Parameters:
// bool                           IsEnter                        (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsNearDeath::IsEnterNearDeath(bool IsEnter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsNearDeath.IsEnterNearDeath");

	USTBuffCondition_IsNearDeath_IsEnterNearDeath_Params params;
	params.IsEnter = IsEnter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsNearDeath.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsNearDeath::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsNearDeath.CheckIsTrue");

	USTBuffCondition_IsNearDeath_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsOnVehicle.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsOnVehicle::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnVehicle.OnInitialize");

	USTBuffCondition_IsOnVehicle_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsOnVehicle.OnEnterVehicle
// (Final, Native, Protected)
// Parameters:
// bool                           IsEnter                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsOnVehicle::OnEnterVehicle(bool IsEnter, class AActor* Vehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnVehicle.OnEnterVehicle");

	USTBuffCondition_IsOnVehicle_OnEnterVehicle_Params params;
	params.IsEnter = IsEnter;
	params.Vehicle = Vehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsOnVehicle.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsOnVehicle::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnVehicle.OnDestroy");

	USTBuffCondition_IsOnVehicle_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsOnVehicle.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsOnVehicle::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnVehicle.CheckIsTrue");

	USTBuffCondition_IsOnVehicle_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsOnWater.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsOnWater::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnWater.OnInitialize");

	USTBuffCondition_IsOnWater_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsOnWater.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsOnWater::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnWater.OnDestroy");

	USTBuffCondition_IsOnWater_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsOnWater.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsOnWater::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsOnWater.CheckIsTrue");

	USTBuffCondition_IsOnWater_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsPlayer.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsPlayer::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsPlayer.OnInitialize");

	USTBuffCondition_IsPlayer_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsPlayer.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsPlayer::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsPlayer.OnDestroy");

	USTBuffCondition_IsPlayer_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsPlayer.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsPlayer::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsPlayer.CheckIsTrue");

	USTBuffCondition_IsPlayer_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsRescueFinish.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsRescueFinish::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueFinish.OnInitialize");

	USTBuffCondition_IsRescueFinish_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueFinish.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsRescueFinish::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueFinish.OnDestroy");

	USTBuffCondition_IsRescueFinish_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueFinish.IsRescueFinish
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*         BuffComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            InstID                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsRescueFinish::IsRescueFinish(class UActorComponent* BuffComponent, int InstID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueFinish.IsRescueFinish");

	USTBuffCondition_IsRescueFinish_IsRescueFinish_Params params;
	params.BuffComponent = BuffComponent;
	params.InstID = InstID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueFinish.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsRescueFinish::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueFinish.CheckIsTrue");

	USTBuffCondition_IsRescueFinish_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsRescueOther.OnRescueOther
// (Final, Native, Protected)
// Parameters:
// class APawn*                   SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNearDeath                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            TypeId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Killer                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsRescueOther::OnRescueOther(class APawn* SelfActor, class AActor* DamageCauser, bool bNearDeath, int TypeId, class AActor* Killer)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueOther.OnRescueOther");

	USTBuffCondition_IsRescueOther_OnRescueOther_Params params;
	params.SelfActor = SelfActor;
	params.DamageCauser = DamageCauser;
	params.bNearDeath = bNearDeath;
	params.TypeId = TypeId;
	params.Killer = Killer;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueOther.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsRescueOther::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueOther.OnInitialize");

	USTBuffCondition_IsRescueOther_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueOther.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsRescueOther::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueOther.OnDestroy");

	USTBuffCondition_IsRescueOther_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsRescueOther.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsRescueOther::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsRescueOther.CheckIsTrue");

	USTBuffCondition_IsRescueOther_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsStartRescue.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsStartRescue::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsStartRescue.OnInitialize");

	USTBuffCondition_IsStartRescue_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsStartRescue.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsStartRescue::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsStartRescue.OnDestroy");

	USTBuffCondition_IsStartRescue_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsStartRescue.IsStartRescue
// (Final, Native, Protected)
// Parameters:
// class AActor*                  BeRescue                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsStart                       (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsStartRescue::IsStartRescue(class AActor* BeRescue, bool bIsStart)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsStartRescue.IsStartRescue");

	USTBuffCondition_IsStartRescue_IsStartRescue_Params params;
	params.BeRescue = BeRescue;
	params.bIsStart = bIsStart;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsStartRescue.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsStartRescue::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsStartRescue.CheckIsTrue");

	USTBuffCondition_IsStartRescue_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsVisible.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsVisible::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsVisible.CheckIsTrue");

	USTBuffCondition_IsVisible_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_IsWeaponEquip.OnInitialize
// (Native, Protected)

void USTBuffCondition_IsWeaponEquip::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsWeaponEquip.OnInitialize");

	USTBuffCondition_IsWeaponEquip_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsWeaponEquip.OnDestroy
// (Native, Protected)

void USTBuffCondition_IsWeaponEquip::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsWeaponEquip.OnDestroy");

	USTBuffCondition_IsWeaponEquip_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsWeaponEquip.IsUnEquipWeapon
// (Final, Native, Protected)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsWeaponEquip::IsUnEquipWeapon(class ASTExtraWeapon* Weapon)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsWeaponEquip.IsUnEquipWeapon");

	USTBuffCondition_IsWeaponEquip_IsUnEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsWeaponEquip.IsEquipWeapon
// (Final, Native, Protected)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum ESurviveWeaponPropSlot> Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_IsWeaponEquip::IsEquipWeapon(class ASTExtraWeapon* Weapon, TEnumAsByte<enum ESurviveWeaponPropSlot> Slot)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsWeaponEquip.IsEquipWeapon");

	USTBuffCondition_IsWeaponEquip_IsEquipWeapon_Params params;
	params.Weapon = Weapon;
	params.Slot = Slot;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_IsWeaponEquip.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_IsWeaponEquip::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_IsWeaponEquip.CheckIsTrue");

	USTBuffCondition_IsWeaponEquip_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_ItemOperation.OnInitialize
// (Native, Protected)

void USTBuffCondition_ItemOperation::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_ItemOperation.OnInitialize");

	USTBuffCondition_ItemOperation_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_ItemOperation.OnDestroy
// (Native, Protected)

void USTBuffCondition_ItemOperation::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_ItemOperation.OnDestroy");

	USTBuffCondition_ItemOperation_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_ItemOperation.HandleItemOperate
// (Final, Native, Protected)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// EBattleItemOperationType       InOperationType                (Parm, ZeroConstructor, IsPlainOldData)
// int                            Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_ItemOperation::HandleItemOperate(const struct FItemDefineID& DefineID, EBattleItemOperationType InOperationType, int Reason)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_ItemOperation.HandleItemOperate");

	USTBuffCondition_ItemOperation_HandleItemOperate_Params params;
	params.DefineID = DefineID;
	params.InOperationType = InOperationType;
	params.Reason = Reason;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_ItemOperation.HandleItemCountChanged
// (Final, Native, Protected)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// EBattleItemOperationType       InOperationType                (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_ItemOperation::HandleItemCountChanged(const struct FItemDefineID& DefineID, EBattleItemOperationType InOperationType, int Count)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_ItemOperation.HandleItemCountChanged");

	USTBuffCondition_ItemOperation_HandleItemCountChanged_Params params;
	params.DefineID = DefineID;
	params.InOperationType = InOperationType;
	params.Count = Count;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_ItemOperation.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_ItemOperation::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_ItemOperation.CheckIsTrue");

	USTBuffCondition_ItemOperation_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_LayerEqual.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_LayerEqual::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_LayerEqual.CheckIsTrue");

	USTBuffCondition_LayerEqual_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_LayerMax.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_LayerMax::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_LayerMax.CheckIsTrue");

	USTBuffCondition_LayerMax_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_LayerSpecific.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_LayerSpecific::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_LayerSpecific.CheckIsTrue");

	USTBuffCondition_LayerSpecific_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_MovementMode.OnMovementChanged
// (Final, Native, Public)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<enum EMovementMode> PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PreviousCustomMode             (Parm, ZeroConstructor, IsPlainOldData)

void USTBuffCondition_MovementMode::OnMovementChanged(class ACharacter* Character, TEnumAsByte<enum EMovementMode> PrevMovementMode, unsigned char PreviousCustomMode)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_MovementMode.OnMovementChanged");

	USTBuffCondition_MovementMode_OnMovementChanged_Params params;
	params.Character = Character;
	params.PrevMovementMode = PrevMovementMode;
	params.PreviousCustomMode = PreviousCustomMode;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_MovementMode.OnInitialize
// (Native, Public)

void USTBuffCondition_MovementMode::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_MovementMode.OnInitialize");

	USTBuffCondition_MovementMode_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_MovementMode.OnDestroy
// (Native, Public)

void USTBuffCondition_MovementMode::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_MovementMode.OnDestroy");

	USTBuffCondition_MovementMode_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_MovementMode.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_MovementMode::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_MovementMode.CheckIsTrue");

	USTBuffCondition_MovementMode_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_PlayerState.OnInitialize
// (Native, Public)

void USTBuffCondition_PlayerState::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_PlayerState.OnInitialize");

	USTBuffCondition_PlayerState_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_PlayerState.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_PlayerState::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_PlayerState.CheckIsTrue");

	USTBuffCondition_PlayerState_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_PropertyLimit.OnInitialize
// (Native, Public)

void USTBuffCondition_PropertyLimit::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_PropertyLimit.OnInitialize");

	USTBuffCondition_PropertyLimit_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_PropertyLimit.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_PropertyLimit::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_PropertyLimit.CheckIsTrue");

	USTBuffCondition_PropertyLimit_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_TeammateDistance.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_TeammateDistance::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_TeammateDistance.CheckIsTrue");

	USTBuffCondition_TeammateDistance_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_Timer.OnInitialize
// (Native, Protected)

void USTBuffCondition_Timer::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_Timer.OnInitialize");

	USTBuffCondition_Timer_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_Timer.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_Timer::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_Timer.CheckIsTrue");

	USTBuffCondition_Timer_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_VehicleAvatarChanged.OnInitialize
// (Native, Protected)

void USTBuffCondition_VehicleAvatarChanged::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_VehicleAvatarChanged.OnInitialize");

	USTBuffCondition_VehicleAvatarChanged_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_VehicleAvatarChanged.OnDestroy
// (Native, Protected)

void USTBuffCondition_VehicleAvatarChanged::OnDestroy()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_VehicleAvatarChanged.OnDestroy");

	USTBuffCondition_VehicleAvatarChanged_OnDestroy_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_VehicleAvatarChanged.OnAvatarChanged
// (Final, Native, Protected)

void USTBuffCondition_VehicleAvatarChanged::OnAvatarChanged()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_VehicleAvatarChanged.OnAvatarChanged");

	USTBuffCondition_VehicleAvatarChanged_OnAvatarChanged_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_VehicleAvatarChanged.CheckIsTrue
// (Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_VehicleAvatarChanged::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_VehicleAvatarChanged.CheckIsTrue");

	USTBuffCondition_VehicleAvatarChanged_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_WeaponPropSlot.OnInitialize
// (Native, Public)

void USTBuffCondition_WeaponPropSlot::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_WeaponPropSlot.OnInitialize");

	USTBuffCondition_WeaponPropSlot_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_WeaponPropSlot.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_WeaponPropSlot::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_WeaponPropSlot.CheckIsTrue");

	USTBuffCondition_WeaponPropSlot_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STBuffCondition_WeaponType.OnInitialize
// (Native, Public)

void USTBuffCondition_WeaponType::OnInitialize()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_WeaponType.OnInitialize");

	USTBuffCondition_WeaponType_OnInitialize_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STBuffCondition_WeaponType.CheckIsTrue
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTBuffCondition_WeaponType::CheckIsTrue()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STBuffCondition_WeaponType.CheckIsTrue");

	USTBuffCondition_WeaponType_CheckIsTrue_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.STDestructionSubSystem.SetDestructibleEnable
// (Final, Native, Public)
// Parameters:
// class ASTExtraGameStateBase*   GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::SetDestructibleEnable(class ASTExtraGameStateBase* GameState, bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.SetDestructibleEnable");

	USTDestructionSubSystem_SetDestructibleEnable_Params params;
	params.GameState = GameState;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnVehicleHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitActor                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 DestroyCenter                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void USTDestructionSubSystem::OnVehicleHit(class AActor* OtherActor, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& DestroyCenter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnVehicleHit");

	USTDestructionSubSystem_OnVehicleHit_Params params;
	params.OtherActor = OtherActor;
	params.HitActor = HitActor;
	params.HitComp = HitComp;
	params.DestroyCenter = DestroyCenter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnSTGameStateBeginPlay
// (Final, Native, Public)
// Parameters:
// class AGameState*              GameState                      (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::OnSTGameStateBeginPlay(class AGameState* GameState)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnSTGameStateBeginPlay");

	USTDestructionSubSystem_OnSTGameStateBeginPlay_Params params;
	params.GameState = GameState;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnServerRifleHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  HitActor                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 DestroyCenter                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          OriginDamage                   (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::OnServerRifleHit(class AActor* OtherActor, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& DestroyCenter, float OriginDamage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnServerRifleHit");

	USTDestructionSubSystem_OnServerRifleHit_Params params;
	params.OtherActor = OtherActor;
	params.HitActor = HitActor;
	params.HitComp = HitComp;
	params.DestroyCenter = DestroyCenter;
	params.OriginDamage = OriginDamage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnServerMeleeHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DestroyCenter                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          OriginDamage                   (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::OnServerMeleeHit(class AActor* OtherActor, const struct FVector& DestroyCenter, float OriginDamage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnServerMeleeHit");

	USTDestructionSubSystem_OnServerMeleeHit_Params params;
	params.OtherActor = OtherActor;
	params.DestroyCenter = DestroyCenter;
	params.OriginDamage = OriginDamage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnServerGrenadeExplosion
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DestroyCenter                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          OriginRange                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          OriginDamage                   (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::OnServerGrenadeExplosion(class AActor* OtherActor, const struct FVector& DestroyCenter, float OriginRange, float OriginDamage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnServerGrenadeExplosion");

	USTDestructionSubSystem_OnServerGrenadeExplosion_Params params;
	params.OtherActor = OtherActor;
	params.DestroyCenter = DestroyCenter;
	params.OriginRange = OriginRange;
	params.OriginDamage = OriginDamage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionSubSystem.OnServerExplosin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          OriginRange                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          OriginDamage                   (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionSubSystem::OnServerExplosin(class AActor* OtherActor, const struct FHitResult& Hit, float OriginRange, float OriginDamage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionSubSystem.OnServerExplosin");

	USTDestructionSubSystem_OnServerExplosin_Params params;
	params.OtherActor = OtherActor;
	params.Hit = Hit;
	params.OriginRange = OriginRange;
	params.OriginDamage = OriginDamage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionUtils.SetDestructionEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void USTDestructionUtils::SetDestructionEnable(class UObject* WorldContextObject, bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionUtils.SetDestructionEnable");

	USTDestructionUtils_SetDestructionEnable_Params params;
	params.WorldContextObject = WorldContextObject;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.STDestructionUtils.GetBPUtils
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USTDestructionBPUtils*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USTDestructionBPUtils* USTDestructionUtils::GetBPUtils()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.STDestructionUtils.GetBPUtils");

	USTDestructionUtils_GetBPUtils_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.OnRep_TotalPlayersStaticInfo
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_TotalPlayersStaticInfo()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_TotalPlayersStaticInfo");

	ASyncOBDataActor_OnRep_TotalPlayersStaticInfo_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_RefreshTotalPlayers
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_RefreshTotalPlayers()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_RefreshTotalPlayers");

	ASyncOBDataActor_OnRep_RefreshTotalPlayers_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_RefreshAirDropBox
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_RefreshAirDropBox()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_RefreshAirDropBox");

	ASyncOBDataActor_OnRep_RefreshAirDropBox_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_RealTimeAPIListForReplay
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_RealTimeAPIListForReplay()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_RealTimeAPIListForReplay");

	ASyncOBDataActor_OnRep_RealTimeAPIListForReplay_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_PlayerFiringList
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_PlayerFiringList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_PlayerFiringList");

	ASyncOBDataActor_OnRep_PlayerFiringList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_PlayerBreathInfoList
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_PlayerBreathInfoList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_PlayerBreathInfoList");

	ASyncOBDataActor_OnRep_PlayerBreathInfoList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.OnRep_AfterMatchAPIListForReplay
// (Final, Native, Public)

void ASyncOBDataActor::OnRep_AfterMatchAPIListForReplay()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.OnRep_AfterMatchAPIListForReplay");

	ASyncOBDataActor_OnRep_AfterMatchAPIListForReplay_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.SyncOBDataActor.GetPlayerInfoInOBByPlayerKey
// (Final, Native, Public)
// Parameters:
// uint32_t                       InPlayerKey                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerInfoInOB         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPlayerInfoInOB ASyncOBDataActor::GetPlayerInfoInOBByPlayerKey(uint32_t InPlayerKey)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetPlayerInfoInOBByPlayerKey");

	ASyncOBDataActor_GetPlayerInfoInOBByPlayerKey_Params params;
	params.InPlayerKey = InPlayerKey;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetPlayerInfoInOBByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InPlayerName                   (Parm, ZeroConstructor)
// struct FPlayerInfoInOB         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPlayerInfoInOB ASyncOBDataActor::GetPlayerInfoInOBByName(const struct FString& InPlayerName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetPlayerInfoInOBByName");

	ASyncOBDataActor_GetPlayerInfoInOBByName_Params params;
	params.InPlayerName = InPlayerName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetNewestAirDropBoxPos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASyncOBDataActor::GetNewestAirDropBoxPos()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetNewestAirDropBoxPos");

	ASyncOBDataActor_GetNewestAirDropBoxPos_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetNearPlayerList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPlayerInfoInOB> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPlayerInfoInOB> ASyncOBDataActor::GetNearPlayerList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetNearPlayerList");

	ASyncOBDataActor_GetNearPlayerList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetCustomPlayerNameByPlayerName
// (Final, Native, Private, Const)
// Parameters:
// struct FString                 PlayerName                     (ConstParm, Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASyncOBDataActor::GetCustomPlayerNameByPlayerName(const struct FString& PlayerName)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetCustomPlayerNameByPlayerName");

	ASyncOBDataActor_GetCustomPlayerNameByPlayerName_Params params;
	params.PlayerName = PlayerName;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetBreath
// (Final, Native, Public)
// Parameters:
// uint32_t                       InPlayerKey                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASyncOBDataActor::GetBreath(uint32_t InPlayerKey)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetBreath");

	ASyncOBDataActor_GetBreath_Params params;
	params.InPlayerKey = InPlayerKey;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.SyncOBDataActor.GetAirDropBoxList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAirDropBoxInOb> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FAirDropBoxInOb> ASyncOBDataActor::GetAirDropBoxList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.SyncOBDataActor.GetAirDropBoxList");

	ASyncOBDataActor_GetAirDropBoxList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerUnderground
// (Final, Native, Public)
// Parameters:
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsUnderground                 (Parm, ZeroConstructor, IsPlainOldData)

void ATPlanSyncOBDataActor::SetTPlanPlayerUnderground(uint32_t PlayerKey, bool bIsUnderground)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerUnderground");

	ATPlanSyncOBDataActor_SetTPlanPlayerUnderground_Params params;
	params.PlayerKey = PlayerKey;
	params.bIsUnderground = bIsUnderground;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoWorth
// (Final, Native, Public)
// Parameters:
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Worth                          (Parm, ZeroConstructor, IsPlainOldData)

void ATPlanSyncOBDataActor::SetTPlanPlayerInfoWorth(int TeamID, uint32_t PlayerKey, int Worth)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoWorth");

	ATPlanSyncOBDataActor_SetTPlanPlayerInfoWorth_Params params;
	params.TeamID = TeamID;
	params.PlayerKey = PlayerKey;
	params.Worth = Worth;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoState
// (Final, Native, Public)
// Parameters:
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  State                          (Parm, ZeroConstructor, IsPlainOldData)

void ATPlanSyncOBDataActor::SetTPlanPlayerInfoState(int TeamID, uint32_t PlayerKey, unsigned char State)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoState");

	ATPlanSyncOBDataActor_SetTPlanPlayerInfoState_Params params;
	params.TeamID = TeamID;
	params.PlayerKey = PlayerKey;
	params.State = State;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoKills
// (Final, Native, Public)
// Parameters:
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Kills                          (Parm, ZeroConstructor, IsPlainOldData)

void ATPlanSyncOBDataActor::SetTPlanPlayerInfoKills(int TeamID, uint32_t PlayerKey, unsigned char Kills)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.SetTPlanPlayerInfoKills");

	ATPlanSyncOBDataActor_SetTPlanPlayerInfoKills_Params params;
	params.TeamID = TeamID;
	params.PlayerKey = PlayerKey;
	params.Kills = Kills;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.OnRep_TeamInfos
// (Final, Native, Public)

void ATPlanSyncOBDataActor::OnRep_TeamInfos()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.OnRep_TeamInfos");

	ATPlanSyncOBDataActor_OnRep_TeamInfos_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.OnRep_PlayerUndergroundList
// (Final, Native, Public)

void ATPlanSyncOBDataActor::OnRep_PlayerUndergroundList()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.OnRep_PlayerUndergroundList");

	ATPlanSyncOBDataActor_OnRep_PlayerUndergroundList_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.OnRefreshTeamInfos
// (Event, Public, BlueprintEvent)

void ATPlanSyncOBDataActor::OnRefreshTeamInfos()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.OnRefreshTeamInfos");

	ATPlanSyncOBDataActor_OnRefreshTeamInfos_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TPlanSyncOBDataActor.GetTPlanTeamInfo
// (Final, Native, Public)
// Parameters:
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTPlanTeamInfo          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTPlanTeamInfo ATPlanSyncOBDataActor::GetTPlanTeamInfo(int TeamID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.GetTPlanTeamInfo");

	ATPlanSyncOBDataActor_GetTPlanTeamInfo_Params params;
	params.TeamID = TeamID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TPlanSyncOBDataActor.GetTPlanPlayerInfo
// (Final, Native, Public)
// Parameters:
// int                            TeamID                         (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       PlayerKey                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FTPlanPlayerInfo        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTPlanPlayerInfo ATPlanSyncOBDataActor::GetTPlanPlayerInfo(int TeamID, uint32_t PlayerKey)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TPlanSyncOBDataActor.GetTPlanPlayerInfo");

	ATPlanSyncOBDataActor_GetTPlanPlayerInfo_Params params;
	params.TeamID = TeamID;
	params.PlayerKey = PlayerKey;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TRexVehicleDamageComponent.HandleFootOverlapVehicle
// (Final, Native, Public, HasOutParms)
// Parameters:
// class ASTExtraVehicleBase*     OverlappedVehicle              (Parm, ZeroConstructor, IsPlainOldData)
// class UShapeComponent*         DamageCollision                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FOverlapResult          OverlapResult                  (Parm, OutParm, IsPlainOldData)

void UTRexVehicleDamageComponent::HandleFootOverlapVehicle(class ASTExtraVehicleBase* OverlappedVehicle, class UShapeComponent* DamageCollision, struct FOverlapResult* OverlapResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TRexVehicleDamageComponent.HandleFootOverlapVehicle");

	UTRexVehicleDamageComponent_HandleFootOverlapVehicle_Params params;
	params.OverlappedVehicle = OverlappedVehicle;
	params.DamageCollision = DamageCollision;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OverlapResult != nullptr)
		*OverlapResult = params.OverlapResult;
}


// Function Addons.TRexVehicleDamageComponent.HandleFootOverlapCharacter
// (Final, Native, Public, HasOutParms)
// Parameters:
// class ASTExtraBaseCharacter*   OverlappedCharacter            (Parm, ZeroConstructor, IsPlainOldData)
// class UShapeComponent*         DamageCollision                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FOverlapResult          OverlapResult                  (Parm, OutParm, IsPlainOldData)

void UTRexVehicleDamageComponent::HandleFootOverlapCharacter(class ASTExtraBaseCharacter* OverlappedCharacter, class UShapeComponent* DamageCollision, struct FOverlapResult* OverlapResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TRexVehicleDamageComponent.HandleFootOverlapCharacter");

	UTRexVehicleDamageComponent_HandleFootOverlapCharacter_Params params;
	params.OverlappedCharacter = OverlappedCharacter;
	params.DamageCollision = DamageCollision;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (OverlapResult != nullptr)
		*OverlapResult = params.OverlapResult;
}


// Function Addons.TyrannosaurusRexAnimInstance.ResetStartMoving
// (Final, Native, Private)

void UTyrannosaurusRexAnimInstance::ResetStartMoving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexAnimInstance.ResetStartMoving");

	UTyrannosaurusRexAnimInstance_ResetStartMoving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ShowRoarOverSpeedTips
// (Native, Event, Public, BlueprintEvent)

void ATyrannosaurusRexVehicle::ShowRoarOverSpeedTips()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ShowRoarOverSpeedTips");

	ATyrannosaurusRexVehicle_ShowRoarOverSpeedTips_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ShakeNearbyPlayerCamera
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class UClass*                  CameraShakeClass               (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::ShakeNearbyPlayerCamera(class UClass* CameraShakeClass, float Radius)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ShakeNearbyPlayerCamera");

	ATyrannosaurusRexVehicle_ShakeNearbyPlayerCamera_Params params;
	params.CameraShakeClass = CameraShakeClass;
	params.Radius = Radius;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ServerStopRoar
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ATyrannosaurusRexVehicle::ServerStopRoar()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ServerStopRoar");

	ATyrannosaurusRexVehicle_ServerStopRoar_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ServerRoar
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ATyrannosaurusRexVehicle::ServerRoar()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ServerRoar");

	ATyrannosaurusRexVehicle_ServerRoar_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ServerBreakOut
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::ServerBreakOut(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ServerBreakOut");

	ATyrannosaurusRexVehicle_ServerBreakOut_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.PrepareApplyRoarAttack
// (Final, Native, Public)

void ATyrannosaurusRexVehicle::PrepareApplyRoarAttack()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.PrepareApplyRoarAttack");

	ATyrannosaurusRexVehicle_PrepareApplyRoarAttack_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.OnTRexHPCHanged
// (Final, Native, Public)
// Parameters:
// float                          NewHP                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          HPMax                          (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::OnTRexHPCHanged(float NewHP, float HPMax)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.OnTRexHPCHanged");

	ATyrannosaurusRexVehicle_OnTRexHPCHanged_Params params;
	params.NewHP = NewHP;
	params.HPMax = HPMax;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.OnRoarFinished
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<enum EBioVehicleSkillStopReason> Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::OnRoarFinished(TEnumAsByte<enum EBioVehicleSkillStopReason> Reason)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.OnRoarFinished");

	ATyrannosaurusRexVehicle_OnRoarFinished_Params params;
	params.Reason = Reason;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.OnRep_bIsRoaring
// (Final, Native, Public)

void ATyrannosaurusRexVehicle::OnRep_bIsRoaring()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.OnRep_bIsRoaring");

	ATyrannosaurusRexVehicle_OnRep_bIsRoaring_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.GetVehicleMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URaptorMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class URaptorMovementComponent* ATyrannosaurusRexVehicle::GetVehicleMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.GetVehicleMovement");

	ATyrannosaurusRexVehicle_GetVehicleMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TyrannosaurusRexVehicle.GetVehicleBreakOutState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATyrannosaurusRexVehicle::GetVehicleBreakOutState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.GetVehicleBreakOutState");

	ATyrannosaurusRexVehicle_GetVehicleBreakOutState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TyrannosaurusRexVehicle.GetNearlyPlayers
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class ASTExtraBaseCharacter*> Results                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATyrannosaurusRexVehicle::GetNearlyPlayers(float Radius, TArray<class ASTExtraBaseCharacter*>* Results)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.GetNearlyPlayers");

	ATyrannosaurusRexVehicle_GetNearlyPlayers_Params params;
	params.Radius = Radius;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	if (Results != nullptr)
		*Results = params.Results;

	return params.ReturnValue;
}


// Function Addons.TyrannosaurusRexVehicle.EndRoarAttack
// (Final, Native, Public)

void ATyrannosaurusRexVehicle::EndRoarAttack()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.EndRoarAttack");

	ATyrannosaurusRexVehicle_EndRoarAttack_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ClientHandleVehicleDead
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           VehicleDeadDirection           (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::ClientHandleVehicleDead(bool VehicleDeadDirection)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ClientHandleVehicleDead");

	ATyrannosaurusRexVehicle_ClientHandleVehicleDead_Params params;
	params.VehicleDeadDirection = VehicleDeadDirection;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.CheckCanApplyDamageTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATyrannosaurusRexVehicle::CheckCanApplyDamageTo(class ASTExtraBaseCharacter* Target)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.CheckCanApplyDamageTo");

	ATyrannosaurusRexVehicle_CheckCanApplyDamageTo_Params params;
	params.Target = Target;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.TyrannosaurusRexVehicle.CallClientDrawDebugSphere
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::CallClientDrawDebugSphere(const struct FVector& Location, float DeltaTime)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.CallClientDrawDebugSphere");

	ATyrannosaurusRexVehicle_CallClientDrawDebugSphere_Params params;
	params.Location = Location;
	params.DeltaTime = DeltaTime;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.BroadCastStopMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ATyrannosaurusRexVehicle::BroadCastStopMontage()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.BroadCastStopMontage");

	ATyrannosaurusRexVehicle_BroadCastStopMontage_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.BroadCastPlayRoarMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ATyrannosaurusRexVehicle::BroadCastPlayRoarMontage()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.BroadCastPlayRoarMontage");

	ATyrannosaurusRexVehicle_BroadCastPlayRoarMontage_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.BroadCastClientDrawSphere
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 Center                         (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::BroadCastClientDrawSphere(const struct FVector& Center, float Radius)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.BroadCastClientDrawSphere");

	ATyrannosaurusRexVehicle_BroadCastClientDrawSphere_Params params;
	params.Center = Center;
	params.Radius = Radius;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.BreakOut
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::BreakOut(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.BreakOut");

	ATyrannosaurusRexVehicle_BreakOut_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ApplyRoarAttackToSpecifiedCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void ATyrannosaurusRexVehicle::ApplyRoarAttackToSpecifiedCharacter(class ASTExtraBaseCharacter* TargetCharacter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ApplyRoarAttackToSpecifiedCharacter");

	ATyrannosaurusRexVehicle_ApplyRoarAttackToSpecifiedCharacter_Params params;
	params.TargetCharacter = TargetCharacter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.TyrannosaurusRexVehicle.ApplyRoarAttack
// (Final, Native, Public)

void ATyrannosaurusRexVehicle::ApplyRoarAttack()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.TyrannosaurusRexVehicle.ApplyRoarAttack");

	ATyrannosaurusRexVehicle_ApplyRoarAttack_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAERotatingMovementComponent.SetRotationToTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InTargetRotation               (Parm, IsPlainOldData)
// float                          MoveSeconds                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void UUAERotatingMovementComponent::SetRotationToTarget(const struct FRotator& InTargetRotation, float MoveSeconds, const struct FVector& TargetLocation)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAERotatingMovementComponent.SetRotationToTarget");

	UUAERotatingMovementComponent_SetRotationToTarget_Params params;
	params.InTargetRotation = InTargetRotation;
	params.MoveSeconds = MoveSeconds;
	params.TargetLocation = TargetLocation;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAERotatingMovementComponent.FaceToTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   InTargetCharacter              (Parm, ZeroConstructor, IsPlainOldData)

void UUAERotatingMovementComponent::FaceToTarget(class ASTExtraBaseCharacter* InTargetCharacter)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAERotatingMovementComponent.FaceToTarget");

	UUAERotatingMovementComponent_FaceToTarget_Params params;
	params.InTargetCharacter = InTargetCharacter;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAERotatingMovementComponent.EnableRotationToTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UUAERotatingMovementComponent::EnableRotationToTarget(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAERotatingMovementComponent.EnableRotationToTarget");

	UUAERotatingMovementComponent_EnableRotationToTarget_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAERotatingMovementComponent.EnableRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UUAERotatingMovementComponent::EnableRotation(bool bEnable)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAERotatingMovementComponent.EnableRotation");

	UUAERotatingMovementComponent_EnableRotation_Params params;
	params.bEnable = bEnable;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_ActorJump.OnActorLanded
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              InHitResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_ActorJump::OnActorLanded(const struct FHitResult& InHitResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_ActorJump.OnActorLanded");

	UUAESkillAction_ActorJump_OnActorLanded_Params params;
	params.InHitResult = InHitResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_ActorJump.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_ActorJump::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_ActorJump.HandleOnActorHit");

	UUAESkillAction_ActorJump_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_ActorMove.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_ActorMove::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_ActorMove.HandleOnActorHit");

	UUAESkillAction_ActorMove_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_ActorMoveToLocation.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_ActorMoveToLocation::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_ActorMoveToLocation.HandleOnActorHit");

	UUAESkillAction_ActorMoveToLocation_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_BindDelegate.OnDelegateBindCallback
// (Final, Native, Public)

void UUAESkillAction_BindDelegate::OnDelegateBindCallback()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_BindDelegate.OnDelegateBindCallback");

	UUAESkillAction_BindDelegate_OnDelegateBindCallback_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_CharMoveByPath.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_CharMoveByPath::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_CharMoveByPath.HandleOnActorHit");

	UUAESkillAction_CharMoveByPath_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_ConsumeHandleItem.PostInitSkill
// (Native, Public)
// Parameters:
// class UUTSkillManagerComponent* SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AUTSkill*                CurOwnerSkill                  (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillAction_ConsumeHandleItem::PostInitSkill(class UUTSkillManagerComponent* SkillManagerComponent, class AUTSkill* CurOwnerSkill)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_ConsumeHandleItem.PostInitSkill");

	UUAESkillAction_ConsumeHandleItem_PostInitSkill_Params params;
	params.SkillManagerComponent = SkillManagerComponent;
	params.CurOwnerSkill = CurOwnerSkill;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_EnableMove.UndoAction_Internal
// (Native, Public)

void UUAESkillAction_EnableMove::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_EnableMove.UndoAction_Internal");

	UUAESkillAction_EnableMove_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_EnableMove.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_EnableMove::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_EnableMove.RealDoAction_Internal");

	UUAESkillAction_EnableMove_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_FaceTarget.OnFaceActionEnd
// (Final, Native, Private)
// Parameters:
// class UUTSkillManagerComponent* SkillMgr                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUAESkillAction_FaceTarget::OnFaceActionEnd(class UUTSkillManagerComponent* SkillMgr)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_FaceTarget.OnFaceActionEnd");

	UUAESkillAction_FaceTarget_OnFaceActionEnd_Params params;
	params.SkillMgr = SkillMgr;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_FollowMoveActor.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_FollowMoveActor::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_FollowMoveActor.HandleOnActorHit");

	UUAESkillAction_FollowMoveActor_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_Invincible.UndoAction_Internal
// (Native, Public)

void UUAESkillAction_Invincible::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_Invincible.UndoAction_Internal");

	UUAESkillAction_Invincible_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_Invincible.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_Invincible::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_Invincible.RealDoAction_Internal");

	UUAESkillAction_Invincible_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_JumpByStages.Rising
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_JumpByStages::Rising()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.Rising");

	UUAESkillAction_JumpByStages_Rising_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_JumpByStages.OnActorLanded
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FHitResult              InHitResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_JumpByStages::OnActorLanded(const struct FHitResult& InHitResult)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.OnActorLanded");

	UUAESkillAction_JumpByStages_OnActorLanded_Params params;
	params.InHitResult = InHitResult;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_JumpByStages.Hovering
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_JumpByStages::Hovering()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.Hovering");

	UUAESkillAction_JumpByStages_Hovering_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_JumpByStages.HandleOnActorHit
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_JumpByStages::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.HandleOnActorHit");

	UUAESkillAction_JumpByStages_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_JumpByStages.FreeFalling
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_JumpByStages::FreeFalling()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.FreeFalling");

	UUAESkillAction_JumpByStages_FreeFalling_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_JumpByStages.Diving
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_JumpByStages::Diving()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpByStages.Diving");

	UUAESkillAction_JumpByStages_Diving_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_JumpPhaseWithState.HandleChangeCurrentUsingWeapon
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<enum ESurviveWeaponPropSlot> TargetChangeSlot               (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillAction_JumpPhaseWithState::HandleChangeCurrentUsingWeapon(TEnumAsByte<enum ESurviveWeaponPropSlot> TargetChangeSlot)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_JumpPhaseWithState.HandleChangeCurrentUsingWeapon");

	UUAESkillAction_JumpPhaseWithState_HandleChangeCurrentUsingWeapon_Params params;
	params.TargetChangeSlot = TargetChangeSlot;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_Log.UndoAction_Internal
// (Native, Public)

void UUAESkillAction_Log::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_Log.UndoAction_Internal");

	UUAESkillAction_Log_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_MarkCurrentUseWeapon.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_MarkCurrentUseWeapon::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_MarkCurrentUseWeapon.RealDoAction_Internal");

	UUAESkillAction_MarkCurrentUseWeapon_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_MoveToRelativeLocation.HandleOnActorHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UUAESkillAction_MoveToRelativeLocation::HandleOnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_MoveToRelativeLocation.HandleOnActorHit");

	UUAESkillAction_MoveToRelativeLocation_HandleOnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_PeriodAction.UndoPeriodAction
// (Final, Native, Public)
// Parameters:
// class UActorComponent*         SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUAESkillAction_PeriodAction::UndoPeriodAction(class UActorComponent* SkillManagerComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_PeriodAction.UndoPeriodAction");

	UUAESkillAction_PeriodAction_UndoPeriodAction_Params params;
	params.SkillManagerComponent = SkillManagerComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_PeriodAction.DoPeriodAction
// (Final, Native, Public)
// Parameters:
// class UActorComponent*         SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUAESkillAction_PeriodAction::DoPeriodAction(class UActorComponent* SkillManagerComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_PeriodAction.DoPeriodAction");

	UUAESkillAction_PeriodAction_DoPeriodAction_Params params;
	params.SkillManagerComponent = SkillManagerComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_PlayAvatarAction.OnAsyncLoadHandlesDone
// (Final, Native, Public, HasOutParms)
// Parameters:
// int                            InAsyncLoadIndex               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UBattleItemHandleBase*> AvatarHandles                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FItemDefineID>   DefineIDList                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUAESkillAction_PlayAvatarAction::OnAsyncLoadHandlesDone(int InAsyncLoadIndex, TArray<class UBattleItemHandleBase*> AvatarHandles, TArray<struct FItemDefineID> DefineIDList)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_PlayAvatarAction.OnAsyncLoadHandlesDone");

	UUAESkillAction_PlayAvatarAction_OnAsyncLoadHandlesDone_Params params;
	params.InAsyncLoadIndex = InAsyncLoadIndex;
	params.AvatarHandles = AvatarHandles;
	params.DefineIDList = DefineIDList;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_PlayMontage_IsArmed.OnAsyncLoadAnimResFinished
// (Final, Native, Public)
// Parameters:
// struct FPlayMontageAsyncloadParams LoadParams                     (Parm)

void UUAESkillAction_PlayMontage_IsArmed::OnAsyncLoadAnimResFinished(const struct FPlayMontageAsyncloadParams& LoadParams)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_PlayMontage_IsArmed.OnAsyncLoadAnimResFinished");

	UUAESkillAction_PlayMontage_IsArmed_OnAsyncLoadAnimResFinished_Params params;
	params.LoadParams = LoadParams;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_PlayMontage_Pose_IsArmed.OnAsyncLoadAnimResFinished
// (Final, Native, Public)
// Parameters:
// struct FPlayMontageAsyncloadParams LoadParams                     (Parm)

void UUAESkillAction_PlayMontage_Pose_IsArmed::OnAsyncLoadAnimResFinished(const struct FPlayMontageAsyncloadParams& LoadParams)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_PlayMontage_Pose_IsArmed.OnAsyncLoadAnimResFinished");

	UUAESkillAction_PlayMontage_Pose_IsArmed_OnAsyncLoadAnimResFinished_Params params;
	params.LoadParams = LoadParams;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_SetCameraData.ResetCameraData
// (Final, Native, Private)
// Parameters:
// class UActorComponent*         NewOwnerActorComponent         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUAESkillAction_SetCameraData::ResetCameraData(class UActorComponent* NewOwnerActorComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_SetCameraData.ResetCameraData");

	UUAESkillAction_SetCameraData_ResetCameraData_Params params;
	params.NewOwnerActorComponent = NewOwnerActorComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_UIMessage.UndoAction_Internal
// (Native, Public)

void UUAESkillAction_UIMessage::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_UIMessage.UndoAction_Internal");

	UUAESkillAction_UIMessage_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UAESkillAction_UIMessage.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillAction_UIMessage::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_UIMessage.RealDoAction_Internal");

	UUAESkillAction_UIMessage_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_UIMessage.GetOwernPawnController
// (Final, Native, Private)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* UUAESkillAction_UIMessage::GetOwernPawnController()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_UIMessage.GetOwernPawnController");

	UUAESkillAction_UIMessage_GetOwernPawnController_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UAESkillAction_UpdateSyncBlackboardV.OnReceiveUpdateSyncBlackboardV
// (Final, Native, Public)
// Parameters:
// class UUTSkillManagerComponent* SkillMgr                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            nSkillID                       (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillAction_UpdateSyncBlackboardV::OnReceiveUpdateSyncBlackboardV(class UUTSkillManagerComponent* SkillMgr, int nSkillID)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UAESkillAction_UpdateSyncBlackboardV.OnReceiveUpdateSyncBlackboardV");

	UUAESkillAction_UpdateSyncBlackboardV_OnReceiveUpdateSyncBlackboardV_Params params;
	params.SkillMgr = SkillMgr;
	params.nSkillID = nSkillID;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_AddParticle.UndoAction_Internal
// (Native, Public)

void UUTSkillAppearance_AddParticle::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_AddParticle.UndoAction_Internal");

	UUTSkillAppearance_AddParticle_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_AddParticle.Reset_Internal
// (Native, Public)

void UUTSkillAppearance_AddParticle::Reset_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_AddParticle.Reset_Internal");

	UUTSkillAppearance_AddParticle_Reset_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_AddParticle.OnParticleSystemFinished
// (Final, Native, Private)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_AddParticle::OnParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_AddParticle.OnParticleSystemFinished");

	UUTSkillAppearance_AddParticle_OnParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_ParticleSystem.StopParticleSystem
// (Final, Native, Public)
// Parameters:
// class UUTSkillManagerComponent* SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::StopParticleSystem(class UUTSkillManagerComponent* SkillManagerComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_ParticleSystem.StopParticleSystem");

	UUTSkillAppearance_ParticleSystem_StopParticleSystem_Params params;
	params.SkillManagerComponent = SkillManagerComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_ParticleSystem.RealDoActionWrapper
// (Final, Native, Public)
// Parameters:
// class UUTSkillManagerComponent* SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::RealDoActionWrapper(class UUTSkillManagerComponent* SkillManagerComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_ParticleSystem.RealDoActionWrapper");

	UUTSkillAppearance_ParticleSystem_RealDoActionWrapper_Params params;
	params.SkillManagerComponent = SkillManagerComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_ParticleSystem.OnHurtAppearanceParticleSystemFinished
// (Native, Public)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::OnHurtAppearanceParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_ParticleSystem.OnHurtAppearanceParticleSystemFinished");

	UUTSkillAppearance_ParticleSystem_OnHurtAppearanceParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_ParticleSystem.OnAppearanceParticleSystemFinished
// (Native, Public)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::OnAppearanceParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_ParticleSystem.OnAppearanceParticleSystemFinished");

	UUTSkillAppearance_ParticleSystem_OnAppearanceParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_ParticleSystem.GetPlayRateScale
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTSkillAppearance_ParticleSystem::GetPlayRateScale()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_ParticleSystem.GetPlayRateScale");

	UUTSkillAppearance_ParticleSystem_GetPlayRateScale_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UTSkillAppearance_RemoveAllParticle.UndoAction_Internal
// (Native, Public)

void UUTSkillAppearance_RemoveAllParticle::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RemoveAllParticle.UndoAction_Internal");

	UUTSkillAppearance_RemoveAllParticle_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_RemoveAllParticle.Reset_Internal
// (Native, Public)

void UUTSkillAppearance_RemoveAllParticle::Reset_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RemoveAllParticle.Reset_Internal");

	UUTSkillAppearance_RemoveAllParticle_Reset_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_RemoveAllParticle.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTSkillAppearance_RemoveAllParticle::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RemoveAllParticle.RealDoAction_Internal");

	UUTSkillAppearance_RemoveAllParticle_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UTSkillAppearance_RomoveParticle.UndoAction_Internal
// (Native, Public)

void UUTSkillAppearance_RomoveParticle::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RomoveParticle.UndoAction_Internal");

	UUTSkillAppearance_RomoveParticle_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_RomoveParticle.Reset_Internal
// (Native, Public)

void UUTSkillAppearance_RomoveParticle::Reset_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RomoveParticle.Reset_Internal");

	UUTSkillAppearance_RomoveParticle_Reset_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_RomoveParticle.RealDoAction_Internal
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTSkillAppearance_RomoveParticle::RealDoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_RomoveParticle.RealDoAction_Internal");

	UUTSkillAppearance_RomoveParticle_RealDoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.UTSkillAppearance_SimpleParticleSystem.RealDoActionWrapper
// (Final, Native, Public)
// Parameters:
// class UUTSkillManagerComponent* SkillManagerComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_SimpleParticleSystem::RealDoActionWrapper(class UUTSkillManagerComponent* SkillManagerComponent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_SimpleParticleSystem.RealDoActionWrapper");

	UUTSkillAppearance_SimpleParticleSystem_RealDoActionWrapper_Params params;
	params.SkillManagerComponent = SkillManagerComponent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.UTSkillAppearance_SkillWarning.UndoAction_Internal
// (Native, Public)

void UUTSkillAppearance_SkillWarning::UndoAction_Internal()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.UTSkillAppearance_SkillWarning.UndoAction_Internal");

	UUTSkillAppearance_SkillWarning_UndoAction_Internal_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.TryToAttachOtherVehicle
// (Final, Native, Public, BlueprintCallable)

void UVehicleAttachmentComponent::TryToAttachOtherVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.TryToAttachOtherVehicle");

	UVehicleAttachmentComponent_TryToAttachOtherVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.SetAttachState
// (Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleAttachmentComponent::SetAttachState(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.SetAttachState");

	UVehicleAttachmentComponent_SetAttachState_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.ServerDoAttachVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleAttachmentComponent::ServerDoAttachVehicle(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.ServerDoAttachVehicle");

	UVehicleAttachmentComponent_ServerDoAttachVehicle_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.OnRep_AttachedVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     PrevVehicle                    (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleAttachmentComponent::OnRep_AttachedVehicle(class ASTExtraVehicleBase* PrevVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.OnRep_AttachedVehicle");

	UVehicleAttachmentComponent_OnRep_AttachedVehicle_Params params;
	params.PrevVehicle = PrevVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.GetAttachState
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleAttachmentComponent::GetAttachState()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.GetAttachState");

	UVehicleAttachmentComponent_GetAttachState_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.GetAttachedVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* UVehicleAttachmentComponent::GetAttachedVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.GetAttachedVehicle");

	UVehicleAttachmentComponent_GetAttachedVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.DoAttachVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleAttachmentComponent::DoAttachVehicle(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.DoAttachVehicle");

	UVehicleAttachmentComponent_DoAttachVehicle_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.CheckSurroundingVehicle
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleAttachmentComponent::CheckSurroundingVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.CheckSurroundingVehicle");

	UVehicleAttachmentComponent_CheckSurroundingVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.CanInteractedByOther
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleAttachmentComponent::CanInteractedByOther()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.CanInteractedByOther");

	UVehicleAttachmentComponent_CanInteractedByOther_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.CanAttachVehicle
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleAttachmentComponent::CanAttachVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.CanAttachVehicle");

	UVehicleAttachmentComponent_CanAttachVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleAttachmentComponent.CallServerToAttach
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UVehicleAttachmentComponent::CallServerToAttach()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.CallServerToAttach");

	UVehicleAttachmentComponent_CallServerToAttach_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleAttachmentComponent.BroadcastClientVehicleAttachment
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class ASTExtraVehicleBase*     OtherVehicle                   (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleAttachmentComponent::BroadcastClientVehicleAttachment(class ASTExtraVehicleBase* OtherVehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleAttachmentComponent.BroadcastClientVehicleAttachment");

	UVehicleAttachmentComponent_BroadcastClientVehicleAttachment_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleHitBioVHComponent.OnTriggeredBy
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTriggerEvent           TriggerEvent                   (ConstParm, Parm, OutParm, ReferenceParm)

void UVehicleHitBioVHComponent::OnTriggeredBy(class AActor* Other, const struct FTriggerEvent& TriggerEvent)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleHitBioVHComponent.OnTriggeredBy");

	UVehicleHitBioVHComponent_OnTriggeredBy_Params params;
	params.Other = Other;
	params.TriggerEvent = TriggerEvent;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleHitBioVHComponent.GetTriggerForVehicle
// (Final, Native, Public)
// Parameters:
// class UCapsuleComponent*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCapsuleComponent* UVehicleHitBioVHComponent::GetTriggerForVehicle()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleHitBioVHComponent.GetTriggerForVehicle");

	UVehicleHitBioVHComponent_GetTriggerForVehicle_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleLODlimitActor.OnVehicleEndPlay
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)

void AVehicleLODlimitActor::OnVehicleEndPlay(class ASTExtraVehicleBase* Vehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleLODlimitActor.OnVehicleEndPlay");

	AVehicleLODlimitActor_OnVehicleEndPlay_Params params;
	params.Vehicle = Vehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleLODlimitActor.OnVehicleBeginPlay
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)

void AVehicleLODlimitActor::OnVehicleBeginPlay(class ASTExtraVehicleBase* Vehicle)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleLODlimitActor.OnVehicleBeginPlay");

	AVehicleLODlimitActor_OnVehicleBeginPlay_Params params;
	params.Vehicle = Vehicle;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleLODlimitActor.OnUpdateSeatGUI
// (Final, Native, Public)

void AVehicleLODlimitActor::OnUpdateSeatGUI()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleLODlimitActor.OnUpdateSeatGUI");

	AVehicleLODlimitActor_OnUpdateSeatGUI_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleRubberDuck.GetVehicleMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFloatingVehicleVehicleMovementComponent2* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFloatingVehicleVehicleMovementComponent2* AVehicleRubberDuck::GetVehicleMovement()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleRubberDuck.GetVehicleMovement");

	AVehicleRubberDuck_GetVehicleMovement_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleRubberDuck.GetForwardSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AVehicleRubberDuck::GetForwardSpeed()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleRubberDuck.GetForwardSpeed");

	AVehicleRubberDuck_GetForwardSpeed_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VehicleSyncComponent_Hover.SendServerHoverMoveToClient
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// float                          ServerAcceleration             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMaxSpeed                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerMaxAcceleration          (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent_Hover::SendServerHoverMoveToClient(float ServerAcceleration, float ServerMaxSpeed, float ServerMaxAcceleration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleSyncComponent_Hover.SendServerHoverMoveToClient");

	UVehicleSyncComponent_Hover_SendServerHoverMoveToClient_Params params;
	params.ServerAcceleration = ServerAcceleration;
	params.ServerMaxSpeed = ServerMaxSpeed;
	params.ServerMaxAcceleration = ServerMaxAcceleration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VehicleSyncComponent_Hover.Correct
// (Native, Protected)
// Parameters:
// bool                           bIsSnap                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayerChannel                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ZAdjustValue                   (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent_Hover::Correct(bool bIsSnap, bool bPlayerChannel, float ZAdjustValue)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VehicleSyncComponent_Hover.Correct");

	UVehicleSyncComponent_Hover_Correct_Params params;
	params.bIsSnap = bIsSnap;
	params.bPlayerChannel = bPlayerChannel;
	params.ZAdjustValue = ZAdjustValue;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.UnbindDelegate
// (Final, Native, Public)

void UVenomArmAnimInstance::UnbindDelegate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.UnbindDelegate");

	UVenomArmAnimInstance_UnbindDelegate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.HandleOnOwnerPlayerPlayMontage
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            PlayedMontage                  (Parm, ZeroConstructor, IsPlainOldData)

void UVenomArmAnimInstance::HandleOnOwnerPlayerPlayMontage(class UAnimMontage* PlayedMontage)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.HandleOnOwnerPlayerPlayMontage");

	UVenomArmAnimInstance_HandleOnOwnerPlayerPlayMontage_Params params;
	params.PlayedMontage = PlayedMontage;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.HandleOnOwnerPlayerEndMontage
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            EndedMontage                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UVenomArmAnimInstance::HandleOnOwnerPlayerEndMontage(class UAnimMontage* EndedMontage, bool bInterrupted)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.HandleOnOwnerPlayerEndMontage");

	UVenomArmAnimInstance_HandleOnOwnerPlayerEndMontage_Params params;
	params.EndedMontage = EndedMontage;
	params.bInterrupted = bInterrupted;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpOnTargetLocationFound
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpOnTargetLocationFound()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpOnTargetLocationFound");

	UVenomArmAnimInstance_BpOnTargetLocationFound_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerPullObjEnd
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerPullObjEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerPullObjEnd");

	UVenomArmAnimInstance_BpHandleOnPlayerPullObjEnd_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerPullObj
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerPullObj()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerPullObj");

	UVenomArmAnimInstance_BpHandleOnPlayerPullObj_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchObjEnd
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerCatchObjEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchObjEnd");

	UVenomArmAnimInstance_BpHandleOnPlayerCatchObjEnd_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchObj
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerCatchObj()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchObj");

	UVenomArmAnimInstance_BpHandleOnPlayerCatchObj_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchFlyEnd
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerCatchFlyEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchFlyEnd");

	UVenomArmAnimInstance_BpHandleOnPlayerCatchFlyEnd_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchFly
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerCatchFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerCatchFly");

	UVenomArmAnimInstance_BpHandleOnPlayerCatchFly_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerAirCatchFlyEnd
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerAirCatchFlyEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerAirCatchFlyEnd");

	UVenomArmAnimInstance_BpHandleOnPlayerAirCatchFlyEnd_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BpHandleOnPlayerAirCatchFly
// (Event, Public, BlueprintEvent)

void UVenomArmAnimInstance::BpHandleOnPlayerAirCatchFly()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BpHandleOnPlayerAirCatchFly");

	UVenomArmAnimInstance_BpHandleOnPlayerAirCatchFly_Params params;

	auto flags = pFunc->FunctionFlags;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomArmAnimInstance.BindDelegate
// (Final, Native, Public)

void UVenomArmAnimInstance::BindDelegate()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomArmAnimInstance.BindDelegate");

	UVenomArmAnimInstance_BindDelegate_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VenomTwoArmAnimInstance.DoIKTrace
// (Final, Native, Public, BlueprintCallable)

void UVenomTwoArmAnimInstance::DoIKTrace()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VenomTwoArmAnimInstance.DoIKTrace");

	UVenomTwoArmAnimInstance_DoIKTrace_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.StopContinuous
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TaskId                         (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::StopContinuous(int TaskId)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.StopContinuous");

	UVisualDebugComponent_StopContinuous_Params params;
	params.TaskId = TaskId;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Text
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Text         Text                           (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Text(const struct FDrawShape_Text& Text)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Text");

	UVisualDebugComponent_RPC_DrawDebug_Text_Params params;
	params.Text = Text;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_StopMultiShapes
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// int                            TaskId                         (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::RPC_DrawDebug_StopMultiShapes(int TaskId)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_StopMultiShapes");

	UVisualDebugComponent_RPC_DrawDebug_StopMultiShapes_Params params;
	params.TaskId = TaskId;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Sphere
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Sphere       Sphere                         (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Sphere(const struct FDrawShape_Sphere& Sphere)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Sphere");

	UVisualDebugComponent_RPC_DrawDebug_Sphere_Params params;
	params.Sphere = Sphere;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_MultiShapes
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FDrawShape_Sphere> Spheres                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FDrawShape_Line> Lines                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_MultiShapes(TArray<struct FDrawShape_Sphere> Spheres, TArray<struct FDrawShape_Line> Lines)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_MultiShapes");

	UVisualDebugComponent_RPC_DrawDebug_MultiShapes_Params params;
	params.Spheres = Spheres;
	params.Lines = Lines;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Line
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Line         Line                           (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Line(const struct FDrawShape_Line& Line)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Line");

	UVisualDebugComponent_RPC_DrawDebug_Line_Params params;
	params.Line = Line;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Cylinder
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Cylinder     Cylinder                       (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Cylinder(const struct FDrawShape_Cylinder& Cylinder)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Cylinder");

	UVisualDebugComponent_RPC_DrawDebug_Cylinder_Params params;
	params.Cylinder = Cylinder;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Capsule
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Capsule      Capsule                        (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Capsule(const struct FDrawShape_Capsule& Capsule)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Capsule");

	UVisualDebugComponent_RPC_DrawDebug_Capsule_Params params;
	params.Capsule = Capsule;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.RPC_DrawDebug_Box
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FDrawShape_Box          Box                            (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::RPC_DrawDebug_Box(const struct FDrawShape_Box& Box)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.RPC_DrawDebug_Box");

	UVisualDebugComponent_RPC_DrawDebug_Box_Params params;
	params.Box = Box;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Sphere
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDrawShape_Sphere       Sphere                         (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::NetMulticast_DrawDebug_Sphere(const struct FDrawShape_Sphere& Sphere)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Sphere");

	UVisualDebugComponent_NetMulticast_DrawDebug_Sphere_Params params;
	params.Sphere = Sphere;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Line
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDrawShape_Line         Line                           (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::NetMulticast_DrawDebug_Line(const struct FDrawShape_Line& Line)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Line");

	UVisualDebugComponent_NetMulticast_DrawDebug_Line_Params params;
	params.Line = Line;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Cylinder
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDrawShape_Cylinder     Cylinder                       (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::NetMulticast_DrawDebug_Cylinder(const struct FDrawShape_Cylinder& Cylinder)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Cylinder");

	UVisualDebugComponent_NetMulticast_DrawDebug_Cylinder_Params params;
	params.Cylinder = Cylinder;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Capsule
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDrawShape_Capsule      Capsule                        (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::NetMulticast_DrawDebug_Capsule(const struct FDrawShape_Capsule& Capsule)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Capsule");

	UVisualDebugComponent_NetMulticast_DrawDebug_Capsule_Params params;
	params.Capsule = Capsule;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Box
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDrawShape_Box          Box                            (ConstParm, Parm, ReferenceParm)

void UVisualDebugComponent::NetMulticast_DrawDebug_Box(const struct FDrawShape_Box& Box)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.NetMulticast_DrawDebug_Box");

	UVisualDebugComponent_NetMulticast_DrawDebug_Box_Params params;
	params.Box = Box;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.MarkContinuousEnd
// (Final, Native, Public, BlueprintCallable)

void UVisualDebugComponent::MarkContinuousEnd()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.MarkContinuousEnd");

	UVisualDebugComponent_MarkContinuousEnd_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.MarkContinuousBegin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UVisualDebugComponent::MarkContinuousBegin()
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.MarkContinuousBegin");

	UVisualDebugComponent_MarkContinuousBegin_Params params;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VisualDebugComponent.DrawString
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TextLocation                   (ConstParm, Parm, IsPlainOldData)
// struct FString                 Text                           (Parm, ZeroConstructor)
// class AActor*                  TestBaseActor                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  TextColor                      (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawString(const struct FVector& TextLocation, const struct FString& Text, class AActor* TestBaseActor, const struct FColor& TextColor, float Duration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawString");

	UVisualDebugComponent_DrawString_Params params;
	params.TextLocation = TextLocation;
	params.Text = Text;
	params.TestBaseActor = TestBaseActor;
	params.TextColor = TextColor;
	params.Duration = Duration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.DrawSphere
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawSphere(const struct FVector& Center, float Radius, const struct FColor& Color, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawSphere");

	UVisualDebugComponent_DrawSphere_Params params;
	params.Center = Center;
	params.Radius = Radius;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.DrawLine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawLine(const struct FVector& Start, const struct FVector& End, const struct FColor& Color, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawLine");

	UVisualDebugComponent_DrawLine_Params params;
	params.Start = Start;
	params.End = End;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.DrawCylinder
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Segments                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawCylinder(const struct FVector& Start, const struct FVector& End, float Radius, int Segments, const struct FColor& Color, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawCylinder");

	UVisualDebugComponent_DrawCylinder_Params params;
	params.Start = Start;
	params.End = End;
	params.Radius = Radius;
	params.Segments = Segments;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.DrawCapsule
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat                   Rotation                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FColor                  Color                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawCapsule(class APawn* Requester, const struct FVector& Center, float HalfHeight, float Radius, const struct FQuat& Rotation, const struct FColor& Color, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawCapsule");

	UVisualDebugComponent_DrawCapsule_Params params;
	params.Requester = Requester;
	params.Center = Center;
	params.HalfHeight = HalfHeight;
	params.Radius = Radius;
	params.Rotation = Rotation;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugComponent.DrawBox
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Center                         (ConstParm, Parm, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugComponent::DrawBox(const struct FVector& Center, const struct FVector& Extent, const struct FColor& Color, const struct FRotator& Rotation, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugComponent.DrawBox");

	UVisualDebugComponent_DrawBox_Params params;
	params.Center = Center;
	params.Extent = Extent;
	params.Color = Color;
	params.Rotation = Rotation;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	UObject *currentObj = (UObject *) this;
	currentObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.StopDrawContinuous
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            TaskId                         (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::StopDrawContinuous(class APawn* Requester, int TaskId)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.StopDrawContinuous");

	UVisualDebugLibrary_StopDrawContinuous_Params params;
	params.Requester = Requester;
	params.TaskId = TaskId;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.MarkContinuousEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::MarkContinuousEnd(class APawn* Requester)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.MarkContinuousEnd");

	UVisualDebugLibrary_MarkContinuousEnd_Params params;
	params.Requester = Requester;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.MarkContinuousBegin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UVisualDebugLibrary::MarkContinuousBegin(class APawn* Requester)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.MarkContinuousBegin");

	UVisualDebugLibrary_MarkContinuousBegin_Params params;
	params.Requester = Requester;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Addons.VisualDebugLibrary.DrawText
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TextLocation                   (ConstParm, Parm, IsPlainOldData)
// struct FString                 Text                           (Parm, ZeroConstructor)
// class AActor*                  TestBaseActor                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawText(class APawn* Requester, const struct FVector& TextLocation, const struct FString& Text, class AActor* TestBaseActor, const struct FColor& Color, float Duration)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawText");

	UVisualDebugLibrary_DrawText_Params params;
	params.Requester = Requester;
	params.TextLocation = TextLocation;
	params.Text = Text;
	params.TestBaseActor = TestBaseActor;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.DrawSphere
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Segments                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawSphere(class APawn* Requester, const struct FVector& Center, float Radius, int Segments, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawSphere");

	UVisualDebugLibrary_DrawSphere_Params params;
	params.Requester = Requester;
	params.Center = Center;
	params.Radius = Radius;
	params.Segments = Segments;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.DrawLine
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 LineStart                      (ConstParm, Parm, IsPlainOldData)
// struct FVector                 LineEnd                        (ConstParm, Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawLine(class APawn* Requester, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawLine");

	UVisualDebugLibrary_DrawLine_Params params;
	params.Requester = Requester;
	params.LineStart = LineStart;
	params.LineEnd = LineEnd;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.DrawCylinder
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Segments                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawCylinder(class APawn* Requester, const struct FVector& Start, const struct FVector& End, float Radius, int Segments, const struct FColor& Color, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawCylinder");

	UVisualDebugLibrary_DrawCylinder_Params params;
	params.Requester = Requester;
	params.Start = Start;
	params.End = End;
	params.Radius = Radius;
	params.Segments = Segments;
	params.Color = Color;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.DrawCapsule
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FQuat                   Rotation                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FColor                  Color                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawCapsule(class APawn* Requester, const struct FVector& Center, float HalfHeight, float Radius, const struct FQuat& Rotation, const struct FColor& Color, float LifeTime, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawCapsule");

	UVisualDebugLibrary_DrawCapsule_Params params;
	params.Requester = Requester;
	params.Center = Center;
	params.HalfHeight = HalfHeight;
	params.Radius = Radius;
	params.Rotation = Rotation;
	params.Color = Color;
	params.LifeTime = LifeTime;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


// Function Addons.VisualDebugLibrary.DrawBox
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Requester                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, IsPlainOldData)
// struct FVector                 Extent                         (Parm, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UVisualDebugLibrary::DrawBox(class APawn* Requester, const struct FVector& Center, const struct FVector& Extent, const struct FColor& Color, const struct FRotator& Rotation, float Duration, float Thickness)
{
	static UFunction *pFunc = 0;
	if (!pFunc)
		pFunc  = UObject::FindObject<UFunction>("Function Addons.VisualDebugLibrary.DrawBox");

	UVisualDebugLibrary_DrawBox_Params params;
	params.Requester = Requester;
	params.Center = Center;
	params.Extent = Extent;
	params.Color = Color;
	params.Rotation = Rotation;
	params.Duration = Duration;
	params.Thickness = Thickness;

	auto flags = pFunc->FunctionFlags;
	pFunc->FunctionFlags |= 0x400;

	static auto defaultObj = StaticClass()->GetDefaultObject();
	defaultObj->ProcessEvent(pFunc, &params);

	pFunc->FunctionFlags = flags;
}


}

